var an=Object.defineProperty;var ln=(w,t,e)=>t in w?an(w,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):w[t]=e;var V=(w,t,e)=>ln(w,typeof t!="symbol"?t+"":t,e);import{W as hn,af as dn,ae as un,C as pn,i as fn,R as kt,ah as Ps,v as We,w as mn,E as we,am as Is,D as Ns,as as vn,x as Rs,aa as Ls,at as yn,g as ut,P as wn,au as qs}from"./5ecB4tJ3.js";import{c as xn,g as gn}from"./SzQcKhoD.js";import{G as bn}from"./Br_SFkwl.js";import{w as Ve,s as Zt,n as pt,c as fe,o as ks,r as Ws,v as An}from"./CHokvJ-H.js";import{S as Jt,i as Qt,d as $,a as rt,z as Xe,b as it,c as st,g as te,e as nt,l as Vt,f as En,j as St,m as je,h as Et,p as De,t as Oe,w as Pe,v as pe,x as Cn,y as zn,k as me,s as ve,B as Bn,D as Sn,F as Mn,E as _n,C as Fn}from"./DjQ7aYyS.js";import{w as Ht}from"./v_KfRiR6.js";import{e as $e}from"./C_OXLtGw.js";class Tn{constructor(){this.matrix={}}get(t,e){let{id:s}=t,{id:n}=e;if(n>s){const i=n;n=s,s=i}return`${s}-${n}`in this.matrix}set(t,e,s){let{id:n}=t,{id:i}=e;if(i>n){const o=i;i=n,n=o}s?this.matrix[`${n}-${i}`]=!0:delete this.matrix[`${n}-${i}`]}reset(){this.matrix={}}setNumObjects(t){}}class ot{constructor(t){t===void 0&&(t=[0,0,0,0,0,0,0,0,0]),this.elements=t}identity(){const t=this.elements;t[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=1,t[5]=0,t[6]=0,t[7]=0,t[8]=1}setZero(){const t=this.elements;t[0]=0,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=0,t[6]=0,t[7]=0,t[8]=0}setTrace(t){const e=this.elements;e[0]=t.x,e[4]=t.y,e[8]=t.z}getTrace(t){t===void 0&&(t=new h);const e=this.elements;return t.x=e[0],t.y=e[4],t.z=e[8],t}vmult(t,e){e===void 0&&(e=new h);const s=this.elements,n=t.x,i=t.y,o=t.z;return e.x=s[0]*n+s[1]*i+s[2]*o,e.y=s[3]*n+s[4]*i+s[5]*o,e.z=s[6]*n+s[7]*i+s[8]*o,e}smult(t){for(let e=0;e<this.elements.length;e++)this.elements[e]*=t}mmult(t,e){e===void 0&&(e=new ot);const s=this.elements,n=t.elements,i=e.elements,o=s[0],r=s[1],c=s[2],a=s[3],l=s[4],u=s[5],d=s[6],f=s[7],p=s[8],m=n[0],y=n[1],x=n[2],v=n[3],g=n[4],b=n[5],A=n[6],z=n[7],M=n[8];return i[0]=o*m+r*v+c*A,i[1]=o*y+r*g+c*z,i[2]=o*x+r*b+c*M,i[3]=a*m+l*v+u*A,i[4]=a*y+l*g+u*z,i[5]=a*x+l*b+u*M,i[6]=d*m+f*v+p*A,i[7]=d*y+f*g+p*z,i[8]=d*x+f*b+p*M,e}scale(t,e){e===void 0&&(e=new ot);const s=this.elements,n=e.elements;for(let i=0;i!==3;i++)n[3*i+0]=t.x*s[3*i+0],n[3*i+1]=t.y*s[3*i+1],n[3*i+2]=t.z*s[3*i+2];return e}solve(t,e){e===void 0&&(e=new h);const s=3,n=4,i=[];let o,r;for(o=0;o<s*n;o++)i.push(0);for(o=0;o<3;o++)for(r=0;r<3;r++)i[o+n*r]=this.elements[o+3*r];i[3+4*0]=t.x,i[3+4*1]=t.y,i[3+4*2]=t.z;let c=3;const a=c;let l;const u=4;let d;do{if(o=a-c,i[o+n*o]===0){for(r=o+1;r<a;r++)if(i[o+n*r]!==0){l=u;do d=u-l,i[d+n*o]+=i[d+n*r];while(--l);break}}if(i[o+n*o]!==0)for(r=o+1;r<a;r++){const f=i[o+n*r]/i[o+n*o];l=u;do d=u-l,i[d+n*r]=d<=o?0:i[d+n*r]-i[d+n*o]*f;while(--l)}}while(--c);if(e.z=i[2*n+3]/i[2*n+2],e.y=(i[1*n+3]-i[1*n+2]*e.z)/i[1*n+1],e.x=(i[0*n+3]-i[0*n+2]*e.z-i[0*n+1]*e.y)/i[0*n+0],isNaN(e.x)||isNaN(e.y)||isNaN(e.z)||e.x===1/0||e.y===1/0||e.z===1/0)throw`Could not solve equation! Got x=[${e.toString()}], b=[${t.toString()}], A=[${this.toString()}]`;return e}e(t,e,s){if(s===void 0)return this.elements[e+3*t];this.elements[e+3*t]=s}copy(t){for(let e=0;e<t.elements.length;e++)this.elements[e]=t.elements[e];return this}toString(){let t="";const e=",";for(let s=0;s<9;s++)t+=this.elements[s]+e;return t}reverse(t){t===void 0&&(t=new ot);const e=3,s=6,n=Pn;let i,o;for(i=0;i<3;i++)for(o=0;o<3;o++)n[i+s*o]=this.elements[i+3*o];n[3+6*0]=1,n[3+6*1]=0,n[3+6*2]=0,n[4+6*0]=0,n[4+6*1]=1,n[4+6*2]=0,n[5+6*0]=0,n[5+6*1]=0,n[5+6*2]=1;let r=3;const c=r;let a;const l=s;let u;do{if(i=c-r,n[i+s*i]===0){for(o=i+1;o<c;o++)if(n[i+s*o]!==0){a=l;do u=l-a,n[u+s*i]+=n[u+s*o];while(--a);break}}if(n[i+s*i]!==0)for(o=i+1;o<c;o++){const d=n[i+s*o]/n[i+s*i];a=l;do u=l-a,n[u+s*o]=u<=i?0:n[u+s*o]-n[u+s*i]*d;while(--a)}}while(--r);i=2;do{o=i-1;do{const d=n[i+s*o]/n[i+s*i];a=s;do u=s-a,n[u+s*o]=n[u+s*o]-n[u+s*i]*d;while(--a)}while(o--)}while(--i);i=2;do{const d=1/n[i+s*i];a=s;do u=s-a,n[u+s*i]=n[u+s*i]*d;while(--a)}while(i--);i=2;do{o=2;do{if(u=n[e+o+s*i],isNaN(u)||u===1/0)throw`Could not reverse! A=[${this.toString()}]`;t.e(i,o,u)}while(o--)}while(i--);return t}setRotationFromQuaternion(t){const e=t.x,s=t.y,n=t.z,i=t.w,o=e+e,r=s+s,c=n+n,a=e*o,l=e*r,u=e*c,d=s*r,f=s*c,p=n*c,m=i*o,y=i*r,x=i*c,v=this.elements;return v[3*0+0]=1-(d+p),v[3*0+1]=l-x,v[3*0+2]=u+y,v[3*1+0]=l+x,v[3*1+1]=1-(a+p),v[3*1+2]=f-m,v[3*2+0]=u-y,v[3*2+1]=f+m,v[3*2+2]=1-(a+d),this}transpose(t){t===void 0&&(t=new ot);const e=this.elements,s=t.elements;let n;return s[0]=e[0],s[4]=e[4],s[8]=e[8],n=e[1],s[1]=e[3],s[3]=n,n=e[2],s[2]=e[6],s[6]=n,n=e[5],s[5]=e[7],s[7]=n,t}}const Pn=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];class h{constructor(t,e,s){t===void 0&&(t=0),e===void 0&&(e=0),s===void 0&&(s=0),this.x=t,this.y=e,this.z=s}cross(t,e){e===void 0&&(e=new h);const s=t.x,n=t.y,i=t.z,o=this.x,r=this.y,c=this.z;return e.x=r*i-c*n,e.y=c*s-o*i,e.z=o*n-r*s,e}set(t,e,s){return this.x=t,this.y=e,this.z=s,this}setZero(){this.x=this.y=this.z=0}vadd(t,e){if(e)e.x=t.x+this.x,e.y=t.y+this.y,e.z=t.z+this.z;else return new h(this.x+t.x,this.y+t.y,this.z+t.z)}vsub(t,e){if(e)e.x=this.x-t.x,e.y=this.y-t.y,e.z=this.z-t.z;else return new h(this.x-t.x,this.y-t.y,this.z-t.z)}crossmat(){return new ot([0,-this.z,this.y,this.z,0,-this.x,-this.y,this.x,0])}normalize(){const t=this.x,e=this.y,s=this.z,n=Math.sqrt(t*t+e*e+s*s);if(n>0){const i=1/n;this.x*=i,this.y*=i,this.z*=i}else this.x=0,this.y=0,this.z=0;return n}unit(t){t===void 0&&(t=new h);const e=this.x,s=this.y,n=this.z;let i=Math.sqrt(e*e+s*s+n*n);return i>0?(i=1/i,t.x=e*i,t.y=s*i,t.z=n*i):(t.x=1,t.y=0,t.z=0),t}length(){const t=this.x,e=this.y,s=this.z;return Math.sqrt(t*t+e*e+s*s)}lengthSquared(){return this.dot(this)}distanceTo(t){const e=this.x,s=this.y,n=this.z,i=t.x,o=t.y,r=t.z;return Math.sqrt((i-e)*(i-e)+(o-s)*(o-s)+(r-n)*(r-n))}distanceSquared(t){const e=this.x,s=this.y,n=this.z,i=t.x,o=t.y,r=t.z;return(i-e)*(i-e)+(o-s)*(o-s)+(r-n)*(r-n)}scale(t,e){e===void 0&&(e=new h);const s=this.x,n=this.y,i=this.z;return e.x=t*s,e.y=t*n,e.z=t*i,e}vmul(t,e){return e===void 0&&(e=new h),e.x=t.x*this.x,e.y=t.y*this.y,e.z=t.z*this.z,e}addScaledVector(t,e,s){return s===void 0&&(s=new h),s.x=this.x+t*e.x,s.y=this.y+t*e.y,s.z=this.z+t*e.z,s}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}isZero(){return this.x===0&&this.y===0&&this.z===0}negate(t){return t===void 0&&(t=new h),t.x=-this.x,t.y=-this.y,t.z=-this.z,t}tangents(t,e){const s=this.length();if(s>0){const n=In,i=1/s;n.set(this.x*i,this.y*i,this.z*i);const o=Nn;Math.abs(n.x)<.9?(o.set(1,0,0),n.cross(o,t)):(o.set(0,1,0),n.cross(o,t)),n.cross(t,e)}else t.set(1,0,0),e.set(0,1,0)}toString(){return`${this.x},${this.y},${this.z}`}toArray(){return[this.x,this.y,this.z]}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}lerp(t,e,s){const n=this.x,i=this.y,o=this.z;s.x=n+(t.x-n)*e,s.y=i+(t.y-i)*e,s.z=o+(t.z-o)*e}almostEquals(t,e){return e===void 0&&(e=1e-6),!(Math.abs(this.x-t.x)>e||Math.abs(this.y-t.y)>e||Math.abs(this.z-t.z)>e)}almostZero(t){return t===void 0&&(t=1e-6),!(Math.abs(this.x)>t||Math.abs(this.y)>t||Math.abs(this.z)>t)}isAntiparallelTo(t,e){return this.negate(Ke),Ke.almostEquals(t,e)}clone(){return new h(this.x,this.y,this.z)}}h.ZERO=new h(0,0,0);h.UNIT_X=new h(1,0,0);h.UNIT_Y=new h(0,1,0);h.UNIT_Z=new h(0,0,1);const In=new h,Nn=new h,Ke=new h;class G{constructor(t){t===void 0&&(t={}),this.lowerBound=new h,this.upperBound=new h,t.lowerBound&&this.lowerBound.copy(t.lowerBound),t.upperBound&&this.upperBound.copy(t.upperBound)}setFromPoints(t,e,s,n){const i=this.lowerBound,o=this.upperBound,r=s;i.copy(t[0]),r&&r.vmult(i,i),o.copy(i);for(let c=1;c<t.length;c++){let a=t[c];r&&(r.vmult(a,Ze),a=Ze),a.x>o.x&&(o.x=a.x),a.x<i.x&&(i.x=a.x),a.y>o.y&&(o.y=a.y),a.y<i.y&&(i.y=a.y),a.z>o.z&&(o.z=a.z),a.z<i.z&&(i.z=a.z)}return e&&(e.vadd(i,i),e.vadd(o,o)),n&&(i.x-=n,i.y-=n,i.z-=n,o.x+=n,o.y+=n,o.z+=n),this}copy(t){return this.lowerBound.copy(t.lowerBound),this.upperBound.copy(t.upperBound),this}clone(){return new G().copy(this)}extend(t){this.lowerBound.x=Math.min(this.lowerBound.x,t.lowerBound.x),this.upperBound.x=Math.max(this.upperBound.x,t.upperBound.x),this.lowerBound.y=Math.min(this.lowerBound.y,t.lowerBound.y),this.upperBound.y=Math.max(this.upperBound.y,t.upperBound.y),this.lowerBound.z=Math.min(this.lowerBound.z,t.lowerBound.z),this.upperBound.z=Math.max(this.upperBound.z,t.upperBound.z)}overlaps(t){const e=this.lowerBound,s=this.upperBound,n=t.lowerBound,i=t.upperBound,o=n.x<=s.x&&s.x<=i.x||e.x<=i.x&&i.x<=s.x,r=n.y<=s.y&&s.y<=i.y||e.y<=i.y&&i.y<=s.y,c=n.z<=s.z&&s.z<=i.z||e.z<=i.z&&i.z<=s.z;return o&&r&&c}volume(){const t=this.lowerBound,e=this.upperBound;return(e.x-t.x)*(e.y-t.y)*(e.z-t.z)}contains(t){const e=this.lowerBound,s=this.upperBound,n=t.lowerBound,i=t.upperBound;return e.x<=n.x&&s.x>=i.x&&e.y<=n.y&&s.y>=i.y&&e.z<=n.z&&s.z>=i.z}getCorners(t,e,s,n,i,o,r,c){const a=this.lowerBound,l=this.upperBound;t.copy(a),e.set(l.x,a.y,a.z),s.set(l.x,l.y,a.z),n.set(a.x,l.y,l.z),i.set(l.x,a.y,l.z),o.set(a.x,l.y,a.z),r.set(a.x,a.y,l.z),c.copy(l)}toLocalFrame(t,e){const s=Je,n=s[0],i=s[1],o=s[2],r=s[3],c=s[4],a=s[5],l=s[6],u=s[7];this.getCorners(n,i,o,r,c,a,l,u);for(let d=0;d!==8;d++){const f=s[d];t.pointToLocal(f,f)}return e.setFromPoints(s)}toWorldFrame(t,e){const s=Je,n=s[0],i=s[1],o=s[2],r=s[3],c=s[4],a=s[5],l=s[6],u=s[7];this.getCorners(n,i,o,r,c,a,l,u);for(let d=0;d!==8;d++){const f=s[d];t.pointToWorld(f,f)}return e.setFromPoints(s)}overlapsRay(t){const{direction:e,from:s}=t,n=1/e.x,i=1/e.y,o=1/e.z,r=(this.lowerBound.x-s.x)*n,c=(this.upperBound.x-s.x)*n,a=(this.lowerBound.y-s.y)*i,l=(this.upperBound.y-s.y)*i,u=(this.lowerBound.z-s.z)*o,d=(this.upperBound.z-s.z)*o,f=Math.max(Math.max(Math.min(r,c),Math.min(a,l)),Math.min(u,d)),p=Math.min(Math.min(Math.max(r,c),Math.max(a,l)),Math.max(u,d));return!(p<0||f>p)}}const Ze=new h,Je=[new h,new h,new h,new h,new h,new h,new h,new h];class Ie{constructor(){this.matrix=[]}get(t,e){let{index:s}=t,{index:n}=e;if(n>s){const i=n;n=s,s=i}return this.matrix[(s*(s+1)>>1)+n-1]}set(t,e,s){let{index:n}=t,{index:i}=e;if(i>n){const o=i;i=n,n=o}this.matrix[(n*(n+1)>>1)+i-1]=s?1:0}reset(){for(let t=0,e=this.matrix.length;t!==e;t++)this.matrix[t]=0}setNumObjects(t){this.matrix.length=t*(t-1)>>1}}class He{addEventListener(t,e){this._listeners===void 0&&(this._listeners={});const s=this._listeners;return s[t]===void 0&&(s[t]=[]),s[t].includes(e)||s[t].push(e),this}hasEventListener(t,e){if(this._listeners===void 0)return!1;const s=this._listeners;return!!(s[t]!==void 0&&s[t].includes(e))}hasAnyEventListener(t){return this._listeners===void 0?!1:this._listeners[t]!==void 0}removeEventListener(t,e){if(this._listeners===void 0)return this;const s=this._listeners;if(s[t]===void 0)return this;const n=s[t].indexOf(e);return n!==-1&&s[t].splice(n,1),this}dispatchEvent(t){if(this._listeners===void 0)return this;const s=this._listeners[t.type];if(s!==void 0){t.target=this;for(let n=0,i=s.length;n<i;n++)s[n].call(this,t)}return this}}class U{constructor(t,e,s,n){t===void 0&&(t=0),e===void 0&&(e=0),s===void 0&&(s=0),n===void 0&&(n=1),this.x=t,this.y=e,this.z=s,this.w=n}set(t,e,s,n){return this.x=t,this.y=e,this.z=s,this.w=n,this}toString(){return`${this.x},${this.y},${this.z},${this.w}`}toArray(){return[this.x,this.y,this.z,this.w]}setFromAxisAngle(t,e){const s=Math.sin(e*.5);return this.x=t.x*s,this.y=t.y*s,this.z=t.z*s,this.w=Math.cos(e*.5),this}toAxisAngle(t){t===void 0&&(t=new h),this.normalize();const e=2*Math.acos(this.w),s=Math.sqrt(1-this.w*this.w);return s<.001?(t.x=this.x,t.y=this.y,t.z=this.z):(t.x=this.x/s,t.y=this.y/s,t.z=this.z/s),[t,e]}setFromVectors(t,e){if(t.isAntiparallelTo(e)){const s=Rn,n=Ln;t.tangents(s,n),this.setFromAxisAngle(s,Math.PI)}else{const s=t.cross(e);this.x=s.x,this.y=s.y,this.z=s.z,this.w=Math.sqrt(t.length()**2*e.length()**2)+t.dot(e),this.normalize()}return this}mult(t,e){e===void 0&&(e=new U);const s=this.x,n=this.y,i=this.z,o=this.w,r=t.x,c=t.y,a=t.z,l=t.w;return e.x=s*l+o*r+n*a-i*c,e.y=n*l+o*c+i*r-s*a,e.z=i*l+o*a+s*c-n*r,e.w=o*l-s*r-n*c-i*a,e}inverse(t){t===void 0&&(t=new U);const e=this.x,s=this.y,n=this.z,i=this.w;this.conjugate(t);const o=1/(e*e+s*s+n*n+i*i);return t.x*=o,t.y*=o,t.z*=o,t.w*=o,t}conjugate(t){return t===void 0&&(t=new U),t.x=-this.x,t.y=-this.y,t.z=-this.z,t.w=this.w,t}normalize(){let t=Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w);return t===0?(this.x=0,this.y=0,this.z=0,this.w=0):(t=1/t,this.x*=t,this.y*=t,this.z*=t,this.w*=t),this}normalizeFast(){const t=(3-(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w))/2;return t===0?(this.x=0,this.y=0,this.z=0,this.w=0):(this.x*=t,this.y*=t,this.z*=t,this.w*=t),this}vmult(t,e){e===void 0&&(e=new h);const s=t.x,n=t.y,i=t.z,o=this.x,r=this.y,c=this.z,a=this.w,l=a*s+r*i-c*n,u=a*n+c*s-o*i,d=a*i+o*n-r*s,f=-o*s-r*n-c*i;return e.x=l*a+f*-o+u*-c-d*-r,e.y=u*a+f*-r+d*-o-l*-c,e.z=d*a+f*-c+l*-r-u*-o,e}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=t.w,this}toEuler(t,e){e===void 0&&(e="YZX");let s,n,i;const o=this.x,r=this.y,c=this.z,a=this.w;switch(e){case"YZX":const l=o*r+c*a;if(l>.499&&(s=2*Math.atan2(o,a),n=Math.PI/2,i=0),l<-.499&&(s=-2*Math.atan2(o,a),n=-Math.PI/2,i=0),s===void 0){const u=o*o,d=r*r,f=c*c;s=Math.atan2(2*r*a-2*o*c,1-2*d-2*f),n=Math.asin(2*l),i=Math.atan2(2*o*a-2*r*c,1-2*u-2*f)}break;default:throw new Error(`Euler order ${e} not supported yet.`)}t.y=s,t.z=n,t.x=i}setFromEuler(t,e,s,n){n===void 0&&(n="XYZ");const i=Math.cos(t/2),o=Math.cos(e/2),r=Math.cos(s/2),c=Math.sin(t/2),a=Math.sin(e/2),l=Math.sin(s/2);return n==="XYZ"?(this.x=c*o*r+i*a*l,this.y=i*a*r-c*o*l,this.z=i*o*l+c*a*r,this.w=i*o*r-c*a*l):n==="YXZ"?(this.x=c*o*r+i*a*l,this.y=i*a*r-c*o*l,this.z=i*o*l-c*a*r,this.w=i*o*r+c*a*l):n==="ZXY"?(this.x=c*o*r-i*a*l,this.y=i*a*r+c*o*l,this.z=i*o*l+c*a*r,this.w=i*o*r-c*a*l):n==="ZYX"?(this.x=c*o*r-i*a*l,this.y=i*a*r+c*o*l,this.z=i*o*l-c*a*r,this.w=i*o*r+c*a*l):n==="YZX"?(this.x=c*o*r+i*a*l,this.y=i*a*r+c*o*l,this.z=i*o*l-c*a*r,this.w=i*o*r-c*a*l):n==="XZY"&&(this.x=c*o*r-i*a*l,this.y=i*a*r-c*o*l,this.z=i*o*l+c*a*r,this.w=i*o*r+c*a*l),this}clone(){return new U(this.x,this.y,this.z,this.w)}slerp(t,e,s){s===void 0&&(s=new U);const n=this.x,i=this.y,o=this.z,r=this.w;let c=t.x,a=t.y,l=t.z,u=t.w,d,f,p,m,y;return f=n*c+i*a+o*l+r*u,f<0&&(f=-f,c=-c,a=-a,l=-l,u=-u),1-f>1e-6?(d=Math.acos(f),p=Math.sin(d),m=Math.sin((1-e)*d)/p,y=Math.sin(e*d)/p):(m=1-e,y=e),s.x=m*n+y*c,s.y=m*i+y*a,s.z=m*o+y*l,s.w=m*r+y*u,s}integrate(t,e,s,n){n===void 0&&(n=new U);const i=t.x*s.x,o=t.y*s.y,r=t.z*s.z,c=this.x,a=this.y,l=this.z,u=this.w,d=e*.5;return n.x+=d*(i*u+o*l-r*a),n.y+=d*(o*u+r*c-i*l),n.z+=d*(r*u+i*a-o*c),n.w+=d*(-i*c-o*a-r*l),n}}const Rn=new h,Ln=new h,Vs={SPHERE:1,PLANE:2,BOX:4,COMPOUND:8,CONVEXPOLYHEDRON:16,HEIGHTFIELD:32,PARTICLE:64,CYLINDER:128,TRIMESH:256};class S{constructor(t){t===void 0&&(t={}),this.id=S.idCounter++,this.type=t.type||0,this.boundingSphereRadius=0,this.collisionResponse=t.collisionResponse?t.collisionResponse:!0,this.collisionFilterGroup=t.collisionFilterGroup!==void 0?t.collisionFilterGroup:1,this.collisionFilterMask=t.collisionFilterMask!==void 0?t.collisionFilterMask:-1,this.material=t.material?t.material:null,this.body=null}updateBoundingSphereRadius(){throw`computeBoundingSphereRadius() not implemented for shape type ${this.type}`}volume(){throw`volume() not implemented for shape type ${this.type}`}calculateLocalInertia(t,e){throw`calculateLocalInertia() not implemented for shape type ${this.type}`}calculateWorldAABB(t,e,s,n){throw`calculateWorldAABB() not implemented for shape type ${this.type}`}}S.idCounter=0;S.types=Vs;class j{constructor(t){t===void 0&&(t={}),this.position=new h,this.quaternion=new U,t.position&&this.position.copy(t.position),t.quaternion&&this.quaternion.copy(t.quaternion)}pointToLocal(t,e){return j.pointToLocalFrame(this.position,this.quaternion,t,e)}pointToWorld(t,e){return j.pointToWorldFrame(this.position,this.quaternion,t,e)}vectorToWorldFrame(t,e){return e===void 0&&(e=new h),this.quaternion.vmult(t,e),e}static pointToLocalFrame(t,e,s,n){return n===void 0&&(n=new h),s.vsub(t,n),e.conjugate(Qe),Qe.vmult(n,n),n}static pointToWorldFrame(t,e,s,n){return n===void 0&&(n=new h),e.vmult(s,n),n.vadd(t,n),n}static vectorToWorldFrame(t,e,s){return s===void 0&&(s=new h),t.vmult(e,s),s}static vectorToLocalFrame(t,e,s,n){return n===void 0&&(n=new h),e.w*=-1,e.vmult(s,n),e.w*=-1,n}}const Qe=new U;class Ct extends S{constructor(t){t===void 0&&(t={});const{vertices:e=[],faces:s=[],normals:n=[],axes:i,boundingSphereRadius:o}=t;super({type:S.types.CONVEXPOLYHEDRON}),this.vertices=e,this.faces=s,this.faceNormals=n,this.faceNormals.length===0&&this.computeNormals(),o?this.boundingSphereRadius=o:this.updateBoundingSphereRadius(),this.worldVertices=[],this.worldVerticesNeedsUpdate=!0,this.worldFaceNormals=[],this.worldFaceNormalsNeedsUpdate=!0,this.uniqueAxes=i?i.slice():null,this.uniqueEdges=[],this.computeEdges()}computeEdges(){const t=this.faces,e=this.vertices,s=this.uniqueEdges;s.length=0;const n=new h;for(let i=0;i!==t.length;i++){const o=t[i],r=o.length;for(let c=0;c!==r;c++){const a=(c+1)%r;e[o[c]].vsub(e[o[a]],n),n.normalize();let l=!1;for(let u=0;u!==s.length;u++)if(s[u].almostEquals(n)||s[u].almostEquals(n)){l=!0;break}l||s.push(n.clone())}}}computeNormals(){this.faceNormals.length=this.faces.length;for(let t=0;t<this.faces.length;t++){for(let n=0;n<this.faces[t].length;n++)if(!this.vertices[this.faces[t][n]])throw new Error(`Vertex ${this.faces[t][n]} not found!`);const e=this.faceNormals[t]||new h;this.getFaceNormal(t,e),e.negate(e),this.faceNormals[t]=e;const s=this.vertices[this.faces[t][0]];if(e.dot(s)<0){console.error(`.faceNormals[${t}] = Vec3(${e.toString()}) looks like it points into the shape? The vertices follow. Make sure they are ordered CCW around the normal, using the right hand rule.`);for(let n=0;n<this.faces[t].length;n++)console.warn(`.vertices[${this.faces[t][n]}] = Vec3(${this.vertices[this.faces[t][n]].toString()})`)}}}getFaceNormal(t,e){const s=this.faces[t],n=this.vertices[s[0]],i=this.vertices[s[1]],o=this.vertices[s[2]];Ct.computeNormal(n,i,o,e)}static computeNormal(t,e,s,n){const i=new h,o=new h;e.vsub(t,o),s.vsub(e,i),i.cross(o,n),n.isZero()||n.normalize()}clipAgainstHull(t,e,s,n,i,o,r,c,a){const l=new h;let u=-1,d=-Number.MAX_VALUE;for(let p=0;p<s.faces.length;p++){l.copy(s.faceNormals[p]),i.vmult(l,l);const m=l.dot(o);m>d&&(d=m,u=p)}const f=[];for(let p=0;p<s.faces[u].length;p++){const m=s.vertices[s.faces[u][p]],y=new h;y.copy(m),i.vmult(y,y),n.vadd(y,y),f.push(y)}u>=0&&this.clipFaceAgainstHull(o,t,e,f,r,c,a)}findSeparatingAxis(t,e,s,n,i,o,r,c){const a=new h,l=new h,u=new h,d=new h,f=new h,p=new h;let m=Number.MAX_VALUE;const y=this;if(y.uniqueAxes)for(let x=0;x!==y.uniqueAxes.length;x++){s.vmult(y.uniqueAxes[x],a);const v=y.testSepAxis(a,t,e,s,n,i);if(v===!1)return!1;v<m&&(m=v,o.copy(a))}else{const x=r?r.length:y.faces.length;for(let v=0;v<x;v++){const g=r?r[v]:v;a.copy(y.faceNormals[g]),s.vmult(a,a);const b=y.testSepAxis(a,t,e,s,n,i);if(b===!1)return!1;b<m&&(m=b,o.copy(a))}}if(t.uniqueAxes)for(let x=0;x!==t.uniqueAxes.length;x++){i.vmult(t.uniqueAxes[x],l);const v=y.testSepAxis(l,t,e,s,n,i);if(v===!1)return!1;v<m&&(m=v,o.copy(l))}else{const x=c?c.length:t.faces.length;for(let v=0;v<x;v++){const g=c?c[v]:v;l.copy(t.faceNormals[g]),i.vmult(l,l);const b=y.testSepAxis(l,t,e,s,n,i);if(b===!1)return!1;b<m&&(m=b,o.copy(l))}}for(let x=0;x!==y.uniqueEdges.length;x++){s.vmult(y.uniqueEdges[x],d);for(let v=0;v!==t.uniqueEdges.length;v++)if(i.vmult(t.uniqueEdges[v],f),d.cross(f,p),!p.almostZero()){p.normalize();const g=y.testSepAxis(p,t,e,s,n,i);if(g===!1)return!1;g<m&&(m=g,o.copy(p))}}return n.vsub(e,u),u.dot(o)>0&&o.negate(o),!0}testSepAxis(t,e,s,n,i,o){const r=this;Ct.project(r,t,s,n,ze),Ct.project(e,t,i,o,Be);const c=ze[0],a=ze[1],l=Be[0],u=Be[1];if(c<u||l<a)return!1;const d=c-u,f=l-a;return d<f?d:f}calculateLocalInertia(t,e){const s=new h,n=new h;this.computeLocalAABB(n,s);const i=s.x-n.x,o=s.y-n.y,r=s.z-n.z;e.x=1/12*t*(2*o*2*o+2*r*2*r),e.y=1/12*t*(2*i*2*i+2*r*2*r),e.z=1/12*t*(2*o*2*o+2*i*2*i)}getPlaneConstantOfFace(t){const e=this.faces[t],s=this.faceNormals[t],n=this.vertices[e[0]];return-s.dot(n)}clipFaceAgainstHull(t,e,s,n,i,o,r){const c=new h,a=new h,l=new h,u=new h,d=new h,f=new h,p=new h,m=new h,y=this,x=[],v=n,g=x;let b=-1,A=Number.MAX_VALUE;for(let I=0;I<y.faces.length;I++){c.copy(y.faceNormals[I]),s.vmult(c,c);const R=c.dot(t);R<A&&(A=R,b=I)}if(b<0)return;const z=y.faces[b];z.connectedFaces=[];for(let I=0;I<y.faces.length;I++)for(let R=0;R<y.faces[I].length;R++)z.indexOf(y.faces[I][R])!==-1&&I!==b&&z.connectedFaces.indexOf(I)===-1&&z.connectedFaces.push(I);const M=z.length;for(let I=0;I<M;I++){const R=y.vertices[z[I]],W=y.vertices[z[(I+1)%M]];R.vsub(W,a),l.copy(a),s.vmult(l,l),e.vadd(l,l),u.copy(this.faceNormals[b]),s.vmult(u,u),e.vadd(u,u),l.cross(u,d),d.negate(d),f.copy(R),s.vmult(f,f),e.vadd(f,f);const E=z.connectedFaces[I];p.copy(this.faceNormals[E]);const _=this.getPlaneConstantOfFace(E);m.copy(p),s.vmult(m,m);const B=_-m.dot(e);for(this.clipFaceAgainstPlane(v,g,m,B);v.length;)v.shift();for(;g.length;)v.push(g.shift())}p.copy(this.faceNormals[b]);const P=this.getPlaneConstantOfFace(b);m.copy(p),s.vmult(m,m);const L=P-m.dot(e);for(let I=0;I<v.length;I++){let R=m.dot(v[I])+L;if(R<=i&&(console.log(`clamped: depth=${R} to minDist=${i}`),R=i),R<=o){const W=v[I];if(R<=1e-6){const E={point:W,normal:m,depth:R};r.push(E)}}}}clipFaceAgainstPlane(t,e,s,n){let i,o;const r=t.length;if(r<2)return e;let c=t[t.length-1],a=t[0];i=s.dot(c)+n;for(let l=0;l<r;l++){if(a=t[l],o=s.dot(a)+n,i<0)if(o<0){const u=new h;u.copy(a),e.push(u)}else{const u=new h;c.lerp(a,i/(i-o),u),e.push(u)}else if(o<0){const u=new h;c.lerp(a,i/(i-o),u),e.push(u),e.push(a)}c=a,i=o}return e}computeWorldVertices(t,e){for(;this.worldVertices.length<this.vertices.length;)this.worldVertices.push(new h);const s=this.vertices,n=this.worldVertices;for(let i=0;i!==this.vertices.length;i++)e.vmult(s[i],n[i]),t.vadd(n[i],n[i]);this.worldVerticesNeedsUpdate=!1}computeLocalAABB(t,e){const s=this.vertices;t.set(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),e.set(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE);for(let n=0;n<this.vertices.length;n++){const i=s[n];i.x<t.x?t.x=i.x:i.x>e.x&&(e.x=i.x),i.y<t.y?t.y=i.y:i.y>e.y&&(e.y=i.y),i.z<t.z?t.z=i.z:i.z>e.z&&(e.z=i.z)}}computeWorldFaceNormals(t){const e=this.faceNormals.length;for(;this.worldFaceNormals.length<e;)this.worldFaceNormals.push(new h);const s=this.faceNormals,n=this.worldFaceNormals;for(let i=0;i!==e;i++)t.vmult(s[i],n[i]);this.worldFaceNormalsNeedsUpdate=!1}updateBoundingSphereRadius(){let t=0;const e=this.vertices;for(let s=0;s!==e.length;s++){const n=e[s].lengthSquared();n>t&&(t=n)}this.boundingSphereRadius=Math.sqrt(t)}calculateWorldAABB(t,e,s,n){const i=this.vertices;let o,r,c,a,l,u,d=new h;for(let f=0;f<i.length;f++){d.copy(i[f]),e.vmult(d,d),t.vadd(d,d);const p=d;(o===void 0||p.x<o)&&(o=p.x),(a===void 0||p.x>a)&&(a=p.x),(r===void 0||p.y<r)&&(r=p.y),(l===void 0||p.y>l)&&(l=p.y),(c===void 0||p.z<c)&&(c=p.z),(u===void 0||p.z>u)&&(u=p.z)}s.set(o,r,c),n.set(a,l,u)}volume(){return 4*Math.PI*this.boundingSphereRadius/3}getAveragePointLocal(t){t===void 0&&(t=new h);const e=this.vertices;for(let s=0;s<e.length;s++)t.vadd(e[s],t);return t.scale(1/e.length,t),t}transformAllPoints(t,e){const s=this.vertices.length,n=this.vertices;if(e){for(let i=0;i<s;i++){const o=n[i];e.vmult(o,o)}for(let i=0;i<this.faceNormals.length;i++){const o=this.faceNormals[i];e.vmult(o,o)}}if(t)for(let i=0;i<s;i++){const o=n[i];o.vadd(t,o)}}pointIsInside(t){const e=this.vertices,s=this.faces,n=this.faceNormals,i=new h;this.getAveragePointLocal(i);for(let o=0;o<this.faces.length;o++){let r=n[o];const c=e[s[o][0]],a=new h;t.vsub(c,a);const l=r.dot(a),u=new h;i.vsub(c,u);const d=r.dot(u);if(l<0&&d>0||l>0&&d<0)return!1}return-1}static project(t,e,s,n,i){const o=t.vertices.length,r=qn;let c=0,a=0;const l=kn,u=t.vertices;l.setZero(),j.vectorToLocalFrame(s,n,e,r),j.pointToLocalFrame(s,n,l,l);const d=l.dot(r);a=c=u[0].dot(r);for(let f=1;f<o;f++){const p=u[f].dot(r);p>c&&(c=p),p<a&&(a=p)}if(a-=d,c-=d,a>c){const f=a;a=c,c=f}i[0]=c,i[1]=a}}const ze=[],Be=[];new h;const qn=new h,kn=new h;class Gt extends S{constructor(t){super({type:S.types.BOX}),this.halfExtents=t,this.convexPolyhedronRepresentation=null,this.updateConvexPolyhedronRepresentation(),this.updateBoundingSphereRadius()}updateConvexPolyhedronRepresentation(){const t=this.halfExtents.x,e=this.halfExtents.y,s=this.halfExtents.z,n=h,i=[new n(-t,-e,-s),new n(t,-e,-s),new n(t,e,-s),new n(-t,e,-s),new n(-t,-e,s),new n(t,-e,s),new n(t,e,s),new n(-t,e,s)],o=[[3,2,1,0],[4,5,6,7],[5,4,0,1],[2,3,7,6],[0,4,7,3],[1,2,6,5]],r=[new n(0,0,1),new n(0,1,0),new n(1,0,0)],c=new Ct({vertices:i,faces:o,axes:r});this.convexPolyhedronRepresentation=c,c.material=this.material}calculateLocalInertia(t,e){return e===void 0&&(e=new h),Gt.calculateInertia(this.halfExtents,t,e),e}static calculateInertia(t,e,s){const n=t;s.x=1/12*e*(2*n.y*2*n.y+2*n.z*2*n.z),s.y=1/12*e*(2*n.x*2*n.x+2*n.z*2*n.z),s.z=1/12*e*(2*n.y*2*n.y+2*n.x*2*n.x)}getSideNormals(t,e){const s=t,n=this.halfExtents;if(s[0].set(n.x,0,0),s[1].set(0,n.y,0),s[2].set(0,0,n.z),s[3].set(-n.x,0,0),s[4].set(0,-n.y,0),s[5].set(0,0,-n.z),e!==void 0)for(let i=0;i!==s.length;i++)e.vmult(s[i],s[i]);return s}volume(){return 8*this.halfExtents.x*this.halfExtents.y*this.halfExtents.z}updateBoundingSphereRadius(){this.boundingSphereRadius=this.halfExtents.length()}forEachWorldCorner(t,e,s){const n=this.halfExtents,i=[[n.x,n.y,n.z],[-n.x,n.y,n.z],[-n.x,-n.y,n.z],[-n.x,-n.y,-n.z],[n.x,-n.y,-n.z],[n.x,n.y,-n.z],[-n.x,n.y,-n.z],[n.x,-n.y,n.z]];for(let o=0;o<i.length;o++)Bt.set(i[o][0],i[o][1],i[o][2]),e.vmult(Bt,Bt),t.vadd(Bt,Bt),s(Bt.x,Bt.y,Bt.z)}calculateWorldAABB(t,e,s,n){const i=this.halfExtents;at[0].set(i.x,i.y,i.z),at[1].set(-i.x,i.y,i.z),at[2].set(-i.x,-i.y,i.z),at[3].set(-i.x,-i.y,-i.z),at[4].set(i.x,-i.y,-i.z),at[5].set(i.x,i.y,-i.z),at[6].set(-i.x,i.y,-i.z),at[7].set(i.x,-i.y,i.z);const o=at[0];e.vmult(o,o),t.vadd(o,o),n.copy(o),s.copy(o);for(let r=1;r<8;r++){const c=at[r];e.vmult(c,c),t.vadd(c,c);const a=c.x,l=c.y,u=c.z;a>n.x&&(n.x=a),l>n.y&&(n.y=l),u>n.z&&(n.z=u),a<s.x&&(s.x=a),l<s.y&&(s.y=l),u<s.z&&(s.z=u)}}}const Bt=new h,at=[new h,new h,new h,new h,new h,new h,new h,new h],xe={DYNAMIC:1,STATIC:2,KINEMATIC:4},ge={AWAKE:0,SLEEPY:1,SLEEPING:2};class F extends He{constructor(t){t===void 0&&(t={}),super(),this.id=F.idCounter++,this.index=-1,this.world=null,this.vlambda=new h,this.collisionFilterGroup=typeof t.collisionFilterGroup=="number"?t.collisionFilterGroup:1,this.collisionFilterMask=typeof t.collisionFilterMask=="number"?t.collisionFilterMask:-1,this.collisionResponse=typeof t.collisionResponse=="boolean"?t.collisionResponse:!0,this.position=new h,this.previousPosition=new h,this.interpolatedPosition=new h,this.initPosition=new h,t.position&&(this.position.copy(t.position),this.previousPosition.copy(t.position),this.interpolatedPosition.copy(t.position),this.initPosition.copy(t.position)),this.velocity=new h,t.velocity&&this.velocity.copy(t.velocity),this.initVelocity=new h,this.force=new h;const e=typeof t.mass=="number"?t.mass:0;this.mass=e,this.invMass=e>0?1/e:0,this.material=t.material||null,this.linearDamping=typeof t.linearDamping=="number"?t.linearDamping:.01,this.type=e<=0?F.STATIC:F.DYNAMIC,typeof t.type==typeof F.STATIC&&(this.type=t.type),this.allowSleep=typeof t.allowSleep<"u"?t.allowSleep:!0,this.sleepState=F.AWAKE,this.sleepSpeedLimit=typeof t.sleepSpeedLimit<"u"?t.sleepSpeedLimit:.1,this.sleepTimeLimit=typeof t.sleepTimeLimit<"u"?t.sleepTimeLimit:1,this.timeLastSleepy=0,this.wakeUpAfterNarrowphase=!1,this.torque=new h,this.quaternion=new U,this.initQuaternion=new U,this.previousQuaternion=new U,this.interpolatedQuaternion=new U,t.quaternion&&(this.quaternion.copy(t.quaternion),this.initQuaternion.copy(t.quaternion),this.previousQuaternion.copy(t.quaternion),this.interpolatedQuaternion.copy(t.quaternion)),this.angularVelocity=new h,t.angularVelocity&&this.angularVelocity.copy(t.angularVelocity),this.initAngularVelocity=new h,this.shapes=[],this.shapeOffsets=[],this.shapeOrientations=[],this.inertia=new h,this.invInertia=new h,this.invInertiaWorld=new ot,this.invMassSolve=0,this.invInertiaSolve=new h,this.invInertiaWorldSolve=new ot,this.fixedRotation=typeof t.fixedRotation<"u"?t.fixedRotation:!1,this.angularDamping=typeof t.angularDamping<"u"?t.angularDamping:.01,this.linearFactor=new h(1,1,1),t.linearFactor&&this.linearFactor.copy(t.linearFactor),this.angularFactor=new h(1,1,1),t.angularFactor&&this.angularFactor.copy(t.angularFactor),this.aabb=new G,this.aabbNeedsUpdate=!0,this.boundingRadius=0,this.wlambda=new h,this.isTrigger=!!t.isTrigger,t.shape&&this.addShape(t.shape),this.updateMassProperties()}wakeUp(){const t=this.sleepState;this.sleepState=F.AWAKE,this.wakeUpAfterNarrowphase=!1,t===F.SLEEPING&&this.dispatchEvent(F.wakeupEvent)}sleep(){this.sleepState=F.SLEEPING,this.velocity.set(0,0,0),this.angularVelocity.set(0,0,0),this.wakeUpAfterNarrowphase=!1}sleepTick(t){if(this.allowSleep){const e=this.sleepState,s=this.velocity.lengthSquared()+this.angularVelocity.lengthSquared(),n=this.sleepSpeedLimit**2;e===F.AWAKE&&s<n?(this.sleepState=F.SLEEPY,this.timeLastSleepy=t,this.dispatchEvent(F.sleepyEvent)):e===F.SLEEPY&&s>n?this.wakeUp():e===F.SLEEPY&&t-this.timeLastSleepy>this.sleepTimeLimit&&(this.sleep(),this.dispatchEvent(F.sleepEvent))}}updateSolveMassProperties(){this.sleepState===F.SLEEPING||this.type===F.KINEMATIC?(this.invMassSolve=0,this.invInertiaSolve.setZero(),this.invInertiaWorldSolve.setZero()):(this.invMassSolve=this.invMass,this.invInertiaSolve.copy(this.invInertia),this.invInertiaWorldSolve.copy(this.invInertiaWorld))}pointToLocalFrame(t,e){return e===void 0&&(e=new h),t.vsub(this.position,e),this.quaternion.conjugate().vmult(e,e),e}vectorToLocalFrame(t,e){return e===void 0&&(e=new h),this.quaternion.conjugate().vmult(t,e),e}pointToWorldFrame(t,e){return e===void 0&&(e=new h),this.quaternion.vmult(t,e),e.vadd(this.position,e),e}vectorToWorldFrame(t,e){return e===void 0&&(e=new h),this.quaternion.vmult(t,e),e}addShape(t,e,s){const n=new h,i=new U;return e&&n.copy(e),s&&i.copy(s),this.shapes.push(t),this.shapeOffsets.push(n),this.shapeOrientations.push(i),this.updateMassProperties(),this.updateBoundingRadius(),this.aabbNeedsUpdate=!0,t.body=this,this}removeShape(t){const e=this.shapes.indexOf(t);return e===-1?(console.warn("Shape does not belong to the body"),this):(this.shapes.splice(e,1),this.shapeOffsets.splice(e,1),this.shapeOrientations.splice(e,1),this.updateMassProperties(),this.updateBoundingRadius(),this.aabbNeedsUpdate=!0,t.body=null,this)}updateBoundingRadius(){const t=this.shapes,e=this.shapeOffsets,s=t.length;let n=0;for(let i=0;i!==s;i++){const o=t[i];o.updateBoundingSphereRadius();const r=e[i].length(),c=o.boundingSphereRadius;r+c>n&&(n=r+c)}this.boundingRadius=n}updateAABB(){const t=this.shapes,e=this.shapeOffsets,s=this.shapeOrientations,n=t.length,i=Wn,o=Vn,r=this.quaternion,c=this.aabb,a=jn;for(let l=0;l!==n;l++){const u=t[l];r.vmult(e[l],i),i.vadd(this.position,i),r.mult(s[l],o),u.calculateWorldAABB(i,o,a.lowerBound,a.upperBound),l===0?c.copy(a):c.extend(a)}this.aabbNeedsUpdate=!1}updateInertiaWorld(t){const e=this.invInertia;if(!(e.x===e.y&&e.y===e.z&&!t)){const s=Dn,n=On;s.setRotationFromQuaternion(this.quaternion),s.transpose(n),s.scale(e,s),s.mmult(n,this.invInertiaWorld)}}applyForce(t,e){if(e===void 0&&(e=new h),this.type!==F.DYNAMIC)return;this.sleepState===F.SLEEPING&&this.wakeUp();const s=Hn;e.cross(t,s),this.force.vadd(t,this.force),this.torque.vadd(s,this.torque)}applyLocalForce(t,e){if(e===void 0&&(e=new h),this.type!==F.DYNAMIC)return;const s=Gn,n=Un;this.vectorToWorldFrame(t,s),this.vectorToWorldFrame(e,n),this.applyForce(s,n)}applyTorque(t){this.type===F.DYNAMIC&&(this.sleepState===F.SLEEPING&&this.wakeUp(),this.torque.vadd(t,this.torque))}applyImpulse(t,e){if(e===void 0&&(e=new h),this.type!==F.DYNAMIC)return;this.sleepState===F.SLEEPING&&this.wakeUp();const s=e,n=Yn;n.copy(t),n.scale(this.invMass,n),this.velocity.vadd(n,this.velocity);const i=Xn;s.cross(t,i),this.invInertiaWorld.vmult(i,i),this.angularVelocity.vadd(i,this.angularVelocity)}applyLocalImpulse(t,e){if(e===void 0&&(e=new h),this.type!==F.DYNAMIC)return;const s=$n,n=Kn;this.vectorToWorldFrame(t,s),this.vectorToWorldFrame(e,n),this.applyImpulse(s,n)}updateMassProperties(){const t=Zn;this.invMass=this.mass>0?1/this.mass:0;const e=this.inertia,s=this.fixedRotation;this.updateAABB(),t.set((this.aabb.upperBound.x-this.aabb.lowerBound.x)/2,(this.aabb.upperBound.y-this.aabb.lowerBound.y)/2,(this.aabb.upperBound.z-this.aabb.lowerBound.z)/2),Gt.calculateInertia(t,this.mass,e),this.invInertia.set(e.x>0&&!s?1/e.x:0,e.y>0&&!s?1/e.y:0,e.z>0&&!s?1/e.z:0),this.updateInertiaWorld(!0)}getVelocityAtWorldPoint(t,e){const s=new h;return t.vsub(this.position,s),this.angularVelocity.cross(s,e),this.velocity.vadd(e,e),e}integrate(t,e,s){if(this.previousPosition.copy(this.position),this.previousQuaternion.copy(this.quaternion),!(this.type===F.DYNAMIC||this.type===F.KINEMATIC)||this.sleepState===F.SLEEPING)return;const n=this.velocity,i=this.angularVelocity,o=this.position,r=this.force,c=this.torque,a=this.quaternion,l=this.invMass,u=this.invInertiaWorld,d=this.linearFactor,f=l*t;n.x+=r.x*f*d.x,n.y+=r.y*f*d.y,n.z+=r.z*f*d.z;const p=u.elements,m=this.angularFactor,y=c.x*m.x,x=c.y*m.y,v=c.z*m.z;i.x+=t*(p[0]*y+p[1]*x+p[2]*v),i.y+=t*(p[3]*y+p[4]*x+p[5]*v),i.z+=t*(p[6]*y+p[7]*x+p[8]*v),o.x+=n.x*t,o.y+=n.y*t,o.z+=n.z*t,a.integrate(this.angularVelocity,t,this.angularFactor,a),e&&(s?a.normalizeFast():a.normalize()),this.aabbNeedsUpdate=!0,this.updateInertiaWorld()}}F.idCounter=0;F.COLLIDE_EVENT_NAME="collide";F.DYNAMIC=xe.DYNAMIC;F.STATIC=xe.STATIC;F.KINEMATIC=xe.KINEMATIC;F.AWAKE=ge.AWAKE;F.SLEEPY=ge.SLEEPY;F.SLEEPING=ge.SLEEPING;F.wakeupEvent={type:"wakeup"};F.sleepyEvent={type:"sleepy"};F.sleepEvent={type:"sleep"};const Wn=new h,Vn=new U,jn=new G,Dn=new ot,On=new ot;new ot;const Hn=new h,Gn=new h,Un=new h,Yn=new h,Xn=new h,$n=new h,Kn=new h,Zn=new h;class be{constructor(){this.world=null,this.useBoundingBoxes=!1,this.dirty=!0}collisionPairs(t,e,s){throw new Error("collisionPairs not implemented for this BroadPhase class!")}needBroadphaseCollision(t,e){return!(!(t.collisionFilterGroup&e.collisionFilterMask)||!(e.collisionFilterGroup&t.collisionFilterMask)||(t.type&F.STATIC||t.sleepState===F.SLEEPING)&&(e.type&F.STATIC||e.sleepState===F.SLEEPING))}intersectionTest(t,e,s,n){this.useBoundingBoxes?this.doBoundingBoxBroadphase(t,e,s,n):this.doBoundingSphereBroadphase(t,e,s,n)}doBoundingSphereBroadphase(t,e,s,n){const i=Jn;e.position.vsub(t.position,i);const o=(t.boundingRadius+e.boundingRadius)**2;i.lengthSquared()<o&&(s.push(t),n.push(e))}doBoundingBoxBroadphase(t,e,s,n){t.aabbNeedsUpdate&&t.updateAABB(),e.aabbNeedsUpdate&&e.updateAABB(),t.aabb.overlaps(e.aabb)&&(s.push(t),n.push(e))}makePairsUnique(t,e){const s=Qn,n=ti,i=ei,o=t.length;for(let r=0;r!==o;r++)n[r]=t[r],i[r]=e[r];t.length=0,e.length=0;for(let r=0;r!==o;r++){const c=n[r].id,a=i[r].id,l=c<a?`${c},${a}`:`${a},${c}`;s[l]=r,s.keys.push(l)}for(let r=0;r!==s.keys.length;r++){const c=s.keys.pop(),a=s[c];t.push(n[a]),e.push(i[a]),delete s[c]}}setWorld(t){}static boundingSphereCheck(t,e){const s=new h;t.position.vsub(e.position,s);const n=t.shapes[0],i=e.shapes[0];return Math.pow(n.boundingSphereRadius+i.boundingSphereRadius,2)>s.lengthSquared()}aabbQuery(t,e,s){return console.warn(".aabbQuery is not implemented in this Broadphase subclass."),[]}}const Jn=new h;new h;new U;new h;const Qn={keys:[]},ti=[],ei=[];new h;class si extends be{constructor(t,e,s,n,i){t===void 0&&(t=new h(100,100,100)),e===void 0&&(e=new h(-100,-100,-100)),s===void 0&&(s=10),n===void 0&&(n=10),i===void 0&&(i=10),super(),this.nx=s,this.ny=n,this.nz=i,this.aabbMin=t,this.aabbMax=e;const o=this.nx*this.ny*this.nz;if(o<=0)throw"GridBroadphase: Each dimension's n must be >0";this.bins=[],this.binLengths=[],this.bins.length=o,this.binLengths.length=o;for(let r=0;r<o;r++)this.bins[r]=[],this.binLengths[r]=0}collisionPairs(t,e,s){const n=t.bodies.length,i=t.bodies,o=this.aabbMax,r=this.aabbMin,c=this.nx,a=this.ny,l=this.nz,u=a*l,d=l,f=1,p=o.x,m=o.y,y=o.z,x=r.x,v=r.y,g=r.z,b=c/(p-x),A=a/(m-v),z=l/(y-g),M=(p-x)/c,P=(m-v)/a,L=(y-g)/l,I=Math.sqrt(M*M+P*P+L*L)*.5,R=S.types,W=R.SPHERE,E=R.PLANE;R.BOX,R.COMPOUND,R.CONVEXPOLYHEDRON;const _=this.bins,B=this.binLengths,C=this.bins.length;for(let N=0;N!==C;N++)B[N]=0;const D=Math.ceil;function q(N,k,H,T,J,Q,tt){let X=(N-x)*b|0,Z=(k-v)*A|0,ft=(H-g)*z|0,mt=D((T-x)*b),vt=D((J-v)*A),yt=D((Q-g)*z);X<0?X=0:X>=c&&(X=c-1),Z<0?Z=0:Z>=a&&(Z=a-1),ft<0?ft=0:ft>=l&&(ft=l-1),mt<0?mt=0:mt>=c&&(mt=c-1),vt<0?vt=0:vt>=a&&(vt=a-1),yt<0?yt=0:yt>=l&&(yt=l-1),X*=u,Z*=d,ft*=f,mt*=u,vt*=d,yt*=f;for(let It=X;It<=mt;It+=u)for(let Nt=Z;Nt<=vt;Nt+=d)for(let Rt=ft;Rt<=yt;Rt+=f){const Ye=It+Nt+Rt;_[Ye][B[Ye]++]=tt}}for(let N=0;N!==n;N++){const k=i[N],H=k.shapes[0];switch(H.type){case W:{const T=H,J=k.position.x,Q=k.position.y,tt=k.position.z,X=T.radius;q(J-X,Q-X,tt-X,J+X,Q+X,tt+X,k);break}case E:{const T=H;T.worldNormalNeedsUpdate&&T.computeWorldNormal(k.quaternion);const J=T.worldNormal,Q=x+M*.5-k.position.x,tt=v+P*.5-k.position.y,X=g+L*.5-k.position.z,Z=ni;Z.set(Q,tt,X);for(let ft=0,mt=0;ft!==c;ft++,mt+=u,Z.y=tt,Z.x+=M)for(let vt=0,yt=0;vt!==a;vt++,yt+=d,Z.z=X,Z.y+=P)for(let It=0,Nt=0;It!==l;It++,Nt+=f,Z.z+=L)if(Z.dot(J)<I){const Rt=mt+yt+Nt;_[Rt][B[Rt]++]=k}break}default:{k.aabbNeedsUpdate&&k.updateAABB(),q(k.aabb.lowerBound.x,k.aabb.lowerBound.y,k.aabb.lowerBound.z,k.aabb.upperBound.x,k.aabb.upperBound.y,k.aabb.upperBound.z,k);break}}}for(let N=0;N!==C;N++){const k=B[N];if(k>1){const H=_[N];for(let T=0;T!==k;T++){const J=H[T];for(let Q=0;Q!==T;Q++){const tt=H[Q];this.needBroadphaseCollision(J,tt)&&this.intersectionTest(J,tt,e,s)}}}}this.makePairsUnique(e,s)}}const ni=new h;new h;class js extends be{constructor(){super()}collisionPairs(t,e,s){const n=t.bodies,i=n.length;let o,r;for(let c=0;c!==i;c++)for(let a=0;a!==c;a++)o=n[c],r=n[a],this.needBroadphaseCollision(o,r)&&this.intersectionTest(o,r,e,s)}aabbQuery(t,e,s){s===void 0&&(s=[]);for(let n=0;n<t.bodies.length;n++){const i=t.bodies[n];i.aabbNeedsUpdate&&i.updateAABB(),i.aabb.overlaps(e)&&s.push(i)}return s}}class Dt{constructor(){this.rayFromWorld=new h,this.rayToWorld=new h,this.hitNormalWorld=new h,this.hitPointWorld=new h,this.hasHit=!1,this.shape=null,this.body=null,this.hitFaceIndex=-1,this.distance=-1,this.shouldStop=!1}reset(){this.rayFromWorld.setZero(),this.rayToWorld.setZero(),this.hitNormalWorld.setZero(),this.hitPointWorld.setZero(),this.hasHit=!1,this.shape=null,this.body=null,this.hitFaceIndex=-1,this.distance=-1,this.shouldStop=!1}abort(){this.shouldStop=!0}set(t,e,s,n,i,o,r){this.rayFromWorld.copy(t),this.rayToWorld.copy(e),this.hitNormalWorld.copy(s),this.hitPointWorld.copy(n),this.shape=i,this.body=o,this.distance=r}}let Ds,Os,Hs,Gs,Us,Ys,Xs;const Ae={CLOSEST:1,ANY:2,ALL:4};Ds=S.types.SPHERE;Os=S.types.PLANE;Hs=S.types.BOX;Gs=S.types.CYLINDER;Us=S.types.CONVEXPOLYHEDRON;Ys=S.types.HEIGHTFIELD;Xs=S.types.TRIMESH;class Y{get[Ds](){return this._intersectSphere}get[Os](){return this._intersectPlane}get[Hs](){return this._intersectBox}get[Gs](){return this._intersectConvex}get[Us](){return this._intersectConvex}get[Ys](){return this._intersectHeightfield}get[Xs](){return this._intersectTrimesh}constructor(t,e){t===void 0&&(t=new h),e===void 0&&(e=new h),this.from=t.clone(),this.to=e.clone(),this.direction=new h,this.precision=1e-4,this.checkCollisionResponse=!0,this.skipBackfaces=!1,this.collisionFilterMask=-1,this.collisionFilterGroup=-1,this.mode=Y.ANY,this.result=new Dt,this.hasHit=!1,this.callback=s=>{}}intersectWorld(t,e){return this.mode=e.mode||Y.ANY,this.result=e.result||new Dt,this.skipBackfaces=!!e.skipBackfaces,this.collisionFilterMask=typeof e.collisionFilterMask<"u"?e.collisionFilterMask:-1,this.collisionFilterGroup=typeof e.collisionFilterGroup<"u"?e.collisionFilterGroup:-1,this.checkCollisionResponse=typeof e.checkCollisionResponse<"u"?e.checkCollisionResponse:!0,e.from&&this.from.copy(e.from),e.to&&this.to.copy(e.to),this.callback=e.callback||(()=>{}),this.hasHit=!1,this.result.reset(),this.updateDirection(),this.getAABB(ts),Se.length=0,t.broadphase.aabbQuery(t,ts,Se),this.intersectBodies(Se),this.hasHit}intersectBody(t,e){e&&(this.result=e,this.updateDirection());const s=this.checkCollisionResponse;if(s&&!t.collisionResponse||!(this.collisionFilterGroup&t.collisionFilterMask)||!(t.collisionFilterGroup&this.collisionFilterMask))return;const n=ii,i=oi;for(let o=0,r=t.shapes.length;o<r;o++){const c=t.shapes[o];if(!(s&&!c.collisionResponse)&&(t.quaternion.mult(t.shapeOrientations[o],i),t.quaternion.vmult(t.shapeOffsets[o],n),n.vadd(t.position,n),this.intersectShape(c,i,n,t),this.result.shouldStop))break}}intersectBodies(t,e){e&&(this.result=e,this.updateDirection());for(let s=0,n=t.length;!this.result.shouldStop&&s<n;s++)this.intersectBody(t[s])}updateDirection(){this.to.vsub(this.from,this.direction),this.direction.normalize()}intersectShape(t,e,s,n){const i=this.from;if(xi(i,this.direction,s)>t.boundingSphereRadius)return;const r=this[t.type];r&&r.call(this,t,e,s,n,t)}_intersectBox(t,e,s,n,i){return this._intersectConvex(t.convexPolyhedronRepresentation,e,s,n,i)}_intersectPlane(t,e,s,n,i){const o=this.from,r=this.to,c=this.direction,a=new h(0,0,1);e.vmult(a,a);const l=new h;o.vsub(s,l);const u=l.dot(a);r.vsub(s,l);const d=l.dot(a);if(u*d>0||o.distanceTo(r)<u)return;const f=a.dot(c);if(Math.abs(f)<this.precision)return;const p=new h,m=new h,y=new h;o.vsub(s,p);const x=-a.dot(p)/f;c.scale(x,m),o.vadd(m,y),this.reportIntersection(a,y,i,n,-1)}getAABB(t){const{lowerBound:e,upperBound:s}=t,n=this.to,i=this.from;e.x=Math.min(n.x,i.x),e.y=Math.min(n.y,i.y),e.z=Math.min(n.z,i.z),s.x=Math.max(n.x,i.x),s.y=Math.max(n.y,i.y),s.z=Math.max(n.z,i.z)}_intersectHeightfield(t,e,s,n,i){t.data,t.elementSize;const o=ri;o.from.copy(this.from),o.to.copy(this.to),j.pointToLocalFrame(s,e,o.from,o.from),j.pointToLocalFrame(s,e,o.to,o.to),o.updateDirection();const r=ci;let c,a,l,u;c=a=0,l=u=t.data.length-1;const d=new G;o.getAABB(d),t.getIndexOfPosition(d.lowerBound.x,d.lowerBound.y,r,!0),c=Math.max(c,r[0]),a=Math.max(a,r[1]),t.getIndexOfPosition(d.upperBound.x,d.upperBound.y,r,!0),l=Math.min(l,r[0]+1),u=Math.min(u,r[1]+1);for(let f=c;f<l;f++)for(let p=a;p<u;p++){if(this.result.shouldStop)return;if(t.getAabbAtIndex(f,p,d),!!d.overlapsRay(o)){if(t.getConvexTrianglePillar(f,p,!1),j.pointToWorldFrame(s,e,t.pillarOffset,ne),this._intersectConvex(t.pillarConvex,e,ne,n,i,es),this.result.shouldStop)return;t.getConvexTrianglePillar(f,p,!0),j.pointToWorldFrame(s,e,t.pillarOffset,ne),this._intersectConvex(t.pillarConvex,e,ne,n,i,es)}}}_intersectSphere(t,e,s,n,i){const o=this.from,r=this.to,c=t.radius,a=(r.x-o.x)**2+(r.y-o.y)**2+(r.z-o.z)**2,l=2*((r.x-o.x)*(o.x-s.x)+(r.y-o.y)*(o.y-s.y)+(r.z-o.z)*(o.z-s.z)),u=(o.x-s.x)**2+(o.y-s.y)**2+(o.z-s.z)**2-c**2,d=l**2-4*a*u,f=ai,p=li;if(!(d<0))if(d===0)o.lerp(r,d,f),f.vsub(s,p),p.normalize(),this.reportIntersection(p,f,i,n,-1);else{const m=(-l-Math.sqrt(d))/(2*a),y=(-l+Math.sqrt(d))/(2*a);if(m>=0&&m<=1&&(o.lerp(r,m,f),f.vsub(s,p),p.normalize(),this.reportIntersection(p,f,i,n,-1)),this.result.shouldStop)return;y>=0&&y<=1&&(o.lerp(r,y,f),f.vsub(s,p),p.normalize(),this.reportIntersection(p,f,i,n,-1))}}_intersectConvex(t,e,s,n,i,o){const r=hi,c=ss,a=o&&o.faceList||null,l=t.faces,u=t.vertices,d=t.faceNormals,f=this.direction,p=this.from,m=this.to,y=p.distanceTo(m),x=a?a.length:l.length,v=this.result;for(let g=0;!v.shouldStop&&g<x;g++){const b=a?a[g]:g,A=l[b],z=d[b],M=e,P=s;c.copy(u[A[0]]),M.vmult(c,c),c.vadd(P,c),c.vsub(p,c),M.vmult(z,r);const L=f.dot(r);if(Math.abs(L)<this.precision)continue;const I=r.dot(c)/L;if(!(I<0)){f.scale(I,et),et.vadd(p,et),ct.copy(u[A[0]]),M.vmult(ct,ct),P.vadd(ct,ct);for(let R=1;!v.shouldStop&&R<A.length-1;R++){lt.copy(u[A[R]]),ht.copy(u[A[R+1]]),M.vmult(lt,lt),M.vmult(ht,ht),P.vadd(lt,lt),P.vadd(ht,ht);const W=et.distanceTo(p);!(Y.pointInTriangle(et,ct,lt,ht)||Y.pointInTriangle(et,lt,ct,ht))||W>y||this.reportIntersection(r,et,i,n,b)}}}}_intersectTrimesh(t,e,s,n,i,o){const r=di,c=yi,a=wi,l=ss,u=ui,d=pi,f=fi,p=vi,m=mi,y=t.indices;t.vertices;const x=this.from,v=this.to,g=this.direction;a.position.copy(s),a.quaternion.copy(e),j.vectorToLocalFrame(s,e,g,u),j.pointToLocalFrame(s,e,x,d),j.pointToLocalFrame(s,e,v,f),f.x*=t.scale.x,f.y*=t.scale.y,f.z*=t.scale.z,d.x*=t.scale.x,d.y*=t.scale.y,d.z*=t.scale.z,f.vsub(d,u),u.normalize();const b=d.distanceSquared(f);t.tree.rayQuery(this,a,c);for(let A=0,z=c.length;!this.result.shouldStop&&A!==z;A++){const M=c[A];t.getNormal(M,r),t.getVertex(y[M*3],ct),ct.vsub(d,l);const P=u.dot(r),L=r.dot(l)/P;if(L<0)continue;u.scale(L,et),et.vadd(d,et),t.getVertex(y[M*3+1],lt),t.getVertex(y[M*3+2],ht);const I=et.distanceSquared(d);!(Y.pointInTriangle(et,lt,ct,ht)||Y.pointInTriangle(et,ct,lt,ht))||I>b||(j.vectorToWorldFrame(e,r,m),j.pointToWorldFrame(s,e,et,p),this.reportIntersection(m,p,i,n,M))}c.length=0}reportIntersection(t,e,s,n,i){const o=this.from,r=this.to,c=o.distanceTo(e),a=this.result;if(!(this.skipBackfaces&&t.dot(this.direction)>0))switch(a.hitFaceIndex=typeof i<"u"?i:-1,this.mode){case Y.ALL:this.hasHit=!0,a.set(o,r,t,e,s,n,c),a.hasHit=!0,this.callback(a);break;case Y.CLOSEST:(c<a.distance||!a.hasHit)&&(this.hasHit=!0,a.hasHit=!0,a.set(o,r,t,e,s,n,c));break;case Y.ANY:this.hasHit=!0,a.hasHit=!0,a.set(o,r,t,e,s,n,c),a.shouldStop=!0;break}}static pointInTriangle(t,e,s,n){n.vsub(e,Tt),s.vsub(e,Yt),t.vsub(e,Me);const i=Tt.dot(Tt),o=Tt.dot(Yt),r=Tt.dot(Me),c=Yt.dot(Yt),a=Yt.dot(Me);let l,u;return(l=c*r-o*a)>=0&&(u=i*a-o*r)>=0&&l+u<i*c-o*o}}Y.CLOSEST=Ae.CLOSEST;Y.ANY=Ae.ANY;Y.ALL=Ae.ALL;const ts=new G,Se=[],Yt=new h,Me=new h,ii=new h,oi=new U,et=new h,ct=new h,lt=new h,ht=new h;new h;new Dt;const es={faceList:[0]},ne=new h,ri=new Y,ci=[],ai=new h,li=new h,hi=new h;new h;new h;const ss=new h,di=new h,ui=new h,pi=new h,fi=new h,mi=new h,vi=new h;new G;const yi=[],wi=new j,Tt=new h,ie=new h;function xi(w,t,e){e.vsub(w,Tt);const s=Tt.dot(t);return t.scale(s,ie),ie.vadd(w,ie),e.distanceTo(ie)}class Wt extends be{static checkBounds(t,e,s){let n,i;s===0?(n=t.position.x,i=e.position.x):s===1?(n=t.position.y,i=e.position.y):s===2&&(n=t.position.z,i=e.position.z);const o=t.boundingRadius,r=e.boundingRadius,c=n+o;return i-r<c}static insertionSortX(t){for(let e=1,s=t.length;e<s;e++){const n=t[e];let i;for(i=e-1;i>=0&&!(t[i].aabb.lowerBound.x<=n.aabb.lowerBound.x);i--)t[i+1]=t[i];t[i+1]=n}return t}static insertionSortY(t){for(let e=1,s=t.length;e<s;e++){const n=t[e];let i;for(i=e-1;i>=0&&!(t[i].aabb.lowerBound.y<=n.aabb.lowerBound.y);i--)t[i+1]=t[i];t[i+1]=n}return t}static insertionSortZ(t){for(let e=1,s=t.length;e<s;e++){const n=t[e];let i;for(i=e-1;i>=0&&!(t[i].aabb.lowerBound.z<=n.aabb.lowerBound.z);i--)t[i+1]=t[i];t[i+1]=n}return t}constructor(t){super(),this.axisList=[],this.world=null,this.axisIndex=0;const e=this.axisList;this._addBodyHandler=s=>{e.push(s.body)},this._removeBodyHandler=s=>{const n=e.indexOf(s.body);n!==-1&&e.splice(n,1)},t&&this.setWorld(t)}setWorld(t){this.axisList.length=0;for(let e=0;e<t.bodies.length;e++)this.axisList.push(t.bodies[e]);t.removeEventListener("addBody",this._addBodyHandler),t.removeEventListener("removeBody",this._removeBodyHandler),t.addEventListener("addBody",this._addBodyHandler),t.addEventListener("removeBody",this._removeBodyHandler),this.world=t,this.dirty=!0}collisionPairs(t,e,s){const n=this.axisList,i=n.length,o=this.axisIndex;let r,c;for(this.dirty&&(this.sortList(),this.dirty=!1),r=0;r!==i;r++){const a=n[r];for(c=r+1;c<i;c++){const l=n[c];if(this.needBroadphaseCollision(a,l)){if(!Wt.checkBounds(a,l,o))break;this.intersectionTest(a,l,e,s)}}}}sortList(){const t=this.axisList,e=this.axisIndex,s=t.length;for(let n=0;n!==s;n++){const i=t[n];i.aabbNeedsUpdate&&i.updateAABB()}e===0?Wt.insertionSortX(t):e===1?Wt.insertionSortY(t):e===2&&Wt.insertionSortZ(t)}autoDetectAxis(){let t=0,e=0,s=0,n=0,i=0,o=0;const r=this.axisList,c=r.length,a=1/c;for(let f=0;f!==c;f++){const p=r[f],m=p.position.x;t+=m,e+=m*m;const y=p.position.y;s+=y,n+=y*y;const x=p.position.z;i+=x,o+=x*x}const l=e-t*t*a,u=n-s*s*a,d=o-i*i*a;l>u?l>d?this.axisIndex=0:this.axisIndex=2:u>d?this.axisIndex=1:this.axisIndex=2}aabbQuery(t,e,s){s===void 0&&(s=[]),this.dirty&&(this.sortList(),this.dirty=!1);const n=this.axisIndex;let i="x";n===1&&(i="y"),n===2&&(i="z");const o=this.axisList;e.lowerBound[i],e.upperBound[i];for(let r=0;r<o.length;r++){const c=o[r];c.aabbNeedsUpdate&&c.updateAABB(),c.aabb.overlaps(e)&&s.push(c)}return s}}class Ee{static defaults(t,e){t===void 0&&(t={});for(let s in e)s in t||(t[s]=e[s]);return t}}class Ut{constructor(t,e,s){s===void 0&&(s={}),s=Ee.defaults(s,{collideConnected:!0,wakeUpBodies:!0}),this.equations=[],this.bodyA=t,this.bodyB=e,this.id=Ut.idCounter++,this.collideConnected=s.collideConnected,s.wakeUpBodies&&(t&&t.wakeUp(),e&&e.wakeUp())}update(){throw new Error("method update() not implmemented in this Constraint subclass!")}enable(){const t=this.equations;for(let e=0;e<t.length;e++)t[e].enabled=!0}disable(){const t=this.equations;for(let e=0;e<t.length;e++)t[e].enabled=!1}}Ut.idCounter=0;class Ne{constructor(){this.spatial=new h,this.rotational=new h}multiplyElement(t){return t.spatial.dot(this.spatial)+t.rotational.dot(this.rotational)}multiplyVectors(t,e){return t.dot(this.spatial)+e.dot(this.rotational)}}class zt{constructor(t,e,s,n){s===void 0&&(s=-1e6),n===void 0&&(n=1e6),this.id=zt.idCounter++,this.minForce=s,this.maxForce=n,this.bi=t,this.bj=e,this.a=0,this.b=0,this.eps=0,this.jacobianElementA=new Ne,this.jacobianElementB=new Ne,this.enabled=!0,this.multiplier=0,this.setSpookParams(1e7,4,1/60)}setSpookParams(t,e,s){const n=e,i=t,o=s;this.a=4/(o*(1+4*n)),this.b=4*n/(1+4*n),this.eps=4/(o*o*i*(1+4*n))}computeB(t,e,s){const n=this.computeGW(),i=this.computeGq(),o=this.computeGiMf();return-i*t-n*e-o*s}computeGq(){const t=this.jacobianElementA,e=this.jacobianElementB,s=this.bi,n=this.bj,i=s.position,o=n.position;return t.spatial.dot(i)+e.spatial.dot(o)}computeGW(){const t=this.jacobianElementA,e=this.jacobianElementB,s=this.bi,n=this.bj,i=s.velocity,o=n.velocity,r=s.angularVelocity,c=n.angularVelocity;return t.multiplyVectors(i,r)+e.multiplyVectors(o,c)}computeGWlambda(){const t=this.jacobianElementA,e=this.jacobianElementB,s=this.bi,n=this.bj,i=s.vlambda,o=n.vlambda,r=s.wlambda,c=n.wlambda;return t.multiplyVectors(i,r)+e.multiplyVectors(o,c)}computeGiMf(){const t=this.jacobianElementA,e=this.jacobianElementB,s=this.bi,n=this.bj,i=s.force,o=s.torque,r=n.force,c=n.torque,a=s.invMassSolve,l=n.invMassSolve;return i.scale(a,ns),r.scale(l,is),s.invInertiaWorldSolve.vmult(o,os),n.invInertiaWorldSolve.vmult(c,rs),t.multiplyVectors(ns,os)+e.multiplyVectors(is,rs)}computeGiMGt(){const t=this.jacobianElementA,e=this.jacobianElementB,s=this.bi,n=this.bj,i=s.invMassSolve,o=n.invMassSolve,r=s.invInertiaWorldSolve,c=n.invInertiaWorldSolve;let a=i+o;return r.vmult(t.rotational,oe),a+=oe.dot(t.rotational),c.vmult(e.rotational,oe),a+=oe.dot(e.rotational),a}addToWlambda(t){const e=this.jacobianElementA,s=this.jacobianElementB,n=this.bi,i=this.bj,o=gi;n.vlambda.addScaledVector(n.invMassSolve*t,e.spatial,n.vlambda),i.vlambda.addScaledVector(i.invMassSolve*t,s.spatial,i.vlambda),n.invInertiaWorldSolve.vmult(e.rotational,o),n.wlambda.addScaledVector(t,o,n.wlambda),i.invInertiaWorldSolve.vmult(s.rotational,o),i.wlambda.addScaledVector(t,o,i.wlambda)}computeC(){return this.computeGiMGt()+this.eps}}zt.idCounter=0;const ns=new h,is=new h,os=new h,rs=new h,oe=new h,gi=new h;class jt extends zt{constructor(t,e,s){s===void 0&&(s=1e6),super(t,e,0,s),this.restitution=0,this.ri=new h,this.rj=new h,this.ni=new h}computeB(t){const e=this.a,s=this.b,n=this.bi,i=this.bj,o=this.ri,r=this.rj,c=bi,a=Ai,l=n.velocity,u=n.angularVelocity;n.force,n.torque;const d=i.velocity,f=i.angularVelocity;i.force,i.torque;const p=Ei,m=this.jacobianElementA,y=this.jacobianElementB,x=this.ni;o.cross(x,c),r.cross(x,a),x.negate(m.spatial),c.negate(m.rotational),y.spatial.copy(x),y.rotational.copy(a),p.copy(i.position),p.vadd(r,p),p.vsub(n.position,p),p.vsub(o,p);const v=x.dot(p),g=this.restitution+1,b=g*d.dot(x)-g*l.dot(x)+f.dot(a)-u.dot(c),A=this.computeGiMf();return-v*e-b*s-t*A}getImpactVelocityAlongNormal(){const t=Ci,e=zi,s=Bi,n=Si,i=Mi;return this.bi.position.vadd(this.ri,s),this.bj.position.vadd(this.rj,n),this.bi.getVelocityAtWorldPoint(s,t),this.bj.getVelocityAtWorldPoint(n,e),t.vsub(e,i),this.ni.dot(i)}}const bi=new h,Ai=new h,Ei=new h,Ci=new h,zi=new h,Bi=new h,Si=new h,Mi=new h;class Ce extends Ut{constructor(t,e,s,n,i){e===void 0&&(e=new h),n===void 0&&(n=new h),i===void 0&&(i=1e6),super(t,s),this.pivotA=e.clone(),this.pivotB=n.clone();const o=this.equationX=new jt(t,s),r=this.equationY=new jt(t,s),c=this.equationZ=new jt(t,s);this.equations.push(o,r,c),o.minForce=r.minForce=c.minForce=-i,o.maxForce=r.maxForce=c.maxForce=i,o.ni.set(1,0,0),r.ni.set(0,1,0),c.ni.set(0,0,1)}update(){const t=this.bodyA,e=this.bodyB,s=this.equationX,n=this.equationY,i=this.equationZ;t.quaternion.vmult(this.pivotA,s.ri),e.quaternion.vmult(this.pivotB,s.rj),n.ri.copy(s.ri),n.rj.copy(s.rj),i.ri.copy(s.ri),i.rj.copy(s.rj)}}class _i extends zt{constructor(t,e,s){s===void 0&&(s={});const n=typeof s.maxForce<"u"?s.maxForce:1e6;super(t,e,-n,n),this.axisA=s.axisA?s.axisA.clone():new h(1,0,0),this.axisB=s.axisB?s.axisB.clone():new h(0,1,0),this.angle=typeof s.angle<"u"?s.angle:0}computeB(t){const e=this.a,s=this.b,n=this.axisA,i=this.axisB,o=Fi,r=Ti,c=this.jacobianElementA,a=this.jacobianElementB;n.cross(i,o),i.cross(n,r),c.rotational.copy(r),a.rotational.copy(o);const l=Math.cos(this.angle)-n.dot(i),u=this.computeGW(),d=this.computeGiMf();return-l*e-u*s-t*d}}const Fi=new h,Ti=new h;class Pt extends zt{constructor(t,e,s){s===void 0&&(s={});const n=typeof s.maxForce<"u"?s.maxForce:1e6;super(t,e,-n,n),this.axisA=s.axisA?s.axisA.clone():new h(1,0,0),this.axisB=s.axisB?s.axisB.clone():new h(0,1,0),this.maxAngle=Math.PI/2}computeB(t){const e=this.a,s=this.b,n=this.axisA,i=this.axisB,o=Pi,r=Ii,c=this.jacobianElementA,a=this.jacobianElementB;n.cross(i,o),i.cross(n,r),c.rotational.copy(r),a.rotational.copy(o);const l=Math.cos(this.maxAngle)-n.dot(i),u=this.computeGW(),d=this.computeGiMf();return-l*e-u*s-t*d}}const Pi=new h,Ii=new h;class Ni extends Ce{constructor(t,e,s){s===void 0&&(s={});const n=typeof s.maxForce<"u"?s.maxForce:1e6,i=s.pivotA?s.pivotA.clone():new h,o=s.pivotB?s.pivotB.clone():new h;super(t,i,e,o,n),this.axisA=s.axisA?s.axisA.clone():new h,this.axisB=s.axisB?s.axisB.clone():new h,this.collideConnected=!!s.collideConnected,this.angle=typeof s.angle<"u"?s.angle:0;const r=this.coneEquation=new _i(t,e,s),c=this.twistEquation=new Pt(t,e,s);this.twistAngle=typeof s.twistAngle<"u"?s.twistAngle:0,r.maxForce=0,r.minForce=-n,c.maxForce=0,c.minForce=-n,this.equations.push(r,c)}update(){const t=this.bodyA,e=this.bodyB,s=this.coneEquation,n=this.twistEquation;super.update(),t.vectorToWorldFrame(this.axisA,s.axisA),e.vectorToWorldFrame(this.axisB,s.axisB),this.axisA.tangents(n.axisA,n.axisA),t.vectorToWorldFrame(n.axisA,n.axisA),this.axisB.tangents(n.axisB,n.axisB),e.vectorToWorldFrame(n.axisB,n.axisB),s.angle=this.angle,n.maxAngle=this.twistAngle}}new h;new h;class Ri extends Ut{constructor(t,e,s,n){n===void 0&&(n=1e6),super(t,e),typeof s>"u"&&(s=t.position.distanceTo(e.position)),this.distance=s;const i=this.distanceEquation=new jt(t,e);this.equations.push(i),i.minForce=-n,i.maxForce=n}update(){const t=this.bodyA,e=this.bodyB,s=this.distanceEquation,n=this.distance*.5,i=s.ni;e.position.vsub(t.position,i),i.normalize(),i.scale(n,s.ri),i.scale(-n,s.rj)}}class Li extends Ce{constructor(t,e,s){s===void 0&&(s={});const n=typeof s.maxForce<"u"?s.maxForce:1e6,i=new h,o=new h,r=new h;t.position.vadd(e.position,r),r.scale(.5,r),e.pointToLocalFrame(r,o),t.pointToLocalFrame(r,i),super(t,i,e,o,n),this.xA=t.vectorToLocalFrame(h.UNIT_X),this.xB=e.vectorToLocalFrame(h.UNIT_X),this.yA=t.vectorToLocalFrame(h.UNIT_Y),this.yB=e.vectorToLocalFrame(h.UNIT_Y),this.zA=t.vectorToLocalFrame(h.UNIT_Z),this.zB=e.vectorToLocalFrame(h.UNIT_Z);const c=this.rotationalEquation1=new Pt(t,e,s),a=this.rotationalEquation2=new Pt(t,e,s),l=this.rotationalEquation3=new Pt(t,e,s);this.equations.push(c,a,l)}update(){const t=this.bodyA,e=this.bodyB;this.motorEquation;const s=this.rotationalEquation1,n=this.rotationalEquation2,i=this.rotationalEquation3;super.update(),t.vectorToWorldFrame(this.xA,s.axisA),e.vectorToWorldFrame(this.yB,s.axisB),t.vectorToWorldFrame(this.yA,n.axisA),e.vectorToWorldFrame(this.zB,n.axisB),t.vectorToWorldFrame(this.zA,i.axisA),e.vectorToWorldFrame(this.xB,i.axisB)}}new h;new h;class $s extends zt{constructor(t,e,s){s===void 0&&(s=1e6),super(t,e,-s,s),this.axisA=new h,this.axisB=new h,this.targetVelocity=0}computeB(t){this.a;const e=this.b;this.bi,this.bj;const s=this.axisA,n=this.axisB,i=this.jacobianElementA,o=this.jacobianElementB;i.rotational.copy(s),n.negate(o.rotational);const r=this.computeGW()-this.targetVelocity,c=this.computeGiMf();return-r*e-t*c}}class Ks extends Ce{constructor(t,e,s){s===void 0&&(s={});const n=typeof s.maxForce<"u"?s.maxForce:1e6,i=s.pivotA?s.pivotA.clone():new h,o=s.pivotB?s.pivotB.clone():new h;super(t,i,e,o,n),(this.axisA=s.axisA?s.axisA.clone():new h(1,0,0)).normalize(),(this.axisB=s.axisB?s.axisB.clone():new h(1,0,0)).normalize(),this.collideConnected=!!s.collideConnected;const a=this.rotationalEquation1=new Pt(t,e,s),l=this.rotationalEquation2=new Pt(t,e,s),u=this.motorEquation=new $s(t,e,n);u.enabled=!1,this.equations.push(a,l,u)}enableMotor(){this.motorEquation.enabled=!0}disableMotor(){this.motorEquation.enabled=!1}setMotorSpeed(t){this.motorEquation.targetVelocity=t}setMotorMaxForce(t){this.motorEquation.maxForce=t,this.motorEquation.minForce=-t}update(){const t=this.bodyA,e=this.bodyB,s=this.motorEquation,n=this.rotationalEquation1,i=this.rotationalEquation2,o=qi,r=ki,c=this.axisA,a=this.axisB;super.update(),t.quaternion.vmult(c,o),e.quaternion.vmult(a,r),o.tangents(n.axisA,i.axisA),n.axisB.copy(r),i.axisB.copy(r),this.motorEquation.enabled&&(t.quaternion.vmult(this.axisA,s.axisA),e.quaternion.vmult(this.axisB,s.axisB))}}const qi=new h,ki=new h;class Re extends zt{constructor(t,e,s){super(t,e,-s,s),this.ri=new h,this.rj=new h,this.t=new h}computeB(t){this.a;const e=this.b;this.bi,this.bj;const s=this.ri,n=this.rj,i=Wi,o=Vi,r=this.t;s.cross(r,i),n.cross(r,o);const c=this.jacobianElementA,a=this.jacobianElementB;r.negate(c.spatial),i.negate(c.rotational),a.spatial.copy(r),a.rotational.copy(o);const l=this.computeGW(),u=this.computeGiMf();return-l*e-t*u}}const Wi=new h,Vi=new h;class ee{constructor(t,e,s){s=Ee.defaults(s,{friction:.3,restitution:.3,contactEquationStiffness:1e7,contactEquationRelaxation:3,frictionEquationStiffness:1e7,frictionEquationRelaxation:3}),this.id=ee.idCounter++,this.materials=[t,e],this.friction=s.friction,this.restitution=s.restitution,this.contactEquationStiffness=s.contactEquationStiffness,this.contactEquationRelaxation=s.contactEquationRelaxation,this.frictionEquationStiffness=s.frictionEquationStiffness,this.frictionEquationRelaxation=s.frictionEquationRelaxation}}ee.idCounter=0;class se{constructor(t){t===void 0&&(t={});let e="";typeof t=="string"&&(e=t,t={}),this.name=e,this.id=se.idCounter++,this.friction=typeof t.friction<"u"?t.friction:-1,this.restitution=typeof t.restitution<"u"?t.restitution:-1}}se.idCounter=0;class ji{constructor(t,e,s){s===void 0&&(s={}),this.restLength=typeof s.restLength=="number"?s.restLength:1,this.stiffness=s.stiffness||100,this.damping=s.damping||1,this.bodyA=t,this.bodyB=e,this.localAnchorA=new h,this.localAnchorB=new h,s.localAnchorA&&this.localAnchorA.copy(s.localAnchorA),s.localAnchorB&&this.localAnchorB.copy(s.localAnchorB),s.worldAnchorA&&this.setWorldAnchorA(s.worldAnchorA),s.worldAnchorB&&this.setWorldAnchorB(s.worldAnchorB)}setWorldAnchorA(t){this.bodyA.pointToLocalFrame(t,this.localAnchorA)}setWorldAnchorB(t){this.bodyB.pointToLocalFrame(t,this.localAnchorB)}getWorldAnchorA(t){this.bodyA.pointToWorldFrame(this.localAnchorA,t)}getWorldAnchorB(t){this.bodyB.pointToWorldFrame(this.localAnchorB,t)}applyForce(){const t=this.stiffness,e=this.damping,s=this.restLength,n=this.bodyA,i=this.bodyB,o=Di,r=Oi,c=Hi,a=Gi,l=Ji,u=Ui,d=Yi,f=Xi,p=$i,m=Ki,y=Zi;this.getWorldAnchorA(u),this.getWorldAnchorB(d),u.vsub(n.position,f),d.vsub(i.position,p),d.vsub(u,o);const x=o.length();r.copy(o),r.normalize(),i.velocity.vsub(n.velocity,c),i.angularVelocity.cross(p,l),c.vadd(l,c),n.angularVelocity.cross(f,l),c.vsub(l,c),r.scale(-t*(x-s)-e*c.dot(r),a),n.force.vsub(a,n.force),i.force.vadd(a,i.force),f.cross(a,m),p.cross(a,y),n.torque.vsub(m,n.torque),i.torque.vadd(y,i.torque)}}const Di=new h,Oi=new h,Hi=new h,Gi=new h,Ui=new h,Yi=new h,Xi=new h,$i=new h,Ki=new h,Zi=new h,Ji=new h;class Zs{constructor(t){t===void 0&&(t={}),t=Ee.defaults(t,{chassisConnectionPointLocal:new h,chassisConnectionPointWorld:new h,directionLocal:new h,directionWorld:new h,axleLocal:new h,axleWorld:new h,suspensionRestLength:1,suspensionMaxLength:2,radius:1,suspensionStiffness:100,dampingCompression:10,dampingRelaxation:10,frictionSlip:10.5,forwardAcceleration:1,sideAcceleration:1,steering:0,rotation:0,deltaRotation:0,rollInfluence:.01,maxSuspensionForce:Number.MAX_VALUE,isFrontWheel:!0,clippedInvContactDotSuspension:1,suspensionRelativeVelocity:0,suspensionForce:0,slipInfo:0,skidInfo:0,suspensionLength:0,maxSuspensionTravel:1,useCustomSlidingRotationalSpeed:!1,customSlidingRotationalSpeed:-.1}),this.maxSuspensionTravel=t.maxSuspensionTravel,this.customSlidingRotationalSpeed=t.customSlidingRotationalSpeed,this.useCustomSlidingRotationalSpeed=t.useCustomSlidingRotationalSpeed,this.sliding=!1,this.chassisConnectionPointLocal=t.chassisConnectionPointLocal.clone(),this.chassisConnectionPointWorld=t.chassisConnectionPointWorld.clone(),this.directionLocal=t.directionLocal.clone(),this.directionWorld=t.directionWorld.clone(),this.axleLocal=t.axleLocal.clone(),this.axleWorld=t.axleWorld.clone(),this.suspensionRestLength=t.suspensionRestLength,this.suspensionMaxLength=t.suspensionMaxLength,this.radius=t.radius,this.suspensionStiffness=t.suspensionStiffness,this.dampingCompression=t.dampingCompression,this.dampingRelaxation=t.dampingRelaxation,this.frictionSlip=t.frictionSlip,this.forwardAcceleration=t.forwardAcceleration,this.sideAcceleration=t.sideAcceleration,this.steering=0,this.rotation=0,this.deltaRotation=0,this.rollInfluence=t.rollInfluence,this.maxSuspensionForce=t.maxSuspensionForce,this.engineForce=0,this.brake=0,this.isFrontWheel=t.isFrontWheel,this.clippedInvContactDotSuspension=1,this.suspensionRelativeVelocity=0,this.suspensionForce=0,this.slipInfo=0,this.skidInfo=0,this.suspensionLength=0,this.sideImpulse=0,this.forwardImpulse=0,this.raycastResult=new Dt,this.worldTransform=new j,this.isInContact=!1}updateWheel(t){const e=this.raycastResult;if(this.isInContact){const s=e.hitNormalWorld.dot(e.directionWorld);e.hitPointWorld.vsub(t.position,as),t.getVelocityAtWorldPoint(as,cs);const n=e.hitNormalWorld.dot(cs);if(s>=-.1)this.suspensionRelativeVelocity=0,this.clippedInvContactDotSuspension=1/.1;else{const i=-1/s;this.suspensionRelativeVelocity=n*i,this.clippedInvContactDotSuspension=i}}else e.suspensionLength=this.suspensionRestLength,this.suspensionRelativeVelocity=0,e.directionWorld.scale(-1,e.hitNormalWorld),this.clippedInvContactDotSuspension=1}}const cs=new h,as=new h;class Qi{constructor(t){this.chassisBody=t.chassisBody,this.wheelInfos=[],this.sliding=!1,this.world=null,this.indexRightAxis=typeof t.indexRightAxis<"u"?t.indexRightAxis:2,this.indexForwardAxis=typeof t.indexForwardAxis<"u"?t.indexForwardAxis:0,this.indexUpAxis=typeof t.indexUpAxis<"u"?t.indexUpAxis:1,this.constraints=[],this.preStepCallback=()=>{},this.currentVehicleSpeedKmHour=0,this.numWheelsOnGround=0}addWheel(t){t===void 0&&(t={});const e=new Zs(t),s=this.wheelInfos.length;return this.wheelInfos.push(e),s}setSteeringValue(t,e){const s=this.wheelInfos[e];s.steering=t}applyEngineForce(t,e){this.wheelInfos[e].engineForce=t}setBrake(t,e){this.wheelInfos[e].brake=t}addToWorld(t){t.addBody(this.chassisBody);const e=this;this.preStepCallback=()=>{e.updateVehicle(t.dt)},t.addEventListener("preStep",this.preStepCallback),this.world=t}getVehicleAxisWorld(t,e){e.set(t===0?1:0,t===1?1:0,t===2?1:0),this.chassisBody.vectorToWorldFrame(e,e)}updateVehicle(t){const e=this.wheelInfos,s=e.length,n=this.chassisBody;for(let u=0;u<s;u++)this.updateWheelTransform(u);this.currentVehicleSpeedKmHour=3.6*n.velocity.length();const i=new h;this.getVehicleAxisWorld(this.indexForwardAxis,i),i.dot(n.velocity)<0&&(this.currentVehicleSpeedKmHour*=-1);for(let u=0;u<s;u++)this.castRay(e[u]);this.updateSuspension(t);const o=new h,r=new h;for(let u=0;u<s;u++){const d=e[u];let f=d.suspensionForce;f>d.maxSuspensionForce&&(f=d.maxSuspensionForce),d.raycastResult.hitNormalWorld.scale(f*t,o),d.raycastResult.hitPointWorld.vsub(n.position,r),n.applyImpulse(o,r)}this.updateFriction(t);const c=new h,a=new h,l=new h;for(let u=0;u<s;u++){const d=e[u];n.getVelocityAtWorldPoint(d.chassisConnectionPointWorld,l);let f=1;switch(this.indexUpAxis){case 1:f=-1;break}if(d.isInContact){this.getVehicleAxisWorld(this.indexForwardAxis,a);const p=a.dot(d.raycastResult.hitNormalWorld);d.raycastResult.hitNormalWorld.scale(p,c),a.vsub(c,a);const m=a.dot(l);d.deltaRotation=f*m*t/d.radius}(d.sliding||!d.isInContact)&&d.engineForce!==0&&d.useCustomSlidingRotationalSpeed&&(d.deltaRotation=(d.engineForce>0?1:-1)*d.customSlidingRotationalSpeed*t),Math.abs(d.brake)>Math.abs(d.engineForce)&&(d.deltaRotation=0),d.rotation+=d.deltaRotation,d.deltaRotation*=.99}}updateSuspension(t){const s=this.chassisBody.mass,n=this.wheelInfos,i=n.length;for(let o=0;o<i;o++){const r=n[o];if(r.isInContact){let c;const a=r.suspensionRestLength,l=r.suspensionLength,u=a-l;c=r.suspensionStiffness*u*r.clippedInvContactDotSuspension;const d=r.suspensionRelativeVelocity;let f;d<0?f=r.dampingCompression:f=r.dampingRelaxation,c-=f*d,r.suspensionForce=c*s,r.suspensionForce<0&&(r.suspensionForce=0)}else r.suspensionForce=0}}removeFromWorld(t){this.constraints,t.removeBody(this.chassisBody),t.removeEventListener("preStep",this.preStepCallback),this.world=null}castRay(t){const e=no,s=io;this.updateWheelTransformWorld(t);const n=this.chassisBody;let i=-1;const o=t.suspensionRestLength+t.radius;t.directionWorld.scale(o,e);const r=t.chassisConnectionPointWorld;r.vadd(e,s);const c=t.raycastResult;c.reset();const a=n.collisionResponse;n.collisionResponse=!1,this.world.rayTest(r,s,c),n.collisionResponse=a;const l=c.body;if(t.raycastResult.groundObject=0,l){i=c.distance,t.raycastResult.hitNormalWorld=c.hitNormalWorld,t.isInContact=!0;const u=c.distance;t.suspensionLength=u-t.radius;const d=t.suspensionRestLength-t.maxSuspensionTravel,f=t.suspensionRestLength+t.maxSuspensionTravel;t.suspensionLength<d&&(t.suspensionLength=d),t.suspensionLength>f&&(t.suspensionLength=f,t.raycastResult.reset());const p=t.raycastResult.hitNormalWorld.dot(t.directionWorld),m=new h;n.getVelocityAtWorldPoint(t.raycastResult.hitPointWorld,m);const y=t.raycastResult.hitNormalWorld.dot(m);if(p>=-.1)t.suspensionRelativeVelocity=0,t.clippedInvContactDotSuspension=1/.1;else{const x=-1/p;t.suspensionRelativeVelocity=y*x,t.clippedInvContactDotSuspension=x}}else t.suspensionLength=t.suspensionRestLength+0*t.maxSuspensionTravel,t.suspensionRelativeVelocity=0,t.directionWorld.scale(-1,t.raycastResult.hitNormalWorld),t.clippedInvContactDotSuspension=1;return i}updateWheelTransformWorld(t){t.isInContact=!1;const e=this.chassisBody;e.pointToWorldFrame(t.chassisConnectionPointLocal,t.chassisConnectionPointWorld),e.vectorToWorldFrame(t.directionLocal,t.directionWorld),e.vectorToWorldFrame(t.axleLocal,t.axleWorld)}updateWheelTransform(t){const e=to,s=eo,n=so,i=this.wheelInfos[t];this.updateWheelTransformWorld(i),i.directionLocal.scale(-1,e),s.copy(i.axleLocal),e.cross(s,n),n.normalize(),s.normalize();const o=i.steering,r=new U;r.setFromAxisAngle(e,o);const c=new U;c.setFromAxisAngle(s,i.rotation);const a=i.worldTransform.quaternion;this.chassisBody.quaternion.mult(r,a),a.mult(c,a),a.normalize();const l=i.worldTransform.position;l.copy(i.directionWorld),l.scale(i.suspensionLength,l),l.vadd(i.chassisConnectionPointWorld,l)}getWheelTransformWorld(t){return this.wheelInfos[t].worldTransform}updateFriction(t){const e=ro,s=this.wheelInfos,n=s.length,i=this.chassisBody,o=ao,r=co;this.numWheelsOnGround=0;for(let l=0;l<n;l++){const u=s[l];u.raycastResult.body&&this.numWheelsOnGround++,u.sideImpulse=0,u.forwardImpulse=0,o[l]||(o[l]=new h),r[l]||(r[l]=new h)}for(let l=0;l<n;l++){const u=s[l],d=u.raycastResult.body;if(d){const f=r[l];this.getWheelTransformWorld(l).vectorToWorldFrame(oo[this.indexRightAxis],f);const m=u.raycastResult.hitNormalWorld,y=f.dot(m);m.scale(y,e),f.vsub(e,f),f.normalize(),m.cross(f,o[l]),o[l].normalize(),u.sideImpulse=Ao(i,u.raycastResult.hitPointWorld,d,u.raycastResult.hitPointWorld,f),u.sideImpulse*=lo}}const c=1,a=.5;this.sliding=!1;for(let l=0;l<n;l++){const u=s[l],d=u.raycastResult.body;let f=0;if(u.slipInfo=1,d){const m=u.brake?u.brake:0;f=fo(i,d,u.raycastResult.hitPointWorld,o[l],m),f+=u.engineForce*t;const y=m/f;u.slipInfo*=y}if(u.forwardImpulse=0,u.skidInfo=1,d){u.skidInfo=1;const p=u.suspensionForce*t*u.frictionSlip,y=p*p;u.forwardImpulse=f;const x=u.forwardImpulse*a/u.forwardAcceleration,v=u.sideImpulse*c/u.sideAcceleration,g=x*x+v*v;if(u.sliding=!1,g>y){this.sliding=!0,u.sliding=!0;const b=p/Math.sqrt(g);u.skidInfo*=b}}}if(this.sliding)for(let l=0;l<n;l++){const u=s[l];u.sideImpulse!==0&&u.skidInfo<1&&(u.forwardImpulse*=u.skidInfo,u.sideImpulse*=u.skidInfo)}for(let l=0;l<n;l++){const u=s[l],d=new h;if(u.raycastResult.hitPointWorld.vsub(i.position,d),u.forwardImpulse!==0){const f=new h;o[l].scale(u.forwardImpulse,f),i.applyImpulse(f,d)}if(u.sideImpulse!==0){const f=u.raycastResult.body,p=new h;u.raycastResult.hitPointWorld.vsub(f.position,p);const m=new h;r[l].scale(u.sideImpulse,m),i.vectorToLocalFrame(d,d),d["xyz"[this.indexUpAxis]]*=u.rollInfluence,i.vectorToWorldFrame(d,d),i.applyImpulse(m,d),m.scale(-1,m),f.applyImpulse(m,p)}}}}new h;new h;new h;const to=new h,eo=new h,so=new h;new Y;new h;const no=new h,io=new h,oo=[new h(1,0,0),new h(0,1,0),new h(0,0,1)],ro=new h,co=[],ao=[],lo=1,ho=new h,uo=new h,po=new h;function fo(w,t,e,s,n){let i=0;const o=e,r=ho,c=uo,a=po;w.getVelocityAtWorldPoint(o,r),t.getVelocityAtWorldPoint(o,c),r.vsub(c,a);const l=s.dot(a),u=ls(w,e,s),d=ls(t,e,s),p=1/(u+d);return i=-l*p,n<i&&(i=n),i<-n&&(i=-n),i}const mo=new h,vo=new h,yo=new h,wo=new h;function ls(w,t,e){const s=mo,n=vo,i=yo,o=wo;return t.vsub(w.position,s),s.cross(e,n),w.invInertiaWorld.vmult(n,o),o.cross(s,i),w.invMass+e.dot(i)}const xo=new h,go=new h,bo=new h;function Ao(w,t,e,s,n){if(n.lengthSquared()>1.1)return 0;const o=xo,r=go,c=bo;w.getVelocityAtWorldPoint(t,o),e.getVelocityAtWorldPoint(s,r),o.vsub(r,c);const a=n.dot(c),l=1/(w.invMass+e.invMass);return-.2*a*l}class Ge extends S{constructor(t){if(super({type:S.types.SPHERE}),this.radius=t!==void 0?t:1,this.radius<0)throw new Error("The sphere radius cannot be negative.");this.updateBoundingSphereRadius()}calculateLocalInertia(t,e){e===void 0&&(e=new h);const s=2*t*this.radius*this.radius/5;return e.x=s,e.y=s,e.z=s,e}volume(){return 4*Math.PI*Math.pow(this.radius,3)/3}updateBoundingSphereRadius(){this.boundingSphereRadius=this.radius}calculateWorldAABB(t,e,s,n){const i=this.radius,o=["x","y","z"];for(let r=0;r<o.length;r++){const c=o[r];s[c]=t[c]-i,n[c]=t[c]+i}}}class Eo{constructor(t){t===void 0&&(t={}),this.wheelBodies=[],this.coordinateSystem=typeof t.coordinateSystem<"u"?t.coordinateSystem.clone():new h(1,2,3),t.chassisBody?this.chassisBody=t.chassisBody:this.chassisBody=new F({mass:1,shape:new Gt(new h(5,.5,2))}),this.constraints=[],this.wheelAxes=[],this.wheelForces=[]}addWheel(t){t===void 0&&(t={});let e;t.body?e=t.body:e=new F({mass:1,shape:new Ge(1.2)}),this.wheelBodies.push(e),this.wheelForces.push(0);const s=typeof t.position<"u"?t.position.clone():new h,n=new h;this.chassisBody.pointToWorldFrame(s,n),e.position.set(n.x,n.y,n.z);const i=typeof t.axis<"u"?t.axis.clone():new h(0,0,1);this.wheelAxes.push(i);const o=new Ks(this.chassisBody,e,{pivotA:s,axisA:i,pivotB:h.ZERO,axisB:i,collideConnected:!1});return this.constraints.push(o),this.wheelBodies.length-1}setSteeringValue(t,e){const s=this.wheelAxes[e],n=Math.cos(t),i=Math.sin(t),o=s.x,r=s.z;this.constraints[e].axisA.set(-n*o+i*r,0,i*o+n*r)}setMotorSpeed(t,e){const s=this.constraints[e];s.enableMotor(),s.motorTargetVelocity=t}disableMotor(t){this.constraints[t].disableMotor()}setWheelForce(t,e){this.wheelForces[e]=t}applyWheelForce(t,e){const s=this.wheelAxes[e],n=this.wheelBodies[e],i=n.torque;s.scale(t,re),n.vectorToWorldFrame(re,re),i.vadd(re,i)}addToWorld(t){const e=this.constraints,s=this.wheelBodies.concat([this.chassisBody]);for(let n=0;n<s.length;n++)t.addBody(s[n]);for(let n=0;n<e.length;n++)t.addConstraint(e[n]);t.addEventListener("preStep",this._update.bind(this))}_update(){const t=this.wheelForces;for(let e=0;e<t.length;e++)this.applyWheelForce(t[e],e)}removeFromWorld(t){const e=this.constraints,s=this.wheelBodies.concat([this.chassisBody]);for(let n=0;n<s.length;n++)t.removeBody(s[n]);for(let n=0;n<e.length;n++)t.removeConstraint(e[n])}getWheelSpeed(t){const e=this.wheelAxes[t],n=this.wheelBodies[t].angularVelocity;return this.chassisBody.vectorToWorldFrame(e,hs),n.dot(hs)}}const re=new h,hs=new h;class Co{constructor(){this.particles=[],this.density=1,this.smoothingRadius=1,this.speedOfSound=1,this.viscosity=.01,this.eps=1e-6,this.pressures=[],this.densities=[],this.neighbors=[]}add(t){this.particles.push(t),this.neighbors.length<this.particles.length&&this.neighbors.push([])}remove(t){const e=this.particles.indexOf(t);e!==-1&&(this.particles.splice(e,1),this.neighbors.length>this.particles.length&&this.neighbors.pop())}getNeighbors(t,e){const s=this.particles.length,n=t.id,i=this.smoothingRadius*this.smoothingRadius,o=zo;for(let r=0;r!==s;r++){const c=this.particles[r];c.position.vsub(t.position,o),n!==c.id&&o.lengthSquared()<i&&e.push(c)}}update(){const t=this.particles.length,e=Bo,s=this.speedOfSound,n=this.eps;for(let l=0;l!==t;l++){const u=this.particles[l],d=this.neighbors[l];d.length=0,this.getNeighbors(u,d),d.push(this.particles[l]);const f=d.length;let p=0;for(let m=0;m!==f;m++){u.position.vsub(d[m].position,e);const y=e.length(),x=this.w(y);p+=d[m].mass*x}this.densities[l]=p,this.pressures[l]=s*s*(this.densities[l]-this.density)}const i=So,o=Mo,r=_o,c=Fo,a=To;for(let l=0;l!==t;l++){const u=this.particles[l];i.set(0,0,0),o.set(0,0,0);let d,f;const p=this.neighbors[l],m=p.length;for(let y=0;y!==m;y++){const x=p[y];u.position.vsub(x.position,c);const v=c.length();d=-x.mass*(this.pressures[l]/(this.densities[l]*this.densities[l]+n)+this.pressures[y]/(this.densities[y]*this.densities[y]+n)),this.gradw(c,r),r.scale(d,r),i.vadd(r,i),x.velocity.vsub(u.velocity,a),a.scale(1/(1e-4+this.densities[l]*this.densities[y])*this.viscosity*x.mass,a),f=this.nablaw(v),a.scale(f,a),o.vadd(a,o)}o.scale(u.mass,o),i.scale(u.mass,i),u.force.vadd(o,u.force),u.force.vadd(i,u.force)}}w(t){const e=this.smoothingRadius;return 315/(64*Math.PI*e**9)*(e*e-t*t)**3}gradw(t,e){const s=t.length(),n=this.smoothingRadius;t.scale(945/(32*Math.PI*n**9)*(n*n-s*s)**2,e)}nablaw(t){const e=this.smoothingRadius;return 945/(32*Math.PI*e**9)*(e*e-t*t)*(7*t*t-3*e*e)}}const zo=new h,Bo=new h,So=new h,Mo=new h,_o=new h,Fo=new h,To=new h;class Po extends Ct{constructor(t,e,s,n){if(t===void 0&&(t=1),e===void 0&&(e=1),s===void 0&&(s=1),n===void 0&&(n=8),t<0)throw new Error("The cylinder radiusTop cannot be negative.");if(e<0)throw new Error("The cylinder radiusBottom cannot be negative.");const i=n,o=[],r=[],c=[],a=[],l=[],u=Math.cos,d=Math.sin;o.push(new h(-e*d(0),-s*.5,e*u(0))),a.push(0),o.push(new h(-t*d(0),s*.5,t*u(0))),l.push(1);for(let p=0;p<i;p++){const m=2*Math.PI/i*(p+1),y=2*Math.PI/i*(p+.5);p<i-1?(o.push(new h(-e*d(m),-s*.5,e*u(m))),a.push(2*p+2),o.push(new h(-t*d(m),s*.5,t*u(m))),l.push(2*p+3),c.push([2*p,2*p+1,2*p+3,2*p+2])):c.push([2*p,2*p+1,1,0]),(i%2===1||p<i/2)&&r.push(new h(-d(y),0,u(y)))}c.push(a),r.push(new h(0,1,0));const f=[];for(let p=0;p<l.length;p++)f.push(l[l.length-p-1]);c.push(f),super({vertices:o,faces:c,axes:r}),this.type=S.types.CYLINDER,this.radiusTop=t,this.radiusBottom=e,this.height=s,this.numSegments=n}}class Io extends S{constructor(){super({type:S.types.PARTICLE})}calculateLocalInertia(t,e){return e===void 0&&(e=new h),e.set(0,0,0),e}volume(){return 0}updateBoundingSphereRadius(){this.boundingSphereRadius=0}calculateWorldAABB(t,e,s,n){s.copy(t),n.copy(t)}}class Js extends S{constructor(){super({type:S.types.PLANE}),this.worldNormal=new h,this.worldNormalNeedsUpdate=!0,this.boundingSphereRadius=Number.MAX_VALUE}computeWorldNormal(t){const e=this.worldNormal;e.set(0,0,1),t.vmult(e,e),this.worldNormalNeedsUpdate=!1}calculateLocalInertia(t,e){return e===void 0&&(e=new h),e}volume(){return Number.MAX_VALUE}calculateWorldAABB(t,e,s,n){wt.set(0,0,1),e.vmult(wt,wt);const i=Number.MAX_VALUE;s.set(-i,-i,-i),n.set(i,i,i),wt.x===1?n.x=t.x:wt.x===-1&&(s.x=t.x),wt.y===1?n.y=t.y:wt.y===-1&&(s.y=t.y),wt.z===1?n.z=t.z:wt.z===-1&&(s.z=t.z)}updateBoundingSphereRadius(){this.boundingSphereRadius=Number.MAX_VALUE}}const wt=new h;class No extends S{constructor(t,e){e===void 0&&(e={}),e=Ee.defaults(e,{maxValue:null,minValue:null,elementSize:1}),super({type:S.types.HEIGHTFIELD}),this.data=t,this.maxValue=e.maxValue,this.minValue=e.minValue,this.elementSize=e.elementSize,e.minValue===null&&this.updateMinValue(),e.maxValue===null&&this.updateMaxValue(),this.cacheEnabled=!0,this.pillarConvex=new Ct,this.pillarOffset=new h,this.updateBoundingSphereRadius(),this._cachedPillars={}}update(){this._cachedPillars={}}updateMinValue(){const t=this.data;let e=t[0][0];for(let s=0;s!==t.length;s++)for(let n=0;n!==t[s].length;n++){const i=t[s][n];i<e&&(e=i)}this.minValue=e}updateMaxValue(){const t=this.data;let e=t[0][0];for(let s=0;s!==t.length;s++)for(let n=0;n!==t[s].length;n++){const i=t[s][n];i>e&&(e=i)}this.maxValue=e}setHeightValueAtIndex(t,e,s){const n=this.data;n[t][e]=s,this.clearCachedConvexTrianglePillar(t,e,!1),t>0&&(this.clearCachedConvexTrianglePillar(t-1,e,!0),this.clearCachedConvexTrianglePillar(t-1,e,!1)),e>0&&(this.clearCachedConvexTrianglePillar(t,e-1,!0),this.clearCachedConvexTrianglePillar(t,e-1,!1)),e>0&&t>0&&this.clearCachedConvexTrianglePillar(t-1,e-1,!0)}getRectMinMax(t,e,s,n,i){i===void 0&&(i=[]);const o=this.data;let r=this.minValue;for(let c=t;c<=s;c++)for(let a=e;a<=n;a++){const l=o[c][a];l>r&&(r=l)}i[0]=this.minValue,i[1]=r}getIndexOfPosition(t,e,s,n){const i=this.elementSize,o=this.data;let r=Math.floor(t/i),c=Math.floor(e/i);return s[0]=r,s[1]=c,n&&(r<0&&(r=0),c<0&&(c=0),r>=o.length-1&&(r=o.length-1),c>=o[0].length-1&&(c=o[0].length-1)),!(r<0||c<0||r>=o.length-1||c>=o[0].length-1)}getTriangleAt(t,e,s,n,i,o){const r=ds;this.getIndexOfPosition(t,e,r,s);let c=r[0],a=r[1];const l=this.data;s&&(c=Math.min(l.length-2,Math.max(0,c)),a=Math.min(l[0].length-2,Math.max(0,a)));const u=this.elementSize,d=(t/u-c)**2+(e/u-a)**2,f=(t/u-(c+1))**2+(e/u-(a+1))**2,p=d>f;return this.getTriangle(c,a,p,n,i,o),p}getNormalAt(t,e,s,n){const i=ko,o=Wo,r=Vo,c=jo,a=Do;this.getTriangleAt(t,e,s,i,o,r),o.vsub(i,c),r.vsub(i,a),c.cross(a,n),n.normalize()}getAabbAtIndex(t,e,s){let{lowerBound:n,upperBound:i}=s;const o=this.data,r=this.elementSize;n.set(t*r,e*r,o[t][e]),i.set((t+1)*r,(e+1)*r,o[t+1][e+1])}getHeightAt(t,e,s){const n=this.data,i=Ro,o=Lo,r=qo,c=ds;this.getIndexOfPosition(t,e,c,s);let a=c[0],l=c[1];s&&(a=Math.min(n.length-2,Math.max(0,a)),l=Math.min(n[0].length-2,Math.max(0,l)));const u=this.getTriangleAt(t,e,s,i,o,r);Oo(t,e,i.x,i.y,o.x,o.y,r.x,r.y,us);const d=us;return u?n[a+1][l+1]*d.x+n[a][l+1]*d.y+n[a+1][l]*d.z:n[a][l]*d.x+n[a+1][l]*d.y+n[a][l+1]*d.z}getCacheConvexTrianglePillarKey(t,e,s){return`${t}_${e}_${s?1:0}`}getCachedConvexTrianglePillar(t,e,s){return this._cachedPillars[this.getCacheConvexTrianglePillarKey(t,e,s)]}setCachedConvexTrianglePillar(t,e,s,n,i){this._cachedPillars[this.getCacheConvexTrianglePillarKey(t,e,s)]={convex:n,offset:i}}clearCachedConvexTrianglePillar(t,e,s){delete this._cachedPillars[this.getCacheConvexTrianglePillarKey(t,e,s)]}getTriangle(t,e,s,n,i,o){const r=this.data,c=this.elementSize;s?(n.set((t+1)*c,(e+1)*c,r[t+1][e+1]),i.set(t*c,(e+1)*c,r[t][e+1]),o.set((t+1)*c,e*c,r[t+1][e])):(n.set(t*c,e*c,r[t][e]),i.set((t+1)*c,e*c,r[t+1][e]),o.set(t*c,(e+1)*c,r[t][e+1]))}getConvexTrianglePillar(t,e,s){let n=this.pillarConvex,i=this.pillarOffset;if(this.cacheEnabled){const u=this.getCachedConvexTrianglePillar(t,e,s);if(u){this.pillarConvex=u.convex,this.pillarOffset=u.offset;return}n=new Ct,i=new h,this.pillarConvex=n,this.pillarOffset=i}const o=this.data,r=this.elementSize,c=n.faces;n.vertices.length=6;for(let u=0;u<6;u++)n.vertices[u]||(n.vertices[u]=new h);c.length=5;for(let u=0;u<5;u++)c[u]||(c[u]=[]);const a=n.vertices,l=(Math.min(o[t][e],o[t+1][e],o[t][e+1],o[t+1][e+1])-this.minValue)/2+this.minValue;s?(i.set((t+.75)*r,(e+.75)*r,l),a[0].set(.25*r,.25*r,o[t+1][e+1]-l),a[1].set(-.75*r,.25*r,o[t][e+1]-l),a[2].set(.25*r,-.75*r,o[t+1][e]-l),a[3].set(.25*r,.25*r,-Math.abs(l)-1),a[4].set(-.75*r,.25*r,-Math.abs(l)-1),a[5].set(.25*r,-.75*r,-Math.abs(l)-1),c[0][0]=0,c[0][1]=1,c[0][2]=2,c[1][0]=5,c[1][1]=4,c[1][2]=3,c[2][0]=2,c[2][1]=5,c[2][2]=3,c[2][3]=0,c[3][0]=3,c[3][1]=4,c[3][2]=1,c[3][3]=0,c[4][0]=1,c[4][1]=4,c[4][2]=5,c[4][3]=2):(i.set((t+.25)*r,(e+.25)*r,l),a[0].set(-.25*r,-.25*r,o[t][e]-l),a[1].set(.75*r,-.25*r,o[t+1][e]-l),a[2].set(-.25*r,.75*r,o[t][e+1]-l),a[3].set(-.25*r,-.25*r,-Math.abs(l)-1),a[4].set(.75*r,-.25*r,-Math.abs(l)-1),a[5].set(-.25*r,.75*r,-Math.abs(l)-1),c[0][0]=0,c[0][1]=1,c[0][2]=2,c[1][0]=5,c[1][1]=4,c[1][2]=3,c[2][0]=0,c[2][1]=2,c[2][2]=5,c[2][3]=3,c[3][0]=1,c[3][1]=0,c[3][2]=3,c[3][3]=4,c[4][0]=4,c[4][1]=5,c[4][2]=2,c[4][3]=1),n.computeNormals(),n.computeEdges(),n.updateBoundingSphereRadius(),this.setCachedConvexTrianglePillar(t,e,s,n,i)}calculateLocalInertia(t,e){return e===void 0&&(e=new h),e.set(0,0,0),e}volume(){return Number.MAX_VALUE}calculateWorldAABB(t,e,s,n){s.set(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE),n.set(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE)}updateBoundingSphereRadius(){const t=this.data,e=this.elementSize;this.boundingSphereRadius=new h(t.length*e,t[0].length*e,Math.max(Math.abs(this.maxValue),Math.abs(this.minValue))).length()}setHeightsFromImage(t,e){const{x:s,z:n,y:i}=e,o=document.createElement("canvas");o.width=t.width,o.height=t.height;const r=o.getContext("2d");r.drawImage(t,0,0);const c=r.getImageData(0,0,t.width,t.height),a=this.data;a.length=0,this.elementSize=Math.abs(s)/c.width;for(let l=0;l<c.height;l++){const u=[];for(let d=0;d<c.width;d++){const f=c.data[(l*c.height+d)*4],p=c.data[(l*c.height+d)*4+1],m=c.data[(l*c.height+d)*4+2],y=(f+p+m)/4/255*n;s<0?u.push(y):u.unshift(y)}i<0?a.unshift(u):a.push(u)}this.updateMaxValue(),this.updateMinValue(),this.update()}}const ds=[],us=new h,Ro=new h,Lo=new h,qo=new h,ko=new h,Wo=new h,Vo=new h,jo=new h,Do=new h;function Oo(w,t,e,s,n,i,o,r,c){c.x=((i-r)*(w-o)+(o-n)*(t-r))/((i-r)*(e-o)+(o-n)*(s-r)),c.y=((r-s)*(w-o)+(e-o)*(t-r))/((i-r)*(e-o)+(o-n)*(s-r)),c.z=1-c.x-c.y}class dt{constructor(t){t===void 0&&(t={}),this.root=t.root||null,this.aabb=t.aabb?t.aabb.clone():new G,this.data=[],this.children=[]}reset(){this.children.length=this.data.length=0}insert(t,e,s){s===void 0&&(s=0);const n=this.data;if(!this.aabb.contains(t))return!1;const i=this.children,o=this.maxDepth||this.root.maxDepth;if(s<o){let r=!1;i.length||(this.subdivide(),r=!0);for(let c=0;c!==8;c++)if(i[c].insert(t,e,s+1))return!0;r&&(i.length=0)}return n.push(e),!0}subdivide(){const t=this.aabb,e=t.lowerBound,s=t.upperBound,n=this.children;n.push(new dt({aabb:new G({lowerBound:new h(0,0,0)})}),new dt({aabb:new G({lowerBound:new h(1,0,0)})}),new dt({aabb:new G({lowerBound:new h(1,1,0)})}),new dt({aabb:new G({lowerBound:new h(1,1,1)})}),new dt({aabb:new G({lowerBound:new h(0,1,1)})}),new dt({aabb:new G({lowerBound:new h(0,0,1)})}),new dt({aabb:new G({lowerBound:new h(1,0,1)})}),new dt({aabb:new G({lowerBound:new h(0,1,0)})})),s.vsub(e,Mt),Mt.scale(.5,Mt);const i=this.root||this;for(let o=0;o!==8;o++){const r=n[o];r.root=i;const c=r.aabb.lowerBound;c.x*=Mt.x,c.y*=Mt.y,c.z*=Mt.z,c.vadd(e,c),c.vadd(Mt,r.aabb.upperBound)}}aabbQuery(t,e){this.data,this.children;const s=[this];for(;s.length;){const n=s.pop();n.aabb.overlaps(t)&&Array.prototype.push.apply(e,n.data),Array.prototype.push.apply(s,n.children)}return e}rayQuery(t,e,s){return t.getAABB(ce),ce.toLocalFrame(e,ce),this.aabbQuery(ce,s),s}removeEmptyNodes(){for(let t=this.children.length-1;t>=0;t--)this.children[t].removeEmptyNodes(),!this.children[t].children.length&&!this.children[t].data.length&&this.children.splice(t,1)}}class Ho extends dt{constructor(t,e){e===void 0&&(e={}),super({root:null,aabb:t}),this.maxDepth=typeof e.maxDepth<"u"?e.maxDepth:8}}const Mt=new h,ce=new G;class ye extends S{constructor(t,e){super({type:S.types.TRIMESH}),this.vertices=new Float32Array(t),this.indices=new Int16Array(e),this.normals=new Float32Array(e.length),this.aabb=new G,this.edges=null,this.scale=new h(1,1,1),this.tree=new Ho,this.updateEdges(),this.updateNormals(),this.updateAABB(),this.updateBoundingSphereRadius(),this.updateTree()}updateTree(){const t=this.tree;t.reset(),t.aabb.copy(this.aabb);const e=this.scale;t.aabb.lowerBound.x*=1/e.x,t.aabb.lowerBound.y*=1/e.y,t.aabb.lowerBound.z*=1/e.z,t.aabb.upperBound.x*=1/e.x,t.aabb.upperBound.y*=1/e.y,t.aabb.upperBound.z*=1/e.z;const s=new G,n=new h,i=new h,o=new h,r=[n,i,o];for(let c=0;c<this.indices.length/3;c++){const a=c*3;this._getUnscaledVertex(this.indices[a],n),this._getUnscaledVertex(this.indices[a+1],i),this._getUnscaledVertex(this.indices[a+2],o),s.setFromPoints(r),t.insert(s,c)}t.removeEmptyNodes()}getTrianglesInAABB(t,e){ae.copy(t);const s=this.scale,n=s.x,i=s.y,o=s.z,r=ae.lowerBound,c=ae.upperBound;return r.x/=n,r.y/=i,r.z/=o,c.x/=n,c.y/=i,c.z/=o,this.tree.aabbQuery(ae,e)}setScale(t){const e=this.scale.x===this.scale.y&&this.scale.y===this.scale.z,s=t.x===t.y&&t.y===t.z;e&&s||this.updateNormals(),this.scale.copy(t),this.updateAABB(),this.updateBoundingSphereRadius()}updateNormals(){const t=Go,e=this.normals;for(let s=0;s<this.indices.length/3;s++){const n=s*3,i=this.indices[n],o=this.indices[n+1],r=this.indices[n+2];this.getVertex(i,ms),this.getVertex(o,vs),this.getVertex(r,ys),ye.computeNormal(vs,ms,ys,t),e[n]=t.x,e[n+1]=t.y,e[n+2]=t.z}}updateEdges(){const t={},e=(n,i)=>{const o=n<i?`${n}_${i}`:`${i}_${n}`;t[o]=!0};for(let n=0;n<this.indices.length/3;n++){const i=n*3,o=this.indices[i],r=this.indices[i+1],c=this.indices[i+2];e(o,r),e(r,c),e(c,o)}const s=Object.keys(t);this.edges=new Int16Array(s.length*2);for(let n=0;n<s.length;n++){const i=s[n].split("_");this.edges[2*n]=parseInt(i[0],10),this.edges[2*n+1]=parseInt(i[1],10)}}getEdgeVertex(t,e,s){const n=this.edges[t*2+(e?1:0)];this.getVertex(n,s)}getEdgeVector(t,e){const s=Uo,n=Yo;this.getEdgeVertex(t,0,s),this.getEdgeVertex(t,1,n),n.vsub(s,e)}static computeNormal(t,e,s,n){e.vsub(t,fs),s.vsub(e,ps),ps.cross(fs,n),n.isZero()||n.normalize()}getVertex(t,e){const s=this.scale;return this._getUnscaledVertex(t,e),e.x*=s.x,e.y*=s.y,e.z*=s.z,e}_getUnscaledVertex(t,e){const s=t*3,n=this.vertices;return e.set(n[s],n[s+1],n[s+2])}getWorldVertex(t,e,s,n){return this.getVertex(t,n),j.pointToWorldFrame(e,s,n,n),n}getTriangleVertices(t,e,s,n){const i=t*3;this.getVertex(this.indices[i],e),this.getVertex(this.indices[i+1],s),this.getVertex(this.indices[i+2],n)}getNormal(t,e){const s=t*3;return e.set(this.normals[s],this.normals[s+1],this.normals[s+2])}calculateLocalInertia(t,e){this.computeLocalAABB(_t);const s=_t.upperBound.x-_t.lowerBound.x,n=_t.upperBound.y-_t.lowerBound.y,i=_t.upperBound.z-_t.lowerBound.z;return e.set(1/12*t*(2*n*2*n+2*i*2*i),1/12*t*(2*s*2*s+2*i*2*i),1/12*t*(2*n*2*n+2*s*2*s))}computeLocalAABB(t){const e=t.lowerBound,s=t.upperBound,n=this.vertices.length;this.vertices;const i=Xo;this.getVertex(0,i),e.copy(i),s.copy(i);for(let o=0;o!==n;o++)this.getVertex(o,i),i.x<e.x?e.x=i.x:i.x>s.x&&(s.x=i.x),i.y<e.y?e.y=i.y:i.y>s.y&&(s.y=i.y),i.z<e.z?e.z=i.z:i.z>s.z&&(s.z=i.z)}updateAABB(){this.computeLocalAABB(this.aabb)}updateBoundingSphereRadius(){let t=0;const e=this.vertices,s=new h;for(let n=0,i=e.length/3;n!==i;n++){this.getVertex(n,s);const o=s.lengthSquared();o>t&&(t=o)}this.boundingSphereRadius=Math.sqrt(t)}calculateWorldAABB(t,e,s,n){const i=$o,o=Ko;i.position=t,i.quaternion=e,this.aabb.toWorldFrame(i,o),s.copy(o.lowerBound),n.copy(o.upperBound)}volume(){return 4*Math.PI*this.boundingSphereRadius/3}static createTorus(t,e,s,n,i){t===void 0&&(t=1),e===void 0&&(e=.5),s===void 0&&(s=8),n===void 0&&(n=6),i===void 0&&(i=Math.PI*2);const o=[],r=[];for(let c=0;c<=s;c++)for(let a=0;a<=n;a++){const l=a/n*i,u=c/s*Math.PI*2,d=(t+e*Math.cos(u))*Math.cos(l),f=(t+e*Math.cos(u))*Math.sin(l),p=e*Math.sin(u);o.push(d,f,p)}for(let c=1;c<=s;c++)for(let a=1;a<=n;a++){const l=(n+1)*c+a-1,u=(n+1)*(c-1)+a-1,d=(n+1)*(c-1)+a,f=(n+1)*c+a;r.push(l,u,f),r.push(u,d,f)}return new ye(o,r)}}const Go=new h,ae=new G,Uo=new h,Yo=new h,ps=new h,fs=new h,ms=new h,vs=new h,ys=new h,_t=new G,Xo=new h,$o=new j,Ko=new G;class Ue{constructor(){this.equations=[]}solve(t,e){return 0}addEquation(t){t.enabled&&!t.bi.isTrigger&&!t.bj.isTrigger&&this.equations.push(t)}removeEquation(t){const e=this.equations,s=e.indexOf(t);s!==-1&&e.splice(s,1)}removeAllEquations(){this.equations.length=0}}class Qs extends Ue{constructor(){super(),this.iterations=10,this.tolerance=1e-7}solve(t,e){let s=0;const n=this.iterations,i=this.tolerance*this.tolerance,o=this.equations,r=o.length,c=e.bodies,a=c.length,l=t;let u,d,f,p,m,y;if(r!==0)for(let b=0;b!==a;b++)c[b].updateSolveMassProperties();const x=Jo,v=Qo,g=Zo;x.length=r,v.length=r,g.length=r;for(let b=0;b!==r;b++){const A=o[b];g[b]=0,v[b]=A.computeB(l),x[b]=1/A.computeC()}if(r!==0){for(let z=0;z!==a;z++){const M=c[z],P=M.vlambda,L=M.wlambda;P.set(0,0,0),L.set(0,0,0)}for(s=0;s!==n;s++){p=0;for(let z=0;z!==r;z++){const M=o[z];u=v[z],d=x[z],y=g[z],m=M.computeGWlambda(),f=d*(u-m-M.eps*y),y+f<M.minForce?f=M.minForce-y:y+f>M.maxForce&&(f=M.maxForce-y),g[z]+=f,p+=f>0?f:-f,M.addToWlambda(f)}if(p*p<i)break}for(let z=0;z!==a;z++){const M=c[z],P=M.velocity,L=M.angularVelocity;M.vlambda.vmul(M.linearFactor,M.vlambda),P.vadd(M.vlambda,P),M.wlambda.vmul(M.angularFactor,M.wlambda),L.vadd(M.wlambda,L)}let b=o.length;const A=1/l;for(;b--;)o[b].multiplier=g[b]*A}return s}}const Zo=[],Jo=[],Qo=[];class tr extends Ue{constructor(t){for(super(),this.iterations=10,this.tolerance=1e-7,this.subsolver=t,this.nodes=[],this.nodePool=[];this.nodePool.length<128;)this.nodePool.push(this.createNode())}createNode(){return{body:null,children:[],eqs:[],visited:!1}}solve(t,e){const s=er,n=this.nodePool,i=e.bodies,o=this.equations,r=o.length,c=i.length,a=this.subsolver;for(;n.length<c;)n.push(this.createNode());s.length=c;for(let p=0;p<c;p++)s[p]=n[p];for(let p=0;p!==c;p++){const m=s[p];m.body=i[p],m.children.length=0,m.eqs.length=0,m.visited=!1}for(let p=0;p!==r;p++){const m=o[p],y=i.indexOf(m.bi),x=i.indexOf(m.bj),v=s[y],g=s[x];v.children.push(g),v.eqs.push(m),g.children.push(v),g.eqs.push(m)}let l,u=0,d=sr;a.tolerance=this.tolerance,a.iterations=this.iterations;const f=nr;for(;l=tn(s);){d.length=0,f.bodies.length=0,or(l,rr,f.bodies,d);const p=d.length;d=d.sort(cr);for(let m=0;m!==p;m++)a.addEquation(d[m]);a.solve(t,f),a.removeAllEquations(),u++}return u}}const er=[],sr=[],nr={bodies:[]},ir=F.STATIC;function tn(w){const t=w.length;for(let e=0;e!==t;e++){const s=w[e];if(!s.visited&&!(s.body.type&ir))return s}return!1}const le=[];function or(w,t,e,s){for(le.push(w),w.visited=!0,t(w,e,s);le.length;){const n=le.pop();let i;for(;i=tn(n.children);)i.visited=!0,t(i,e,s),le.push(i)}}function rr(w,t,e){t.push(w.body);const s=w.eqs.length;for(let n=0;n!==s;n++){const i=w.eqs[n];e.includes(i)||e.push(i)}}function cr(w,t){return t.id-w.id}class en{constructor(){this.objects=[],this.type=Object}release(){const t=arguments.length;for(let e=0;e!==t;e++)this.objects.push(e<0||arguments.length<=e?void 0:arguments[e]);return this}get(){return this.objects.length===0?this.constructObject():this.objects.pop()}constructObject(){throw new Error("constructObject() not implemented in this Pool subclass yet!")}resize(t){const e=this.objects;for(;e.length>t;)e.pop();for(;e.length<t;)e.push(this.constructObject());return this}}class sn extends en{constructor(){super(...arguments),this.type=h}constructObject(){return new h}}const O={sphereSphere:S.types.SPHERE,spherePlane:S.types.SPHERE|S.types.PLANE,boxBox:S.types.BOX|S.types.BOX,sphereBox:S.types.SPHERE|S.types.BOX,planeBox:S.types.PLANE|S.types.BOX,convexConvex:S.types.CONVEXPOLYHEDRON,sphereConvex:S.types.SPHERE|S.types.CONVEXPOLYHEDRON,planeConvex:S.types.PLANE|S.types.CONVEXPOLYHEDRON,boxConvex:S.types.BOX|S.types.CONVEXPOLYHEDRON,sphereHeightfield:S.types.SPHERE|S.types.HEIGHTFIELD,boxHeightfield:S.types.BOX|S.types.HEIGHTFIELD,convexHeightfield:S.types.CONVEXPOLYHEDRON|S.types.HEIGHTFIELD,sphereParticle:S.types.PARTICLE|S.types.SPHERE,planeParticle:S.types.PLANE|S.types.PARTICLE,boxParticle:S.types.BOX|S.types.PARTICLE,convexParticle:S.types.PARTICLE|S.types.CONVEXPOLYHEDRON,cylinderCylinder:S.types.CYLINDER,sphereCylinder:S.types.SPHERE|S.types.CYLINDER,planeCylinder:S.types.PLANE|S.types.CYLINDER,boxCylinder:S.types.BOX|S.types.CYLINDER,convexCylinder:S.types.CONVEXPOLYHEDRON|S.types.CYLINDER,heightfieldCylinder:S.types.HEIGHTFIELD|S.types.CYLINDER,particleCylinder:S.types.PARTICLE|S.types.CYLINDER,sphereTrimesh:S.types.SPHERE|S.types.TRIMESH,planeTrimesh:S.types.PLANE|S.types.TRIMESH};class nn{get[O.sphereSphere](){return this.sphereSphere}get[O.spherePlane](){return this.spherePlane}get[O.boxBox](){return this.boxBox}get[O.sphereBox](){return this.sphereBox}get[O.planeBox](){return this.planeBox}get[O.convexConvex](){return this.convexConvex}get[O.sphereConvex](){return this.sphereConvex}get[O.planeConvex](){return this.planeConvex}get[O.boxConvex](){return this.boxConvex}get[O.sphereHeightfield](){return this.sphereHeightfield}get[O.boxHeightfield](){return this.boxHeightfield}get[O.convexHeightfield](){return this.convexHeightfield}get[O.sphereParticle](){return this.sphereParticle}get[O.planeParticle](){return this.planeParticle}get[O.boxParticle](){return this.boxParticle}get[O.convexParticle](){return this.convexParticle}get[O.cylinderCylinder](){return this.convexConvex}get[O.sphereCylinder](){return this.sphereConvex}get[O.planeCylinder](){return this.planeConvex}get[O.boxCylinder](){return this.boxConvex}get[O.convexCylinder](){return this.convexConvex}get[O.heightfieldCylinder](){return this.heightfieldCylinder}get[O.particleCylinder](){return this.particleCylinder}get[O.sphereTrimesh](){return this.sphereTrimesh}get[O.planeTrimesh](){return this.planeTrimesh}constructor(t){this.contactPointPool=[],this.frictionEquationPool=[],this.result=[],this.frictionResult=[],this.v3pool=new sn,this.world=t,this.currentContactMaterial=t.defaultContactMaterial,this.enableFrictionReduction=!1}createContactEquation(t,e,s,n,i,o){let r;this.contactPointPool.length?(r=this.contactPointPool.pop(),r.bi=t,r.bj=e):r=new jt(t,e),r.enabled=t.collisionResponse&&e.collisionResponse&&s.collisionResponse&&n.collisionResponse;const c=this.currentContactMaterial;r.restitution=c.restitution,r.setSpookParams(c.contactEquationStiffness,c.contactEquationRelaxation,this.world.dt);const a=s.material||t.material,l=n.material||e.material;return a&&l&&a.restitution>=0&&l.restitution>=0&&(r.restitution=a.restitution*l.restitution),r.si=i||s,r.sj=o||n,r}createFrictionEquationsFromContact(t,e){const s=t.bi,n=t.bj,i=t.si,o=t.sj,r=this.world,c=this.currentContactMaterial;let a=c.friction;const l=i.material||s.material,u=o.material||n.material;if(l&&u&&l.friction>=0&&u.friction>=0&&(a=l.friction*u.friction),a>0){const d=a*(r.frictionGravity||r.gravity).length();let f=s.invMass+n.invMass;f>0&&(f=1/f);const p=this.frictionEquationPool,m=p.length?p.pop():new Re(s,n,d*f),y=p.length?p.pop():new Re(s,n,d*f);return m.bi=y.bi=s,m.bj=y.bj=n,m.minForce=y.minForce=-d*f,m.maxForce=y.maxForce=d*f,m.ri.copy(t.ri),m.rj.copy(t.rj),y.ri.copy(t.ri),y.rj.copy(t.rj),t.ni.tangents(m.t,y.t),m.setSpookParams(c.frictionEquationStiffness,c.frictionEquationRelaxation,r.dt),y.setSpookParams(c.frictionEquationStiffness,c.frictionEquationRelaxation,r.dt),m.enabled=y.enabled=t.enabled,e.push(m,y),!0}return!1}createFrictionFromAverage(t){let e=this.result[this.result.length-1];if(!this.createFrictionEquationsFromContact(e,this.frictionResult)||t===1)return;const s=this.frictionResult[this.frictionResult.length-2],n=this.frictionResult[this.frictionResult.length-1];Ft.setZero(),Lt.setZero(),qt.setZero();const i=e.bi;e.bj;for(let r=0;r!==t;r++)e=this.result[this.result.length-1-r],e.bi!==i?(Ft.vadd(e.ni,Ft),Lt.vadd(e.ri,Lt),qt.vadd(e.rj,qt)):(Ft.vsub(e.ni,Ft),Lt.vadd(e.rj,Lt),qt.vadd(e.ri,qt));const o=1/t;Lt.scale(o,s.ri),qt.scale(o,s.rj),n.ri.copy(s.ri),n.rj.copy(s.rj),Ft.normalize(),Ft.tangents(s.t,n.t)}getContacts(t,e,s,n,i,o,r){this.contactPointPool=i,this.frictionEquationPool=r,this.result=n,this.frictionResult=o;const c=hr,a=dr,l=ar,u=lr;for(let d=0,f=t.length;d!==f;d++){const p=t[d],m=e[d];let y=null;p.material&&m.material&&(y=s.getContactMaterial(p.material,m.material)||null);const x=p.type&F.KINEMATIC&&m.type&F.STATIC||p.type&F.STATIC&&m.type&F.KINEMATIC||p.type&F.KINEMATIC&&m.type&F.KINEMATIC;for(let v=0;v<p.shapes.length;v++){p.quaternion.mult(p.shapeOrientations[v],c),p.quaternion.vmult(p.shapeOffsets[v],l),l.vadd(p.position,l);const g=p.shapes[v];for(let b=0;b<m.shapes.length;b++){m.quaternion.mult(m.shapeOrientations[b],a),m.quaternion.vmult(m.shapeOffsets[b],u),u.vadd(m.position,u);const A=m.shapes[b];if(!(g.collisionFilterMask&A.collisionFilterGroup&&A.collisionFilterMask&g.collisionFilterGroup)||l.distanceTo(u)>g.boundingSphereRadius+A.boundingSphereRadius)continue;let z=null;g.material&&A.material&&(z=s.getContactMaterial(g.material,A.material)||null),this.currentContactMaterial=z||y||s.defaultContactMaterial;const M=g.type|A.type,P=this[M];if(P){let L=!1;g.type<A.type?L=P.call(this,g,A,l,u,c,a,p,m,g,A,x):L=P.call(this,A,g,u,l,a,c,m,p,g,A,x),L&&x&&(s.shapeOverlapKeeper.set(g.id,A.id),s.bodyOverlapKeeper.set(p.id,m.id))}}}}}sphereSphere(t,e,s,n,i,o,r,c,a,l,u){if(u)return s.distanceSquared(n)<(t.radius+e.radius)**2;const d=this.createContactEquation(r,c,t,e,a,l);n.vsub(s,d.ni),d.ni.normalize(),d.ri.copy(d.ni),d.rj.copy(d.ni),d.ri.scale(t.radius,d.ri),d.rj.scale(-e.radius,d.rj),d.ri.vadd(s,d.ri),d.ri.vsub(r.position,d.ri),d.rj.vadd(n,d.rj),d.rj.vsub(c.position,d.rj),this.result.push(d),this.createFrictionEquationsFromContact(d,this.frictionResult)}spherePlane(t,e,s,n,i,o,r,c,a,l,u){const d=this.createContactEquation(r,c,t,e,a,l);if(d.ni.set(0,0,1),o.vmult(d.ni,d.ni),d.ni.negate(d.ni),d.ni.normalize(),d.ni.scale(t.radius,d.ri),s.vsub(n,he),d.ni.scale(d.ni.dot(he),ws),he.vsub(ws,d.rj),-he.dot(d.ni)<=t.radius){if(u)return!0;const f=d.ri,p=d.rj;f.vadd(s,f),f.vsub(r.position,f),p.vadd(n,p),p.vsub(c.position,p),this.result.push(d),this.createFrictionEquationsFromContact(d,this.frictionResult)}}boxBox(t,e,s,n,i,o,r,c,a,l,u){return t.convexPolyhedronRepresentation.material=t.material,e.convexPolyhedronRepresentation.material=e.material,t.convexPolyhedronRepresentation.collisionResponse=t.collisionResponse,e.convexPolyhedronRepresentation.collisionResponse=e.collisionResponse,this.convexConvex(t.convexPolyhedronRepresentation,e.convexPolyhedronRepresentation,s,n,i,o,r,c,t,e,u)}sphereBox(t,e,s,n,i,o,r,c,a,l,u){const d=this.v3pool,f=qr;s.vsub(n,de),e.getSideNormals(f,o);const p=t.radius;let m=!1;const y=Wr,x=Vr,v=jr;let g=null,b=0,A=0,z=0,M=null;for(let C=0,D=f.length;C!==D&&m===!1;C++){const q=Nr;q.copy(f[C]);const N=q.length();q.normalize();const k=de.dot(q);if(k<N+p&&k>0){const H=Rr,T=Lr;H.copy(f[(C+1)%3]),T.copy(f[(C+2)%3]);const J=H.length(),Q=T.length();H.normalize(),T.normalize();const tt=de.dot(H),X=de.dot(T);if(tt<J&&tt>-J&&X<Q&&X>-Q){const Z=Math.abs(k-N-p);if((M===null||Z<M)&&(M=Z,A=tt,z=X,g=N,y.copy(q),x.copy(H),v.copy(T),b++,u))return!0}}}if(b){m=!0;const C=this.createContactEquation(r,c,t,e,a,l);y.scale(-p,C.ri),C.ni.copy(y),C.ni.negate(C.ni),y.scale(g,y),x.scale(A,x),y.vadd(x,y),v.scale(z,v),y.vadd(v,C.rj),C.ri.vadd(s,C.ri),C.ri.vsub(r.position,C.ri),C.rj.vadd(n,C.rj),C.rj.vsub(c.position,C.rj),this.result.push(C),this.createFrictionEquationsFromContact(C,this.frictionResult)}let P=d.get();const L=kr;for(let C=0;C!==2&&!m;C++)for(let D=0;D!==2&&!m;D++)for(let q=0;q!==2&&!m;q++)if(P.set(0,0,0),C?P.vadd(f[0],P):P.vsub(f[0],P),D?P.vadd(f[1],P):P.vsub(f[1],P),q?P.vadd(f[2],P):P.vsub(f[2],P),n.vadd(P,L),L.vsub(s,L),L.lengthSquared()<p*p){if(u)return!0;m=!0;const N=this.createContactEquation(r,c,t,e,a,l);N.ri.copy(L),N.ri.normalize(),N.ni.copy(N.ri),N.ri.scale(p,N.ri),N.rj.copy(P),N.ri.vadd(s,N.ri),N.ri.vsub(r.position,N.ri),N.rj.vadd(n,N.rj),N.rj.vsub(c.position,N.rj),this.result.push(N),this.createFrictionEquationsFromContact(N,this.frictionResult)}d.release(P),P=null;const I=d.get(),R=d.get(),W=d.get(),E=d.get(),_=d.get(),B=f.length;for(let C=0;C!==B&&!m;C++)for(let D=0;D!==B&&!m;D++)if(C%3!==D%3){f[D].cross(f[C],I),I.normalize(),f[C].vadd(f[D],R),W.copy(s),W.vsub(R,W),W.vsub(n,W);const q=W.dot(I);I.scale(q,E);let N=0;for(;N===C%3||N===D%3;)N++;_.copy(s),_.vsub(E,_),_.vsub(R,_),_.vsub(n,_);const k=Math.abs(q),H=_.length();if(k<f[N].length()&&H<p){if(u)return!0;m=!0;const T=this.createContactEquation(r,c,t,e,a,l);R.vadd(E,T.rj),T.rj.copy(T.rj),_.negate(T.ni),T.ni.normalize(),T.ri.copy(T.rj),T.ri.vadd(n,T.ri),T.ri.vsub(s,T.ri),T.ri.normalize(),T.ri.scale(p,T.ri),T.ri.vadd(s,T.ri),T.ri.vsub(r.position,T.ri),T.rj.vadd(n,T.rj),T.rj.vsub(c.position,T.rj),this.result.push(T),this.createFrictionEquationsFromContact(T,this.frictionResult)}}d.release(I,R,W,E,_)}planeBox(t,e,s,n,i,o,r,c,a,l,u){return e.convexPolyhedronRepresentation.material=e.material,e.convexPolyhedronRepresentation.collisionResponse=e.collisionResponse,e.convexPolyhedronRepresentation.id=e.id,this.planeConvex(t,e.convexPolyhedronRepresentation,s,n,i,o,r,c,t,e,u)}convexConvex(t,e,s,n,i,o,r,c,a,l,u,d,f){const p=sc;if(!(s.distanceTo(n)>t.boundingSphereRadius+e.boundingSphereRadius)&&t.findSeparatingAxis(e,s,i,n,o,p,d,f)){const m=[],y=nc;t.clipAgainstHull(s,i,e,n,o,p,-100,100,m);let x=0;for(let v=0;v!==m.length;v++){if(u)return!0;const g=this.createContactEquation(r,c,t,e,a,l),b=g.ri,A=g.rj;p.negate(g.ni),m[v].normal.negate(y),y.scale(m[v].depth,y),m[v].point.vadd(y,b),A.copy(m[v].point),b.vsub(s,b),A.vsub(n,A),b.vadd(s,b),b.vsub(r.position,b),A.vadd(n,A),A.vsub(c.position,A),this.result.push(g),x++,this.enableFrictionReduction||this.createFrictionEquationsFromContact(g,this.frictionResult)}this.enableFrictionReduction&&x&&this.createFrictionFromAverage(x)}}sphereConvex(t,e,s,n,i,o,r,c,a,l,u){const d=this.v3pool;s.vsub(n,Dr);const f=e.faceNormals,p=e.faces,m=e.vertices,y=t.radius;let x=!1;for(let v=0;v!==m.length;v++){const g=m[v],b=Ur;o.vmult(g,b),n.vadd(b,b);const A=Gr;if(b.vsub(s,A),A.lengthSquared()<y*y){if(u)return!0;x=!0;const z=this.createContactEquation(r,c,t,e,a,l);z.ri.copy(A),z.ri.normalize(),z.ni.copy(z.ri),z.ri.scale(y,z.ri),b.vsub(n,z.rj),z.ri.vadd(s,z.ri),z.ri.vsub(r.position,z.ri),z.rj.vadd(n,z.rj),z.rj.vsub(c.position,z.rj),this.result.push(z),this.createFrictionEquationsFromContact(z,this.frictionResult);return}}for(let v=0,g=p.length;v!==g&&x===!1;v++){const b=f[v],A=p[v],z=Yr;o.vmult(b,z);const M=Xr;o.vmult(m[A[0]],M),M.vadd(n,M);const P=$r;z.scale(-y,P),s.vadd(P,P);const L=Kr;P.vsub(M,L);const I=L.dot(z),R=Zr;if(s.vsub(M,R),I<0&&R.dot(z)>0){const W=[];for(let E=0,_=A.length;E!==_;E++){const B=d.get();o.vmult(m[A[E]],B),n.vadd(B,B),W.push(B)}if(Ir(W,z,s)){if(u)return!0;x=!0;const E=this.createContactEquation(r,c,t,e,a,l);z.scale(-y,E.ri),z.negate(E.ni);const _=d.get();z.scale(-I,_);const B=d.get();z.scale(-y,B),s.vsub(n,E.rj),E.rj.vadd(B,E.rj),E.rj.vadd(_,E.rj),E.rj.vadd(n,E.rj),E.rj.vsub(c.position,E.rj),E.ri.vadd(s,E.ri),E.ri.vsub(r.position,E.ri),d.release(_),d.release(B),this.result.push(E),this.createFrictionEquationsFromContact(E,this.frictionResult);for(let C=0,D=W.length;C!==D;C++)d.release(W[C]);return}else for(let E=0;E!==A.length;E++){const _=d.get(),B=d.get();o.vmult(m[A[(E+1)%A.length]],_),o.vmult(m[A[(E+2)%A.length]],B),n.vadd(_,_),n.vadd(B,B);const C=Or;B.vsub(_,C);const D=Hr;C.unit(D);const q=d.get(),N=d.get();s.vsub(_,N);const k=N.dot(D);D.scale(k,q),q.vadd(_,q);const H=d.get();if(q.vsub(s,H),k>0&&k*k<C.lengthSquared()&&H.lengthSquared()<y*y){if(u)return!0;const T=this.createContactEquation(r,c,t,e,a,l);q.vsub(n,T.rj),q.vsub(s,T.ni),T.ni.normalize(),T.ni.scale(y,T.ri),T.rj.vadd(n,T.rj),T.rj.vsub(c.position,T.rj),T.ri.vadd(s,T.ri),T.ri.vsub(r.position,T.ri),this.result.push(T),this.createFrictionEquationsFromContact(T,this.frictionResult);for(let J=0,Q=W.length;J!==Q;J++)d.release(W[J]);d.release(_),d.release(B),d.release(q),d.release(H),d.release(N);return}d.release(_),d.release(B),d.release(q),d.release(H),d.release(N)}for(let E=0,_=W.length;E!==_;E++)d.release(W[E])}}}planeConvex(t,e,s,n,i,o,r,c,a,l,u){const d=Jr,f=Qr;f.set(0,0,1),i.vmult(f,f);let p=0;const m=tc;for(let y=0;y!==e.vertices.length;y++)if(d.copy(e.vertices[y]),o.vmult(d,d),n.vadd(d,d),d.vsub(s,m),f.dot(m)<=0){if(u)return!0;const v=this.createContactEquation(r,c,t,e,a,l),g=ec;f.scale(f.dot(m),g),d.vsub(g,g),g.vsub(s,v.ri),v.ni.copy(f),d.vsub(n,v.rj),v.ri.vadd(s,v.ri),v.ri.vsub(r.position,v.ri),v.rj.vadd(n,v.rj),v.rj.vsub(c.position,v.rj),this.result.push(v),p++,this.enableFrictionReduction||this.createFrictionEquationsFromContact(v,this.frictionResult)}this.enableFrictionReduction&&p&&this.createFrictionFromAverage(p)}boxConvex(t,e,s,n,i,o,r,c,a,l,u){return t.convexPolyhedronRepresentation.material=t.material,t.convexPolyhedronRepresentation.collisionResponse=t.collisionResponse,this.convexConvex(t.convexPolyhedronRepresentation,e,s,n,i,o,r,c,t,e,u)}sphereHeightfield(t,e,s,n,i,o,r,c,a,l,u){const d=e.data,f=t.radius,p=e.elementSize,m=mc,y=fc;j.pointToLocalFrame(n,o,s,y);let x=Math.floor((y.x-f)/p)-1,v=Math.ceil((y.x+f)/p)+1,g=Math.floor((y.y-f)/p)-1,b=Math.ceil((y.y+f)/p)+1;if(v<0||b<0||x>d.length||g>d[0].length)return;x<0&&(x=0),v<0&&(v=0),g<0&&(g=0),b<0&&(b=0),x>=d.length&&(x=d.length-1),v>=d.length&&(v=d.length-1),b>=d[0].length&&(b=d[0].length-1),g>=d[0].length&&(g=d[0].length-1);const A=[];e.getRectMinMax(x,g,v,b,A);const z=A[0],M=A[1];if(y.z-f>M||y.z+f<z)return;const P=this.result;for(let L=x;L<v;L++)for(let I=g;I<b;I++){const R=P.length;let W=!1;if(e.getConvexTrianglePillar(L,I,!1),j.pointToWorldFrame(n,o,e.pillarOffset,m),s.distanceTo(m)<e.pillarConvex.boundingSphereRadius+t.boundingSphereRadius&&(W=this.sphereConvex(t,e.pillarConvex,s,m,i,o,r,c,t,e,u)),u&&W||(e.getConvexTrianglePillar(L,I,!0),j.pointToWorldFrame(n,o,e.pillarOffset,m),s.distanceTo(m)<e.pillarConvex.boundingSphereRadius+t.boundingSphereRadius&&(W=this.sphereConvex(t,e.pillarConvex,s,m,i,o,r,c,t,e,u)),u&&W))return!0;if(P.length-R>2)return}}boxHeightfield(t,e,s,n,i,o,r,c,a,l,u){return t.convexPolyhedronRepresentation.material=t.material,t.convexPolyhedronRepresentation.collisionResponse=t.collisionResponse,this.convexHeightfield(t.convexPolyhedronRepresentation,e,s,n,i,o,r,c,t,e,u)}convexHeightfield(t,e,s,n,i,o,r,c,a,l,u){const d=e.data,f=e.elementSize,p=t.boundingSphereRadius,m=uc,y=pc,x=dc;j.pointToLocalFrame(n,o,s,x);let v=Math.floor((x.x-p)/f)-1,g=Math.ceil((x.x+p)/f)+1,b=Math.floor((x.y-p)/f)-1,A=Math.ceil((x.y+p)/f)+1;if(g<0||A<0||v>d.length||b>d[0].length)return;v<0&&(v=0),g<0&&(g=0),b<0&&(b=0),A<0&&(A=0),v>=d.length&&(v=d.length-1),g>=d.length&&(g=d.length-1),A>=d[0].length&&(A=d[0].length-1),b>=d[0].length&&(b=d[0].length-1);const z=[];e.getRectMinMax(v,b,g,A,z);const M=z[0],P=z[1];if(!(x.z-p>P||x.z+p<M))for(let L=v;L<g;L++)for(let I=b;I<A;I++){let R=!1;if(e.getConvexTrianglePillar(L,I,!1),j.pointToWorldFrame(n,o,e.pillarOffset,m),s.distanceTo(m)<e.pillarConvex.boundingSphereRadius+t.boundingSphereRadius&&(R=this.convexConvex(t,e.pillarConvex,s,m,i,o,r,c,null,null,u,y,null)),u&&R||(e.getConvexTrianglePillar(L,I,!0),j.pointToWorldFrame(n,o,e.pillarOffset,m),s.distanceTo(m)<e.pillarConvex.boundingSphereRadius+t.boundingSphereRadius&&(R=this.convexConvex(t,e.pillarConvex,s,m,i,o,r,c,null,null,u,y,null)),u&&R))return!0}}sphereParticle(t,e,s,n,i,o,r,c,a,l,u){const d=cc;if(d.set(0,0,1),n.vsub(s,d),d.lengthSquared()<=t.radius*t.radius){if(u)return!0;const p=this.createContactEquation(c,r,e,t,a,l);d.normalize(),p.rj.copy(d),p.rj.scale(t.radius,p.rj),p.ni.copy(d),p.ni.negate(p.ni),p.ri.set(0,0,0),this.result.push(p),this.createFrictionEquationsFromContact(p,this.frictionResult)}}planeParticle(t,e,s,n,i,o,r,c,a,l,u){const d=ic;d.set(0,0,1),r.quaternion.vmult(d,d);const f=oc;if(n.vsub(r.position,f),d.dot(f)<=0){if(u)return!0;const m=this.createContactEquation(c,r,e,t,a,l);m.ni.copy(d),m.ni.negate(m.ni),m.ri.set(0,0,0);const y=rc;d.scale(d.dot(n),y),n.vsub(y,y),m.rj.copy(y),this.result.push(m),this.createFrictionEquationsFromContact(m,this.frictionResult)}}boxParticle(t,e,s,n,i,o,r,c,a,l,u){return t.convexPolyhedronRepresentation.material=t.material,t.convexPolyhedronRepresentation.collisionResponse=t.collisionResponse,this.convexParticle(t.convexPolyhedronRepresentation,e,s,n,i,o,r,c,t,e,u)}convexParticle(t,e,s,n,i,o,r,c,a,l,u){let d=-1;const f=lc,p=hc;let m=null;const y=ac;if(y.copy(n),y.vsub(s,y),i.conjugate(xs),xs.vmult(y,y),t.pointIsInside(y)){t.worldVerticesNeedsUpdate&&t.computeWorldVertices(s,i),t.worldFaceNormalsNeedsUpdate&&t.computeWorldFaceNormals(i);for(let x=0,v=t.faces.length;x!==v;x++){const g=[t.worldVertices[t.faces[x][0]]],b=t.worldFaceNormals[x];n.vsub(g[0],gs);const A=-b.dot(gs);if(m===null||Math.abs(A)<Math.abs(m)){if(u)return!0;m=A,d=x,f.copy(b)}}if(d!==-1){const x=this.createContactEquation(c,r,e,t,a,l);f.scale(m,p),p.vadd(n,p),p.vsub(s,p),x.rj.copy(p),f.negate(x.ni),x.ri.set(0,0,0);const v=x.ri,g=x.rj;v.vadd(n,v),v.vsub(c.position,v),g.vadd(s,g),g.vsub(r.position,g),this.result.push(x),this.createFrictionEquationsFromContact(x,this.frictionResult)}else console.warn("Point found inside convex, but did not find penetrating face!")}}heightfieldCylinder(t,e,s,n,i,o,r,c,a,l,u){return this.convexHeightfield(e,t,n,s,o,i,c,r,a,l,u)}particleCylinder(t,e,s,n,i,o,r,c,a,l,u){return this.convexParticle(e,t,n,s,o,i,c,r,a,l,u)}sphereTrimesh(t,e,s,n,i,o,r,c,a,l,u){const d=xr,f=gr,p=br,m=Ar,y=Er,x=Cr,v=Mr,g=wr,b=vr,A=_r;j.pointToLocalFrame(n,o,s,y);const z=t.radius;v.lowerBound.set(y.x-z,y.y-z,y.z-z),v.upperBound.set(y.x+z,y.y+z,y.z+z),e.getTrianglesInAABB(v,A);const M=yr,P=t.radius*t.radius;for(let E=0;E<A.length;E++)for(let _=0;_<3;_++)if(e.getVertex(e.indices[A[E]*3+_],M),M.vsub(y,b),b.lengthSquared()<=P){if(g.copy(M),j.pointToWorldFrame(n,o,g,M),M.vsub(s,b),u)return!0;let B=this.createContactEquation(r,c,t,e,a,l);B.ni.copy(b),B.ni.normalize(),B.ri.copy(B.ni),B.ri.scale(t.radius,B.ri),B.ri.vadd(s,B.ri),B.ri.vsub(r.position,B.ri),B.rj.copy(M),B.rj.vsub(c.position,B.rj),this.result.push(B),this.createFrictionEquationsFromContact(B,this.frictionResult)}for(let E=0;E<A.length;E++)for(let _=0;_<3;_++){e.getVertex(e.indices[A[E]*3+_],d),e.getVertex(e.indices[A[E]*3+(_+1)%3],f),f.vsub(d,p),y.vsub(f,x);const B=x.dot(p);y.vsub(d,x);let C=x.dot(p);if(C>0&&B<0&&(y.vsub(d,x),m.copy(p),m.normalize(),C=x.dot(m),m.scale(C,x),x.vadd(d,x),x.distanceTo(y)<t.radius)){if(u)return!0;const q=this.createContactEquation(r,c,t,e,a,l);x.vsub(y,q.ni),q.ni.normalize(),q.ni.scale(t.radius,q.ri),q.ri.vadd(s,q.ri),q.ri.vsub(r.position,q.ri),j.pointToWorldFrame(n,o,x,x),x.vsub(c.position,q.rj),j.vectorToWorldFrame(o,q.ni,q.ni),j.vectorToWorldFrame(o,q.ri,q.ri),this.result.push(q),this.createFrictionEquationsFromContact(q,this.frictionResult)}}const L=zr,I=Br,R=Sr,W=mr;for(let E=0,_=A.length;E!==_;E++){e.getTriangleVertices(A[E],L,I,R),e.getNormal(A[E],W),y.vsub(L,x);let B=x.dot(W);if(W.scale(B,x),y.vsub(x,x),B=x.distanceTo(y),Y.pointInTriangle(x,L,I,R)&&B<t.radius){if(u)return!0;let C=this.createContactEquation(r,c,t,e,a,l);x.vsub(y,C.ni),C.ni.normalize(),C.ni.scale(t.radius,C.ri),C.ri.vadd(s,C.ri),C.ri.vsub(r.position,C.ri),j.pointToWorldFrame(n,o,x,x),x.vsub(c.position,C.rj),j.vectorToWorldFrame(o,C.ni,C.ni),j.vectorToWorldFrame(o,C.ri,C.ri),this.result.push(C),this.createFrictionEquationsFromContact(C,this.frictionResult)}}A.length=0}planeTrimesh(t,e,s,n,i,o,r,c,a,l,u){const d=new h,f=ur;f.set(0,0,1),i.vmult(f,f);for(let p=0;p<e.vertices.length/3;p++){e.getVertex(p,d);const m=new h;m.copy(d),j.pointToWorldFrame(n,o,m,d);const y=pr;if(d.vsub(s,y),f.dot(y)<=0){if(u)return!0;const v=this.createContactEquation(r,c,t,e,a,l);v.ni.copy(f);const g=fr;f.scale(y.dot(f),g),d.vsub(g,g),v.ri.copy(g),v.ri.vsub(r.position,v.ri),v.rj.copy(d),v.rj.vsub(c.position,v.rj),this.result.push(v),this.createFrictionEquationsFromContact(v,this.frictionResult)}}}}const Ft=new h,Lt=new h,qt=new h,ar=new h,lr=new h,hr=new U,dr=new U,ur=new h,pr=new h,fr=new h,mr=new h,vr=new h;new h;const yr=new h,wr=new h,xr=new h,gr=new h,br=new h,Ar=new h,Er=new h,Cr=new h,zr=new h,Br=new h,Sr=new h,Mr=new G,_r=[],he=new h,ws=new h,Fr=new h,Tr=new h,Pr=new h;function Ir(w,t,e){let s=null;const n=w.length;for(let i=0;i!==n;i++){const o=w[i],r=Fr;w[(i+1)%n].vsub(o,r);const c=Tr;r.cross(t,c);const a=Pr;e.vsub(o,a);const l=c.dot(a);if(s===null||l>0&&s===!0||l<=0&&s===!1){s===null&&(s=l>0);continue}else return!1}return!0}const de=new h,Nr=new h,Rr=new h,Lr=new h,qr=[new h,new h,new h,new h,new h,new h],kr=new h,Wr=new h,Vr=new h,jr=new h,Dr=new h,Or=new h,Hr=new h,Gr=new h,Ur=new h,Yr=new h,Xr=new h,$r=new h,Kr=new h,Zr=new h;new h;new h;const Jr=new h,Qr=new h,tc=new h,ec=new h,sc=new h,nc=new h,ic=new h,oc=new h,rc=new h,cc=new h,xs=new U,ac=new h;new h;const lc=new h,gs=new h,hc=new h,dc=new h,uc=new h,pc=[0],fc=new h,mc=new h;class bs{constructor(){this.current=[],this.previous=[]}getKey(t,e){if(e<t){const s=e;e=t,t=s}return t<<16|e}set(t,e){const s=this.getKey(t,e),n=this.current;let i=0;for(;s>n[i];)i++;if(s!==n[i]){for(let o=n.length-1;o>=i;o--)n[o+1]=n[o];n[i]=s}}tick(){const t=this.current;this.current=this.previous,this.previous=t,this.current.length=0}getDiff(t,e){const s=this.current,n=this.previous,i=s.length,o=n.length;let r=0;for(let c=0;c<i;c++){let a=!1;const l=s[c];for(;l>n[r];)r++;a=l===n[r],a||As(t,l)}r=0;for(let c=0;c<o;c++){let a=!1;const l=n[c];for(;l>s[r];)r++;a=s[r]===l,a||As(e,l)}}}function As(w,t){w.push((t&4294901760)>>16,t&65535)}const _e=(w,t)=>w<t?`${w}-${t}`:`${t}-${w}`;class vc{constructor(){this.data={keys:[]}}get(t,e){const s=_e(t,e);return this.data[s]}set(t,e,s){const n=_e(t,e);this.get(t,e)||this.data.keys.push(n),this.data[n]=s}delete(t,e){const s=_e(t,e),n=this.data.keys.indexOf(s);n!==-1&&this.data.keys.splice(n,1),delete this.data[s]}reset(){const t=this.data,e=t.keys;for(;e.length>0;){const s=e.pop();delete t[s]}}}class on extends He{constructor(t){t===void 0&&(t={}),super(),this.dt=-1,this.allowSleep=!!t.allowSleep,this.contacts=[],this.frictionEquations=[],this.quatNormalizeSkip=t.quatNormalizeSkip!==void 0?t.quatNormalizeSkip:0,this.quatNormalizeFast=t.quatNormalizeFast!==void 0?t.quatNormalizeFast:!1,this.time=0,this.stepnumber=0,this.default_dt=1/60,this.nextId=0,this.gravity=new h,t.gravity&&this.gravity.copy(t.gravity),t.frictionGravity&&(this.frictionGravity=new h,this.frictionGravity.copy(t.frictionGravity)),this.broadphase=t.broadphase!==void 0?t.broadphase:new js,this.bodies=[],this.hasActiveBodies=!1,this.solver=t.solver!==void 0?t.solver:new Qs,this.constraints=[],this.narrowphase=new nn(this),this.collisionMatrix=new Ie,this.collisionMatrixPrevious=new Ie,this.bodyOverlapKeeper=new bs,this.shapeOverlapKeeper=new bs,this.contactmaterials=[],this.contactMaterialTable=new vc,this.defaultMaterial=new se("default"),this.defaultContactMaterial=new ee(this.defaultMaterial,this.defaultMaterial,{friction:.3,restitution:0}),this.doProfiling=!1,this.profile={solve:0,makeContactConstraints:0,broadphase:0,integrate:0,narrowphase:0},this.accumulator=0,this.subsystems=[],this.addBodyEvent={type:"addBody",body:null},this.removeBodyEvent={type:"removeBody",body:null},this.idToBodyMap={},this.broadphase.setWorld(this)}getContactMaterial(t,e){return this.contactMaterialTable.get(t.id,e.id)}collisionMatrixTick(){const t=this.collisionMatrixPrevious;this.collisionMatrixPrevious=this.collisionMatrix,this.collisionMatrix=t,this.collisionMatrix.reset(),this.bodyOverlapKeeper.tick(),this.shapeOverlapKeeper.tick()}addConstraint(t){this.constraints.push(t)}removeConstraint(t){const e=this.constraints.indexOf(t);e!==-1&&this.constraints.splice(e,1)}rayTest(t,e,s){s instanceof Dt?this.raycastClosest(t,e,{skipBackfaces:!0},s):this.raycastAll(t,e,{skipBackfaces:!0},s)}raycastAll(t,e,s,n){return s===void 0&&(s={}),s.mode=Y.ALL,s.from=t,s.to=e,s.callback=n,Fe.intersectWorld(this,s)}raycastAny(t,e,s,n){return s===void 0&&(s={}),s.mode=Y.ANY,s.from=t,s.to=e,s.result=n,Fe.intersectWorld(this,s)}raycastClosest(t,e,s,n){return s===void 0&&(s={}),s.mode=Y.CLOSEST,s.from=t,s.to=e,s.result=n,Fe.intersectWorld(this,s)}addBody(t){this.bodies.includes(t)||(t.index=this.bodies.length,this.bodies.push(t),t.world=this,t.initPosition.copy(t.position),t.initVelocity.copy(t.velocity),t.timeLastSleepy=this.time,t instanceof F&&(t.initAngularVelocity.copy(t.angularVelocity),t.initQuaternion.copy(t.quaternion)),this.collisionMatrix.setNumObjects(this.bodies.length),this.addBodyEvent.body=t,this.idToBodyMap[t.id]=t,this.dispatchEvent(this.addBodyEvent))}removeBody(t){t.world=null;const e=this.bodies.length-1,s=this.bodies,n=s.indexOf(t);if(n!==-1){s.splice(n,1);for(let i=0;i!==s.length;i++)s[i].index=i;this.collisionMatrix.setNumObjects(e),this.removeBodyEvent.body=t,delete this.idToBodyMap[t.id],this.dispatchEvent(this.removeBodyEvent)}}getBodyById(t){return this.idToBodyMap[t]}getShapeById(t){const e=this.bodies;for(let s=0;s<e.length;s++){const n=e[s].shapes;for(let i=0;i<n.length;i++){const o=n[i];if(o.id===t)return o}}return null}addContactMaterial(t){this.contactmaterials.push(t),this.contactMaterialTable.set(t.materials[0].id,t.materials[1].id,t)}removeContactMaterial(t){const e=this.contactmaterials.indexOf(t);e!==-1&&(this.contactmaterials.splice(e,1),this.contactMaterialTable.delete(t.materials[0].id,t.materials[1].id))}fixedStep(t,e){t===void 0&&(t=1/60),e===void 0&&(e=10);const s=K.now()/1e3;if(!this.lastCallTime)this.step(t,void 0,e);else{const n=s-this.lastCallTime;this.step(t,n,e)}this.lastCallTime=s}step(t,e,s){if(s===void 0&&(s=10),e===void 0)this.internalStep(t),this.time+=t;else{this.accumulator+=e;const n=K.now();let i=0;for(;this.accumulator>=t&&i<s&&(this.internalStep(t),this.accumulator-=t,i++,!(K.now()-n>t*1e3)););this.accumulator=this.accumulator%t;const o=this.accumulator/t;for(let r=0;r!==this.bodies.length;r++){const c=this.bodies[r];c.previousPosition.lerp(c.position,o,c.interpolatedPosition),c.previousQuaternion.slerp(c.quaternion,o,c.interpolatedQuaternion),c.previousQuaternion.normalize()}this.time+=e}}internalStep(t){this.dt=t;const e=this.contacts,s=bc,n=Ac,i=this.bodies.length,o=this.bodies,r=this.solver,c=this.gravity,a=this.doProfiling,l=this.profile,u=F.DYNAMIC;let d=-1/0;const f=this.constraints,p=gc;c.length();const m=c.x,y=c.y,x=c.z;let v=0;for(a&&(d=K.now()),v=0;v!==i;v++){const E=o[v];if(E.type===u){const _=E.force,B=E.mass;_.x+=B*m,_.y+=B*y,_.z+=B*x}}for(let E=0,_=this.subsystems.length;E!==_;E++)this.subsystems[E].update();a&&(d=K.now()),s.length=0,n.length=0,this.broadphase.collisionPairs(this,s,n),a&&(l.broadphase=K.now()-d);let g=f.length;for(v=0;v!==g;v++){const E=f[v];if(!E.collideConnected)for(let _=s.length-1;_>=0;_-=1)(E.bodyA===s[_]&&E.bodyB===n[_]||E.bodyB===s[_]&&E.bodyA===n[_])&&(s.splice(_,1),n.splice(_,1))}this.collisionMatrixTick(),a&&(d=K.now());const b=xc,A=e.length;for(v=0;v!==A;v++)b.push(e[v]);e.length=0;const z=this.frictionEquations.length;for(v=0;v!==z;v++)p.push(this.frictionEquations[v]);for(this.frictionEquations.length=0,this.narrowphase.getContacts(s,n,this,e,b,this.frictionEquations,p),a&&(l.narrowphase=K.now()-d),a&&(d=K.now()),v=0;v<this.frictionEquations.length;v++)r.addEquation(this.frictionEquations[v]);const M=e.length;for(let E=0;E!==M;E++){const _=e[E],B=_.bi,C=_.bj,D=_.si,q=_.sj;let N;if(B.material&&C.material?N=this.getContactMaterial(B.material,C.material)||this.defaultContactMaterial:N=this.defaultContactMaterial,N.friction,B.material&&C.material&&(B.material.friction>=0&&C.material.friction>=0&&B.material.friction*C.material.friction,B.material.restitution>=0&&C.material.restitution>=0&&(_.restitution=B.material.restitution*C.material.restitution)),r.addEquation(_),B.allowSleep&&B.type===F.DYNAMIC&&B.sleepState===F.SLEEPING&&C.sleepState===F.AWAKE&&C.type!==F.STATIC){const k=C.velocity.lengthSquared()+C.angularVelocity.lengthSquared(),H=C.sleepSpeedLimit**2;k>=H*2&&(B.wakeUpAfterNarrowphase=!0)}if(C.allowSleep&&C.type===F.DYNAMIC&&C.sleepState===F.SLEEPING&&B.sleepState===F.AWAKE&&B.type!==F.STATIC){const k=B.velocity.lengthSquared()+B.angularVelocity.lengthSquared(),H=B.sleepSpeedLimit**2;k>=H*2&&(C.wakeUpAfterNarrowphase=!0)}this.collisionMatrix.set(B,C,!0),this.collisionMatrixPrevious.get(B,C)||(Xt.body=C,Xt.contact=_,B.dispatchEvent(Xt),Xt.body=B,C.dispatchEvent(Xt)),this.bodyOverlapKeeper.set(B.id,C.id),this.shapeOverlapKeeper.set(D.id,q.id)}for(this.emitContactEvents(),a&&(l.makeContactConstraints=K.now()-d,d=K.now()),v=0;v!==i;v++){const E=o[v];E.wakeUpAfterNarrowphase&&(E.wakeUp(),E.wakeUpAfterNarrowphase=!1)}for(g=f.length,v=0;v!==g;v++){const E=f[v];E.update();for(let _=0,B=E.equations.length;_!==B;_++){const C=E.equations[_];r.addEquation(C)}}r.solve(t,this),a&&(l.solve=K.now()-d),r.removeAllEquations();const P=Math.pow;for(v=0;v!==i;v++){const E=o[v];if(E.type&u){const _=P(1-E.linearDamping,t),B=E.velocity;B.scale(_,B);const C=E.angularVelocity;if(C){const D=P(1-E.angularDamping,t);C.scale(D,C)}}}this.dispatchEvent(wc),a&&(d=K.now());const I=this.stepnumber%(this.quatNormalizeSkip+1)===0,R=this.quatNormalizeFast;for(v=0;v!==i;v++)o[v].integrate(t,I,R);this.clearForces(),this.broadphase.dirty=!0,a&&(l.integrate=K.now()-d),this.stepnumber+=1,this.dispatchEvent(yc);let W=!0;if(this.allowSleep)for(W=!1,v=0;v!==i;v++){const E=o[v];E.sleepTick(this.time),E.sleepState!==F.SLEEPING&&(W=!0)}this.hasActiveBodies=W}emitContactEvents(){const t=this.hasAnyEventListener("beginContact"),e=this.hasAnyEventListener("endContact");if((t||e)&&this.bodyOverlapKeeper.getDiff(xt,gt),t){for(let i=0,o=xt.length;i<o;i+=2)$t.bodyA=this.getBodyById(xt[i]),$t.bodyB=this.getBodyById(xt[i+1]),this.dispatchEvent($t);$t.bodyA=$t.bodyB=null}if(e){for(let i=0,o=gt.length;i<o;i+=2)Kt.bodyA=this.getBodyById(gt[i]),Kt.bodyB=this.getBodyById(gt[i+1]),this.dispatchEvent(Kt);Kt.bodyA=Kt.bodyB=null}xt.length=gt.length=0;const s=this.hasAnyEventListener("beginShapeContact"),n=this.hasAnyEventListener("endShapeContact");if((s||n)&&this.shapeOverlapKeeper.getDiff(xt,gt),s){for(let i=0,o=xt.length;i<o;i+=2){const r=this.getShapeById(xt[i]),c=this.getShapeById(xt[i+1]);bt.shapeA=r,bt.shapeB=c,r&&(bt.bodyA=r.body),c&&(bt.bodyB=c.body),this.dispatchEvent(bt)}bt.bodyA=bt.bodyB=bt.shapeA=bt.shapeB=null}if(n){for(let i=0,o=gt.length;i<o;i+=2){const r=this.getShapeById(gt[i]),c=this.getShapeById(gt[i+1]);At.shapeA=r,At.shapeB=c,r&&(At.bodyA=r.body),c&&(At.bodyB=c.body),this.dispatchEvent(At)}At.bodyA=At.bodyB=At.shapeA=At.shapeB=null}}clearForces(){const t=this.bodies,e=t.length;for(let s=0;s!==e;s++){const n=t[s];n.force,n.torque,n.force.set(0,0,0),n.torque.set(0,0,0)}}}new G;const Fe=new Y,K=globalThis.performance||{};if(!K.now){let w=Date.now();K.timing&&K.timing.navigationStart&&(w=K.timing.navigationStart),K.now=()=>Date.now()-w}new h;const yc={type:"postStep"},wc={type:"preStep"},Xt={type:F.COLLIDE_EVENT_NAME,body:null,contact:null},xc=[],gc=[],bc=[],Ac=[],xt=[],gt=[],$t={type:"beginContact",bodyA:null,bodyB:null},Kt={type:"endContact",bodyA:null,bodyB:null},bt={type:"beginShapeContact",bodyA:null,bodyB:null,shapeA:null,shapeB:null},At={type:"endShapeContact",bodyA:null,bodyB:null,shapeA:null,shapeB:null},Yc=Object.freeze(Object.defineProperty({__proto__:null,AABB:G,ArrayCollisionMatrix:Ie,BODY_SLEEP_STATES:ge,BODY_TYPES:xe,Body:F,Box:Gt,Broadphase:be,COLLISION_TYPES:O,ConeTwistConstraint:Ni,Constraint:Ut,ContactEquation:jt,ContactMaterial:ee,ConvexPolyhedron:Ct,Cylinder:Po,DistanceConstraint:Ri,Equation:zt,EventTarget:He,FrictionEquation:Re,GSSolver:Qs,GridBroadphase:si,Heightfield:No,HingeConstraint:Ks,JacobianElement:Ne,LockConstraint:Li,Mat3:ot,Material:se,NaiveBroadphase:js,Narrowphase:nn,ObjectCollisionMatrix:Tn,Particle:Io,Plane:Js,PointToPointConstraint:Ce,Pool:en,Quaternion:U,RAY_MODES:Ae,Ray:Y,RaycastResult:Dt,RaycastVehicle:Qi,RigidVehicle:Eo,RotationalEquation:Pt,RotationalMotorEquation:$s,SAPBroadphase:Wt,SHAPE_TYPES:Vs,SPHSystem:Co,Shape:S,Solver:Ue,Sphere:Ge,SplitSolver:tr,Spring:ji,Transform:j,Trimesh:ye,Vec3:h,Vec3Pool:sn,WheelInfo:Zs,World:on},Symbol.toStringTag,{value:"Module"}));var rn={exports:{}};(function(w,t){(function(e,s){w.exports=s()})(xn,function(){var e=function(){var s=0,n=document.createElement("div");function i(f){return n.appendChild(f.dom),f}function o(f){for(var p=0;p<n.children.length;p++)n.children[p].style.display=p===f?"block":"none";s=f}n.style.cssText="position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000",n.addEventListener("click",function(f){f.preventDefault(),o(++s%n.children.length)},!1);var r=(performance||Date).now(),c=r,a=0,l=i(new e.Panel("FPS","#0ff","#002")),u=i(new e.Panel("MS","#0f0","#020"));if(self.performance&&self.performance.memory)var d=i(new e.Panel("MB","#f08","#201"));return o(0),{REVISION:16,dom:n,addPanel:i,showPanel:o,begin:function(){r=(performance||Date).now()},end:function(){a++;var f=(performance||Date).now();if(u.update(f-r,200),c+1e3<=f&&(l.update(1e3*a/(f-c),100),c=f,a=0,d)){var p=performance.memory;d.update(p.usedJSHeapSize/1048576,p.jsHeapSizeLimit/1048576)}return f},update:function(){r=this.end()},domElement:n,setMode:o}};return e.Panel=function(s,n,i){var o=1/0,r=0,c=Math.round,a=c(window.devicePixelRatio||1),l=80*a,u=48*a,d=3*a,f=2*a,p=3*a,m=15*a,y=74*a,x=30*a,v=document.createElement("canvas");v.width=l,v.height=u,v.style.cssText="width:80px;height:48px";var g=v.getContext("2d");return g.font="bold "+9*a+"px Helvetica,Arial,sans-serif",g.textBaseline="top",g.fillStyle=i,g.fillRect(0,0,l,u),g.fillStyle=n,g.fillText(s,d,f),g.fillRect(p,m,y,x),g.fillStyle=i,g.globalAlpha=.9,g.fillRect(p,m,y,x),{dom:v,update:function(b,A){o=Math.min(o,b),r=Math.max(r,b),g.fillStyle=i,g.globalAlpha=1,g.fillRect(0,0,l,m),g.fillStyle=n,g.fillText(c(b)+" "+s+" ("+c(o)+"-"+c(r)+")",d,f),g.drawImage(v,p+a,m,y-a,x,p,m,y-a,x),g.fillRect(p+y-a,m,a,x),g.fillStyle=i,g.globalAlpha=.9,g.fillRect(p+y-a,m,a,c((1-b/A)*x))}}},e})})(rn);var Ec=rn.exports;const Te=gn(Ec);class Xc{constructor(t,e){V(this,"COLOR",{});V(this,"background",1193045);V(this,"camera");V(this,"cameraTarget");V(this,"canvas");V(this,"fov",75);V(this,"height",600);V(this,"hud");V(this,"hudEnabled");V(this,"input",{keysDown:{},onDown:{},onUp:{},whilePressed:{}});V(this,"mesh");V(this,"mouseSensitivity",.002);V(this,"pitch",0);V(this,"renderer");V(this,"scene");V(this,"things",[]);V(this,"width",800);V(this,"world");V(this,"yaw",0);V(this,"stats");V(this,"add",function(t){this.things.indexOf(t)>-1||(this.things.push(t),t.body&&this.world.addBody(t.body),t.object&&this.scene.add(t.object),t.body&&t.object&&!t.update&&(t.update=this.defaultThingUpdate))});V(this,"handlePressedKey",function(t){typeof this.input.whilePressed[t]<"u"?this.input.whilePressed[t](t):console.debug("unhandled pressed key",t)});V(this,"initCamera",function(){this.camera=new hn(this.fov,this.width/this.height),this.camera.lookAt(0,0,0),this.scene.add(this.camera)});V(this,"initCanvas",function(){this.canvas=document.querySelector("canvas#vg"),this.canvas||(this.canvas=document.createElement("canvas"),this.canvas.id="vg",this.canvas.style.width=this.width,this.canvas.style.height=this.height,document.body.appendChild(this.canvas))});V(this,"initInput",function(){var t=this,e=this.input;window.addEventListener("onbeforeunload",function(s){return s.preventDefault(),s.returnValue="poop",s.stopPropagation(),!1},!0),document.addEventListener("keydown",function(s){typeof e.onDown[s.key]<"u"&&e.onDown[s.key](s.key),Object.keys(t.input.whilePressed).indexOf(s.key)!=-1&&(s.preventDefault(),e.keysDown[s.key]=!0)}),document.addEventListener("keyup",function(s){typeof e.onUp[s.key]<"u"&&e.onUp[s.key](s.key),Object.keys(t.input.whilePressed).indexOf(s.key)!=-1&&(s.preventDefault(),delete e.keysDown[s.key])})});V(this,"initMouse",function(){var t=this;this.canvas&&(this.yaw=0,this.pitch=0,this.mouseSensitivity=.002,document.removeEventListener("pointerlockchange",()=>{}),document.addEventListener("pointerlockchange",()=>{document.pointerLockElement===t.canvas?window.addEventListener("mousemove",t.onMouseMove.bind(t)):(window.removeEventListener("mousemove",t.onMouseMove.bind(t)),t.yaw=0,t.pitch=0)}))});V(this,"initRenderer",function(){this.renderer=new dn({canvas:this.canvas}),this.renderer.setSize(this.width,this.height)});V(this,"initScene",function(){this.scene=new un,this.scene.background=new pn(3359829)});V(this,"initWorld",function(){this.world=new on({gravity:new h(0,-20,0)})});V(this,"initStats",function(){this.stats=new Te,this.stats.addPanel(new Te.Panel("MS","#0f0","#020")),this.stats.addPanel(new Te.Panel("MB","#f08","#201")),this.stats.showPanel(0),this.stats.dom.style.position="absolute",this.stats.dom.style.left="0px",this.stats.dom.style.top="0px",this.stats.dom.style.transform="scale(3.5)",this.stats.dom.style.transformOrigin="top left",this.stats.dom.addEventListener("click",()=>{const t=this.stats.showPanel.bind(this.stats),e=this.stats.dom.children[0].classList.contains("fps")?0:this.stats.dom.children[0].classList.contains("ms")?1:2;t((e+1)%3)})});V(this,"onMouseMove",function(t){document.pointerLockElement===this.canvas&&(this.yaw-=t.movementX*this.mouseSensitivity,this.pitch-=t.movementY*this.mouseSensitivity,this.pitch=Math.max(-Math.PI/2,Math.min(Math.PI/2,this.pitch)),this.camera.rotation.order="YXZ",this.camera.rotation.y=this.yaw,this.camera.rotation.x=this.pitch)});V(this,"remove",function(t){let e=this.things.indexOf(t);!e<0||(console.debug("remove thing",t,typeof t._gui),t.body&&this.world.removeBody(t.body),t.object&&this.scene.remove(t.object),t._gui&&t._gui.destroy(),this.things.splice(e,1))});V(this,"run",function(){let t=this,e=Date.now();this.renderer.setAnimationLoop(function(){t.stats.begin();const s=Date.now(),n=s-e;e=s,t.world.fixedStep(),t.update(n),t.renderer.render(t.scene,t.camera),t.hudEnabled&&typeof t.hud=="function"&&t.hud(n),t.stats.end()})});V(this,"update",function(t){for(var e of this.things)typeof e.update=="function"&&e.update.call(e,t);this.cameraTarget&&this.camera.position.copy(this.cameraTarget.position);for(var s of Object.keys(this.input.keysDown))this.handlePressedKey(s)});t&&(this.width=t.innerWidth,this.height=t.innerHeight),this.canvas=e,this.canvas.id||(this.canvas.id="vg"),this.initStats(),this.initWorld(),this.initScene(),this.initCamera(),this.initRenderer(),this.initInput(),this.initMouse()}defaultThingUpdate(t){this.object.position.copy(this.body.position),this.object.quaternion.copy(this.body.quaternion)}}const $c=w=>{const t=new fn,e=t.load("/Concrete031_1K-JPG/Concrete031_1K-JPG_Color.webp"),s=t.load("/Concrete031_1K-JPG/Concrete031_1K-JPG_Displacement.webp"),n=t.load("/Concrete031_1K-JPG/Concrete031_1K-JPG_NormalDX.webp"),i=t.load("/Concrete031_1K-JPG/Concrete031_1K-JPG_Roughness.webp"),o=t.load("/Concrete031_1K-JPG/Concrete031_1K-JPG_AmbientOcclusion.webp");e.wrapS=e.wrapT=kt,s.wrapS=s.wrapT=kt,n.wrapS=n.wrapT=kt,i.wrapS=i.wrapT=kt,o.wrapS=o.wrapT=kt;const r=10;e.repeat.set(r,r),s.repeat.set(r,r),n.repeat.set(r,r),i.repeat.set(r,r),o.repeat.set(r,r);const c=new Ps(w.width,w.depth),a=new We({map:e,displacementMap:s,normalMap:n,roughnessMap:i,aoMap:o,displacementScale:.05,side:mn,metalness:.1,aoMapIntensity:.5}),l=new we(c,a),u=1;l.rotation.x=-Math.PI/2,l.position.y=-w.height/2+u;const d=new F({type:F.STATIC,shape:new Js});d.quaternion.setFromEuler(-Math.PI/2,0,0),d.position.set(0,-w.height/2+u,0);const f=new Is(16777215,1.5),p=new Ns(16777215,2);return p.position.set(0,10,10),{name:"ground",body:d,object:l,ambientLight:f,directionalLight:p}},Le=Ht(""),qe=Ht(""),ke=Ht("https://www.idell.se/wp-content/uploads/2024/10/intro-18.28.48.mp3"),Kc=Ht("/test.mp4"),Zc=Ht(!1),Es=w=>{Ve(Le)!==w&&Le.set(w)},Cs=w=>{Ve(qe)!==w&&qe.set(w)},zs=w=>{Ve(ke)!==w&&ke.set(w)},cn=Ht(!1),Ot=.4;function Jc(w,t,e,s){const n={north:[],south:[],east:[],west:[]};new vn;const i=new Map,o=e.map(u=>new Promise((d,f)=>{if(i.has(u.image_url)){const p=i.get(u.image_url);Bs(w,n,u,p),d()}else t.load(u.image_url,p=>{const m=p.image,y=Cc(m);i.set(u.image_url,y),Bs(w,n,u,y),d()},void 0,p=>{console.error(`Error loading texture for artwork: ${u.image_url}`,p),f(p)})}));Promise.all(o).then(()=>{Object.entries(n).forEach(([u,d])=>{d.sort((f,p)=>f.order-p.order),Sc(u,d.map(f=>f.object),s)}),cn.set(!0)});let r=null,c=0;const a=30,l=1e3;return u=>{const d=performance.now();if(d-c>l){let f=!1;w.scene.children.forEach(p=>{p.userData&&p.userData.artwork&&u.distanceTo(p.position)<a&&(f=!0,p!==r&&(p.userData.artwork.description&&Cs(p.userData.artwork.description),p.userData.artwork.audio&&(!(r!=null&&r.userData.artwork.audio)||r.userData.artwork.audio!==p.userData.artwork.audio)&&zs(p.userData.artwork.audio),p.userData.artwork.title&&Es(p.userData.artwork.title),r=p))}),!f&&r&&(Cs(""),zs(""),Es(""),r=null),c=d}}}function Cc(w){const t=document.createElement("canvas"),e=t.getContext("2d");t.width=w.width*Ot,t.height=w.height*Ot,e.filter="contrast(130%) brightness(70%)",e.drawImage(w,0,0,t.width,t.height);const s=new yn(t);return s.encoding=void 0,s}function Bs(w,t,e,s){const n=zc(s.image),i=new Rs({map:s,transparent:!0,opacity:1}),o=new we(n,i);Bc(t,e,o);const r=s.image.width*Ot,c=s.image.height*Ot,a=new Ls;o.userData={artwork:e,boundingBox:a,dimensions:{width:r,height:c}},w.add({name:`${e.wall.toLowerCase()}Artwork`,object:o,showGui:!1,gui:[[o.material,"opacity",0,1,.01,"Opacity"]]})}function zc(w){return new Ps(w.width/(Ot*100)*1.05,w.height/(Ot*100)*1.05)}function Bc(w,t,e){const s=t.wall.toLowerCase();w[s]&&w[s].push({object:e,artwork_id:t.artwork_id,order:t.order})}function Sc(w,t,e,s){const a={north:"ltr",south:"rtl",east:"ltr",west:"rtl"}[w],l=a==="ltr"?w==="north"?-e.width/2+15:w==="south"?-e.width/2:-e.depth/2:w==="north"||w==="south"?e.width/2:e.depth/2,u=a==="ltr"?1:-1;let d=l;t.forEach(f=>{const p=f.geometry.parameters.width,m=f.geometry.parameters.height,y=0+-.4+m/2+-1.5,x=a==="ltr"?p/2:-p/2;switch(w){case"north":f.position.set(d+x,y,-e.depth/2+.5),f.rotation.y=0;break;case"south":f.position.set(d+x,y,e.depth/2-.5),f.rotation.y=Math.PI;break;case"east":f.position.set(e.width/2-.3,y,d+x),f.rotation.y=-Math.PI/2;break;case"west":f.position.set(-e.width/2+.1,y,d+x),f.rotation.y=Math.PI/2;break}d+=(p+0)*u})}function Qc(w,t,e){new bn().load("/smiley.glb",function(n){const i=new We({color:16770304,emissive:4473856,roughness:1,metalness:.5,transparent:!0,opacity:0});n.scene.traverse(function(v){v.isMesh&&(v.material=i)});const r=new Ls().setFromObject(n.scene).getCenter(new ut);n.scene.position.sub(r),n.scene.scale.multiplyScalar(7.2);const a=t.object.position.clone(),l=new ut;w.camera.getWorldDirection(l),l.y=0,l.normalize();const u=new ut;u.crossVectors(l,new ut(0,1,0)),u.normalize(),n.scene.position.copy(a.clone().add(l.clone().multiplyScalar(7)).add(u.clone().multiplyScalar(6))),n.scene.position.x=Math.max(-e.width/2+1,Math.min(e.width/2-1,n.scene.position.x)),n.scene.position.y=a.y+1,n.scene.position.z=Math.max(-e.depth/2+1,Math.min(e.depth/2-1,n.scene.position.z)),a.y=n.scene.position.y,n.scene.lookAt(a);const p=new wn(16777215,1,100);p.position.set(0,5,0),n.scene.add(p);const m=900,y=Date.now();function x(){const v=Date.now()-y,g=Math.min(v/m,1);i.opacity=g,g<1&&requestAnimationFrame(x)}x(),w.add({name:"smiley",object:n.scene,update:()=>{const v=t.object.position.clone(),g=new ut;w.camera.getWorldDirection(g),g.y=0,g.normalize();const b=new ut;b.crossVectors(g,new ut(0,1,0)),b.normalize();const M=v.clone().add(g.clone().multiplyScalar(7)).add(b.clone().multiplyScalar(6));n.scene.position.lerp(M,.03),n.scene.position.x=Math.max(-e.width/2+1,Math.min(e.width/2-1,n.scene.position.x)),n.scene.position.y=v.y+1,n.scene.position.z=Math.max(-e.depth/2+1,Math.min(e.depth/2-1,n.scene.position.z)),v.y=n.scene.position.y,n.scene.lookAt(v)},gui:[[n.scene.position,"x",-50,50,.1,"position x"],[n.scene.position,"y",-50,50,.1,"position y"],[n.scene.position,"z",-50,50,.1,"position z"],[n.scene.scale,"x",.1,5,.01,"scale x"],[n.scene.scale,"y",.1,5,.01,"scale y"],[n.scene.scale,"z",.1,5,.01,"scale z"],[n.scene.rotation,"y",-Math.PI,Math.PI,.01,"rotation y"],[i,"roughness",0,1,.01,"roughness"],[i,"metalness",0,1,.01,"metalness"],[p,"intensity",0,2,.1,"light intensity"]]})},void 0,function(n){console.error("Error loading GLTF file",n),alert("Failed to load the 3D model. Please check the path or file.")})}function ta(w){var s;console.log("removeSmileyFace");const t=w.things.find(n=>n.name==="smiley");if(!t){console.warn("Smiley not found for removal");return}let e=null;if(t.object.traverse(function(n){n.isMesh&&n.material&&(e=n.material)}),!e&&((s=t.object.children[0])!=null&&s.material)&&(e=t.object.children[0].material),e&&e.transparent){let n=function(){const r=Date.now()-o,c=Math.min(r/i,1);e.opacity=1-c,c<1?requestAnimationFrame(n):w.remove(t)};const i=900,o=Date.now();n()}else console.log("Removing smiley immediately (no material or not transparent)"),w.remove(t)}const ea=(w,t)=>{if(!/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent))return;const s=document.createElement("div");s.className="movement-container",s.style.position="fixed",s.style.bottom="6%",s.style.left="12%",s.style.transform="translateX(-50%)",s.style.zIndex="10",document.body.appendChild(s);const n=(m,y,x)=>{const v=document.createElement("button");v.textContent=m,v.style.position="absolute",v.style.zIndex="1",v.className="movement-button",Object.assign(v.style,y);const g=()=>{t.touchControls[x]=!0},b=()=>{t.touchControls[x]=!1};v.addEventListener("touchstart",g),v.addEventListener("touchend",b),s.appendChild(v)};n("↑",{bottom:"80px",left:"50%",transform:"translateX(-50%)"},"forward"),n("↓",{bottom:"0px",left:"50%",transform:"translateX(-50%)"},"backward"),n("←",{bottom:"40px",left:"calc(50% - 67px)"},"left"),n("→",{bottom:"40px",left:"calc(50% + 20px)"},"right");const i=document.createElement("style");i.textContent=`
        .movement-container {
            width: 180px;
            height: 180px;
            left: 80%;
            transform: translateX(-50%);
            z-index: 10;
        }
        .movement-button {
            width: 50px;
            height: 50px;
            background: rgba(255, 255, 255, 0.3);
            border: 2px solid white;
            border-radius: 25px;
            color: white;
            font-size: 24px;
            touch-action: none;
            user-select: none;
        }
        .movement-button:active {
            background: rgba(255, 255, 255, 0.5);
        }
    `,document.head.appendChild(i);const o=document.createElement("div");o.className="look-stick";const r=document.createElement("div");r.className="stick",o.appendChild(r);let c=!1,a=0,l=0;const u=m=>{c=!0,m.type.includes("mouse")||m.touches[0];const y=o.getBoundingClientRect();a=y.left+y.width/2,l=y.top+y.height/2,r.style.transition="none"},d=m=>{if(!c)return;m.preventDefault();const y=m.type.includes("mouse")?m:m.touches[0],x=y.clientX-a,v=y.clientY-l,b=Math.min(Math.sqrt(x*x+v*v),30),A=Math.atan2(v,x),z=Math.cos(A)*b,M=Math.sin(A)*b;r.style.transform=`translate(${z}px, ${M}px)`,w.camera.rotation.y-=x*2e-4,w.camera.rotation.x-=v*2e-4,w.camera.rotation.x=Math.max(-Math.PI/3,Math.min(Math.PI/3,w.camera.rotation.x))},f=()=>{c=!1,r.style.transition="transform 0.2s",r.style.transform="translate(0, 0)"};o.addEventListener("mousedown",u),o.addEventListener("touchstart",u),document.addEventListener("mousemove",d),document.addEventListener("touchmove",d,{passive:!1}),document.addEventListener("mouseup",f),document.addEventListener("touchend",f),document.body.appendChild(o);const p=document.createElement("style");p.textContent=`
   
       .look-stick {
       position: fixed;
        top: 80%;
        right: 3%;
        transform: translateY(-50%);
        width: 100px;
        height: 100px;
        background: rgba(255, 255, 255, 0.2);
        border: 2px solid white;
        border-radius: 50%;
        touch-action: none;
    }
        
        .stick {
            position: absolute;
            top: 30%;
            left: 50%;
            width: 40px;
            height: 40px;
            background: rgba(255, 255, 255, 0.5);
            border-radius: 50%;
            transform: translate(-20%, -50%);
            transition: transform 0.2s;
        }
    `,document.head.appendChild(p)};function sa(w,t){const e=new F({mass:30,shape:new Ge(1),linearDamping:.9,angularDamping:.9});e.position.set(t.position.x,t.position.y,t.position.z);const s=new we(new qs(1,3,2),new Rs({color:65424})),n={name:"player",body:e,object:s,moveSpeed:2,lookSpeed:.1,jumpSpeed:300,crouchSpeed:.1,unremovable:!0,moveDirection:new ut,keysDown:{},touchControls:{},update:function(i){var a,l;this.moveDirection.set(0,0,0),this.keysDown.s&&(this.moveDirection.z-=1),this.keysDown.w&&(this.moveDirection.z+=1),this.keysDown.a&&(this.moveDirection.x-=1),this.keysDown.d&&(this.moveDirection.x+=1),this.moveDirection.normalize();let o=new ut;w.camera.getWorldDirection(o),o.y=0,o.normalize();let r=new ut(-o.z,0,o.x),c=new h((this.moveDirection.x*r.x+this.moveDirection.z*o.x)*this.moveSpeed*i,0,(this.moveDirection.x*r.z+this.moveDirection.z*o.z)*this.moveSpeed*i);this.body.applyImpulse(c),this.body.position.x=Math.max(-t.room.width/2+1,Math.min(t.room.width/2-1,this.body.position.x)),this.body.position.z=Math.max(-t.room.depth/2+1,Math.min(t.room.depth/2-1,this.body.position.z)),this.object.position.copy(this.body.position),this.object.quaternion.copy(this.body.quaternion),w.camera.position.copy(this.object.position),w.camera.position.y+=1.2,this.initialRotationSet||(w.camera.rotation.x=((a=t.look)==null?void 0:a.x)||.31,w.camera.rotation.y=((l=t.look)==null?void 0:l.y)||-.3,this.initialRotationSet=!0),t.onUpdate&&t.onUpdate(this.object.position)}};return["w","a","s","d"].forEach(i=>{w.input.onDown[i]=()=>{n.keysDown[i]=!0},w.input.onUp[i]=()=>{n.keysDown[i]=!1}}),w.input.onDown[" "]=()=>{Math.abs(n.body.velocity.y)<.1&&n.body.applyImpulse(new h(0,n.jumpSpeed,0))},w.input.whilePressed.Control=()=>n.body.velocity.y-=n.crouchSpeed,w.camera.rotation.order="YXZ",w.input.whilePressed.ArrowRight=()=>{w.camera.rotation.y-=.05},w.input.whilePressed.ArrowLeft=()=>{w.camera.rotation.y+=.05},w.input.whilePressed.ArrowDown=()=>{w.camera.rotation.x-=.02},w.input.whilePressed.ArrowUp=()=>{w.camera.rotation.x+=.02},w.add(n),w.cameraTarget=s,n}function ue(w,t,e){const s=new F({type:F.STATIC,shape:new Gt(new h(t.dimensions.width,t.dimensions.height/2,t.dimensions.depth))});s.position.set(t.position.x,t.position.y,t.position.z);const n=e.load("/bricks/brick_wall_02_diff_1k.jpg"),i=e.load("/bricks/brick_wall_02_disp_1k.png"),r=t.name.includes("north")||t.name.includes("south")?t.dimensions.width/2:t.dimensions.depth/2,c=t.dimensions.height/8;[n,i].forEach(d=>{d.repeat.set(r,c),d.wrapS=d.wrapT=kt});const a=new We({map:n,displacementMap:i,displacementScale:.1,roughness:.8,metalness:.2,opacity:.5}),l=new we(new qs(t.dimensions.width,t.dimensions.height,t.dimensions.depth),a),u={name:t.name,body:s,object:l,...t.gui&&{gui:[[l.position,"x",-t.dimensions.width*1.5,t.dimensions.width,.1,"pos x"],[l.position,"y",0,t.dimensions.height*2,.1,"pos y"],[l.position,"z",-t.dimensions.depth,t.dimensions.depth,.1,"pos z"],[l.rotation,"y",-Math.PI,Math.PI,.01,"rot y"]]}};return w.add(u),u}function na(w,t,e){const s=t.walls||{north:!0,south:!0,east:!0,west:!0};s.west&&ue(w,{name:"westWall",position:{x:-t.width/2-t.thickness-1,y:(t.wallHeight||t.height)/4,z:0},dimensions:{width:t.thickness,height:t.wallHeight||t.height,depth:t.depth}},e),s.east&&ue(w,{name:"eastWall",position:{x:t.width/2+t.thickness+1,y:(t.wallHeight||t.height)/4,z:0},dimensions:{width:t.thickness,height:t.wallHeight||t.height,depth:t.depth*2}},e),s.north&&ue(w,{name:"northWall",position:{x:-5,y:(t.wallHeight||t.height)/4,z:t.depth/2+t.thickness/2},dimensions:{width:t.width,height:t.wallHeight||t.height,depth:t.thickness}},e),s.south&&ue(w,{name:"southWall",position:{x:-5,y:(t.wallHeight||t.height)/4,z:-t.depth/2-t.thickness/2},dimensions:{width:t.width,height:t.wallHeight||t.height,depth:t.thickness}},e);const n=new Ns(16777215,.2);n.position.set(-40,50,50);const i=new Is(16777215,.2);w.add({name:"light",object:n}),w.add({name:"ambientLight",object:i})}function Ss(w){let t,e=`<div class="w-[20rem] h-[10rem]"><div class="rotate-[-90deg] z-[1000] sm:rotate-0"><svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" viewBox="0 0 1319.2 756" style="enable-background:new 0 0 1319.2 756;" xml:space="preserve"><style type="text/css">.st0{fill:#FFFFFF;}
          </style><g><path class="st0 svg-elem-1" d="M157.7,323.5c4.6,4.9,10.4,1.4,15.9,4.1c3.2,1.2,5.5-0.2,8.1-1.2c0.6-0.2,1.3-0.2,1.9-0.1
              c6,1.4,13.2,1.3,18-2.1c2.9-3.2-1.6-6.9-1.5-10.4c0-0.8-0.2-1.6-0.7-2.2c-3.7-4.4-10-2-14.7-5.1c-0.3-0.2-0.7-0.4-1.1-0.5
              c-3.5-0.9-7.1-3.4-11.5-3.6c-0.4,0-0.7,0.1-1.1,0.2c-3.9,1.2-13.3,7.1-14.7,7c0,0,0,0-0.1,0c-1.9-0.2-3.7,1.4-3.6,3.3
              c0,1.1,0.2,2.2,0.4,2.9C153.8,318.1,155.2,321.7,157.7,323.5z"></path><path class="st0 svg-elem-2" d="M211.1,362.8c2.1,5.4,8.5,5.6,11.9,10.1c0.2,0.3,0.4,0.5,0.7,0.7c3,2.1,5.5,5.8,9.6,7.6c0.3,0.1,0.6,0.2,1,0.2
              c3.9,0.4,8.9,2.7,11.8-0.1c1-0.9,2.4-1.2,3.6-0.6c0,0,0,0,0.1,0c1.7,0.9,3.9,0,4.4-1.9c0.2-0.9,0.4-1.7,0.4-2.4
              c0.1-2.3-0.1-6-1.9-8.6c-2.8-6-9-5.1-13.3-9.6c-2.6-2.2-5.1-1.8-7.8-2c-0.6,0-1.1-0.2-1.6-0.6c-5.1-3.6-11.6-6.2-17.1-4.9
              c-3.6,1.8-0.6,6.7-1.7,9.8C210.9,361.3,210.9,362.1,211.1,362.8z"></path><path class="st0 svg-elem-3" d="M464.7,387.1c-2.6,2.6-3.1,8.8-5.2,13.3c3.4-3.1,9.4-4.2,14-3.6C468.4,391,464.7,386.4,464.7,387.1z"></path><path class="st0 svg-elem-4" d="M622.7,538.1c1.3-0.1,1.6-0.9,1.4-1.9c0.3-1.6-1.6-4.4-2.2-4.6c-4.2-1-3.6-6.2-7.8-7.5c-3.6,1-7,2.3-11.4,2.1
              c-3.4,2.3-18.2,13-19,17.4c0,1-1,3.4-2.9,3.1c-4.1-1.9-6.8-6.2-7-10.6c0.1-2.6,1.1-5.3,3.3-7.6l13-4.7c0,0,0,0-0.3-0.3
              c-0.2-0.1-0.5-0.1-0.7-0.2l1-0.3c0,0,0,0-0.3-0.3c-3.1-0.5-5.7-1.3-8.8-2.3h-0.3c-1.6,0.8-3.6,1.8-5.5,2.6c-2.3,0.5-4.4,1-5.5,2.3
              c0,0.2,0.1,0.5,0.1,0.7c0,0-0.1,0-0.1,0.1c0,0.3,0.1,0.5,0.1,0.7c-0.3,4.6-5.8,7.6-8.7,10.7c-9.4-1.6-13.3,1-22.1,3.6
              c-3.2-2.2-4.3-6.2-4.4-9.2c0.9-6.6,8.6-8.7,13.5-12.8c3.4-2.3,2.3-7.3,3.1-11.4c1.8-3.6,7.3-5.7,7.5-11.2c0-0.1,0-0.1-0.1-0.2
              c0-0.2,0.1-0.4,0.1-0.6c-1.6-3.6-1.8-8.1-4.7-10.9c-4.4-5.5-10.9-11.2-19.2-10.7c-3.1,0-5.5,3.4-8.6,4.4c0-5.5-0.3-10.9-0.5-16.4
              c-4.2,3.1-8.6,6-12.5,9.6c0,0.2,0.1,0.5,0.1,0.7c0,0-0.1,0.1-0.1,0.1c2,15.3,3.6,30.7,5.1,45.3c-2.6,2.4-18.9,11.4-21,11.1
              c-8.1,1-7,11.4-14.5,10.7c-1.8-1.4-2.2-3.2-2.2-5.2c0-1.1,0.1-2.2,0.1-3.4c0-1,0-1.9-0.2-2.9c-1.3-5.5-19.2-13.3-24.7-14.3
              c-2.6,1-1.3,9.9-2.6,11.7c-1.6,6.1-2.3,12.2-2.3,18c0,7.3,1.1,14.3,3.2,20.9c0.1,0,0.2,0,0.3,0c0.1,0,0.2,0,0.3,0
              c0.1,0,0.1,0,0.2,0c0.1,0,0.2,0,0.3,0.1c0.1,0,0.1,0,0.2,0.1c0.1,0,0.2,0.1,0.3,0.1c0.1,0,0.2,0.1,0.2,0.1c0.1,0,0.2,0.1,0.3,0.1
              c0.1,0,0.2,0.1,0.3,0.1c0.1,0,0.2,0.1,0.3,0.1c0.1,0,0.2,0.1,0.3,0.2c0.1,0,0.1,0.1,0.2,0.1c0.1,0.1,0.2,0.1,0.3,0.2
              c0,0,0.1,0.1,0.1,0.1c0.1,0.1,0.3,0.3,0.4,0.4c2.1,2.2,1.4,5.8,0.7,8.5c-0.1,0.3-0.2,0.5-0.2,0.7c0.1,0.3,0.3,0.6,0.4,0.8
              c0.2,0,0.4,0,0.6,0.1c0,0,0.1,0,0.1,0c0.2,0,0.3,0.1,0.5,0.1c0,0,0.1,0,0.1,0c0.2,0,0.3,0.1,0.5,0.1c0,0,0.1,0,0.1,0
              c0.2,0,0.3,0.1,0.5,0.1c0.1,0,0.3,0.1,0.4,0.2c2.5-0.6,5.1-1.2,7.6-1.9c1.9-0.5,3.9-0.8,5.9-1.3c1.2-0.3,2.4-0.7,3.6-0.8
              c2.6-0.3,4.1,1.2,5.4,3.3c1.4,2.3,1.2,5-0.4,7.1c-1.3,1.7-3.5,2.7-5.6,2.7c-1.6,0-3.2-0.7-4.7-0.3c-0.1,0-0.3,0.1-0.4,0.1
              c0,0,0,0,0,0c-0.3,0.1-0.5,0.3-0.8,0.4c0,0,0,0-0.1,0.1c-0.1,0.1-0.2,0.2-0.3,0.2c0,0-0.1,0.1-0.1,0.1c-0.1,0.1-0.1,0.1-0.2,0.2
              c-0.1,0.1-0.1,0.2-0.2,0.2c0,0-0.1,0.1-0.1,0.1c-0.2,0.3-0.4,0.5-0.5,0.8c0.4,0.9,0.8,1.7,1.2,2.6c0.2,0,0.4-0.1,0.6-0.1
              c0.9,0,1.9,0.4,2.3,1.2c0.6,1,0.3,2.3-0.1,3.3c0,0,0,0,0,0.1h0c0,0-0.1,0.1-0.1,0.1c24.9,21.5,64.1,24.7,92.4-10
              c2.6-2.7,4.7-5.7,6.5-8.9c3.6,1.5,7.2,2.9,10.6,4.2c1.7,0.6,3.4-0.6,3.5-2.4c0.1-4.5,1.9-8.1-3.9-11.9c-0.4-0.3-0.9-0.4-1.3-0.4
              c-1.4-0.1-2.7,0-4,0c1.6-4,3.1-8.1,4.8-12.2c5.2-1.6,8.8,5.5,14,0.8c5.5-5.5,13.8-7.5,21-8.1C622.7,545.9,622.7,541.5,622.7,538.1z
              "></path><path class="st0 svg-elem-5" d="M296.6,447.7c-6.5-5.5-10.1-10.7-7.8-19l2.3-1.3c2.3,0.8,22.3,7.3,21.3,2.1c-14-17.1-68.8-37.9-90.4-51.7
              c-40.8-21.3-81.6-47-122.6-75.3l-55.3,20.3l6.7,3.7c-0.1,0.1-0.1,0.1-0.2,0.2l-6.5-3.6l-25.7,9.6v6c0,0,0,0,0,0v47.2l279.8,93.9
              C302.1,469,289.6,458.8,296.6,447.7z"></path><path class="st0 svg-elem-6" d="M373,400.1c-5.5-0.3,0.5,21.3-4.9,27.5c19.5,16.4,43.4,29.4,65,42.9c1.8-5.5-1-10.9,2.1-15.1
              c7-11.2,21-14,32.7-14.8c6.2-1,12.5,2.6,19.2,3.9c3.1,2.3,4.2,5.5,5.2,8.8c3.4-1.3,7.3-2.6,10.7-4.2c4.7,0,15.6-7.8,22.3-9.4
              c-8.6-2.9-18.4-3.1-23.9-10.9c-1.8-2.1-10.9-12.7-19.5-23.4c0.3,2.1-0.3,3.9-1,5.2c-4.2,3.1-11.7,4.2-18.4,3.9
              c-3.4-2.3-3.6-7-3.6-10.7c-1,1.3-2.9,2.3-5.2,3.1c-4.2,0-6.5,3.4-8.8,0c-9.4-6-9.1-14.5-18.4-19.7c-4.2-6,10.4-22.9,13-30.4
              l72.5,65.2l-80-241.9l-99,36.4c23.9,62.6,46.5,123.2,66.5,175.4C395.4,399.9,382.4,399.9,373,400.1z M434.6,440.7
              c6.5,0,13-4.2,15.6-10.7c1.8-2.8,5.1-6.7,7.4-10.5l0.1,0.1c-2.3,3.6-6,7.8-7.5,10.7c-2.3,6.5-9.1,10.7-15.6,10.7
              c-3.9,0-10.7,0-13-6.5c0-0.2,0-0.3,0-0.5C424,440.7,430.7,440.7,434.6,440.7z"></path><path class="st0 svg-elem-7" d="M953.4,339.6c-3.9,2.3-7.8,3.1-12,3.4c-35.1,20.3-69.9,40.8-104.7,61.1c-4.2,3.4-9.6,4.2-8.1,8.6
              c9.6,0.5,24.4,4.9,32.2,0.5c93.5-43.6,187.6-87,281.6-130.9l-57.7-22.1c-40.5,23.4-80.8,46.8-121.3,70.1
              C960.5,333.6,956.3,336.5,953.4,339.6z"></path><path class="st0 svg-elem-8" d="M1028.5,543.8c21.6,0.3,40-14.3,50.1-3.4l9.6,12.7l212.5,23.6v-56.1l-367.6-19.2l-2.3,1
              c6.2,5.2,10.1,14,3.9,20.5c-1.3,2.1-4.2,4.2-7,5.7c5.5,2.3,11.2,4.9,17.4,6.8c0.3-0.8,0.8-1.3,1.8-1c2.1,0.8,3.6,1.3,5.5,2.3
              c2.1,0.3,4.2,0.3,5.7,0.3c2.3,1.3,4.2,3.9,4.7,6.5c0.8,0.3,1.3,0.8,2.3,0.8c0-0.3-0.3-0.3-0.3-0.8c13,0.8,26,2.3,39.2,3.1
              c7.5-3.6,1.8-10.4,3.6-15.3C1011.9,526.1,1023.1,547.4,1028.5,543.8z"></path><path class="st0 svg-elem-9" d="M892.3,515.5c-0.2-0.1-0.5-0.2-0.7-0.3c-7.8,1-13,3.6-18.4,6.5c8.1,2.9,16.9,4.7,24.4,6c0,0,0,0,0,0
              c0.1,0,0.2,0,0.3,0C895.6,522.7,898.7,518.4,892.3,515.5z"></path><path class="st0 svg-elem-10" d="M348.9,412.3c-1-5.7,2.1-15.8-3.9-19.5c-44.4-38.5-89.1-83.7-133.8-131.2l-38.4,14.2
              c56.6,48.3,110.1,95.4,166.2,133.6C343.1,410.8,344.4,414.4,348.9,412.3z"></path><path class="st0 svg-elem-11" d="M355.8,356l-70.7-121.9l-37.5,16.7c29.9,39.8,62.1,74.6,92.3,106.8C345.8,360.5,353.7,364,355.8,356z"></path><path class="st0 svg-elem-12" d="M757.4,656.9l4.1,2.1C760.2,658.3,758.9,657.6,757.4,656.9z"></path><path class="st0 svg-elem-13" d="M777.3,651.9c-0.6,0.4-1.3,0.7-2,1.1h147.6l-206.2-62.7c-22.3,0.3-34.3,13.8-28.3,24.9c2.3,2.1,7.8,1,10.4-0.3
              c9.4-4.2,53.5,0.8,63.9,2.3c6.2,5.2,14.8,8.1,22.6,10.9c4.4,6.5-5.2,11.2,0,17.1C785.3,645.4,782.5,655.3,777.3,651.9z"></path><path class="st0 svg-elem-14" d="M687.2,642c-17.1-1-8.6-18.4-20.5-22.3c-11.7,3.1-24,7.9-35.7,11l40.8,22.3h59.5
              C718.6,647.1,703.5,642.2,687.2,642z"></path><path class="st0 svg-elem-15" d="M414.9,592.9c2.3-2.3,7.5-5.7,13.5-9.6c-18.7-28.3-17.4-62.4,6.5-90.7c-13.3-6.5-26.8-13.5-40-19.7
              c-9.1,10.7-41.3,32.5-57.4,31.2l-319-64.2v75.8l247.3-4.6L18.4,568.2c21.8-3.2,43.7-6.3,65.5-9.4c-0.1,0.1-0.2,0.3-0.3,0.5
              c-21.9,3.1-43.9,6.2-65.8,9.4v38.2l5.3-1.4c0,0,0,0.1,0,0.1l-4.7,1.3V653h58.1l24.9-16.8c-11.3,6.9-24.1,1.1-36.2,3.1
              c-5.2,2.1-9.4,4.4-14.8,4.9c-3.1-1.8-7.5-3.4-7.5-6.2c-0.2-0.2-0.4-0.3-0.5-0.5c0.3-0.1,0.5-0.5,0.5-1.3c0.8-5.2-0.5-11.7,4.2-15.3
              c12.7-2.1,25.2-10.4,33.8-17.9c5.2-4.2,14.3,3.6,19.2-0.5c10.7-3.1,22.6-8.1,33.8-15.3c6.5-2.3,12-6.5,16.9-1.6
              c2.3,12.7-5.2,19.2-10.9,29.4c-0.3,6.5,5.7,14.5-3.1,19.2c-10.7,4.2-18.7,7.5-26.2,13.3l44.7-14l3.9-13.8
              c4.4-11.7,14.3-24.9,28.3-27.5c4.2,2.9,12.7,6,16.1,10.4c2.1,5.2-0.5,12,4.9,14.8c46-14.8,149.4-51.2,195.6-66
              C400.6,555,248.4,653,248.4,653h99.1l70.8-52.8C415.7,596.3,413.8,596,414.9,592.9z M87.7,558.7c0,0-0.1,0-0.1,0
              C87.6,558.7,87.7,558.7,87.7,558.7C87.7,558.7,87.7,558.7,87.7,558.7z M89.1,558.4l-0.8,0.1c0.3-0.1,0.6-0.2,0.9-0.4
              c0.1,0,0.3,0,0.4-0.1C89.5,558.2,89.3,558.3,89.1,558.4z M98.8,557.2c-0.1,0-0.1,0-0.2,0c0.1-0.1,0.2-0.1,0.3-0.2
              C98.8,557.1,98.8,557.1,98.8,557.2z M103.7,556.5c0.2-0.2,0.5-0.3,0.7-0.5c1.1-0.2,2.2-0.3,3.3-0.5c-0.3,0.2-0.7,0.4-1,0.6
              C105.7,556.2,104.7,556.4,103.7,556.5z M113.3,555c-0.2,0.1-0.4,0.2-0.6,0.3c-1.9,0.3-3.7,0.5-5.6,0.8c0.2-0.2,0.4-0.3,0.6-0.5
              c2-0.3,4-0.6,6-0.8C113.6,554.8,113.4,554.9,113.3,555z M116.8,554.7c-0.5,0.1-1,0.1-1.5,0.2c0.3-0.2,0.6-0.4,1-0.5
              c0.3,0,0.6-0.1,1-0.1C117.1,554.4,116.9,554.5,116.8,554.7z"></path><path class="st0 svg-elem-16" d="M101.4,636.2c0.6-0.4,1.3-0.8,1.9-1.3L101.4,636.2z"></path><g><path class="st0 svg-elem-17" d="M507.3,152c5.7,74.8,17.9,272.8,17.9,272.8l37.9-293.3L507.3,152z"></path><path class="st0 svg-elem-18" d="M779.8,356l153.4-153.8l-51.3-19.6L746.4,356C760.9,361.4,765.3,351.3,779.8,356z"></path><path class="st0 svg-elem-19" d="M820.9,354.1l1.8,2.3c-1.8,1.8-17.7,18.7-9.4,18.7c18.2-5.7,42.6-24.7,65.5-42.6c-1.3-2.1-2.3-4.4-1.3-7.5
                c6-12.7,20.8-20.8,33.8-23.4c5.2-5.2,7.5-11.7,15.6-12.7c8.3-0.3,14.5-5.7,21.3-8.6c21.3-16.1,42.6-32.2,63.9-48.6l-45.5-17.4
                L789.2,357.5C799.4,352.8,809,350.5,820.9,354.1z"></path><path class="st0 svg-elem-20" d="M721.2,443.3c-27.7-3.4-59.1-47.7-52.3-62.2l140.7-226.2l-54.6-20.8l-29.9-11.2l-115.6,292l0,0l115.6-292
                l-67.6-26l-26.8,9.6l-26.2,9.6l10.9,56.1c3.9-1,6.8-2.6,9.4-5.7c3.9-5.2,9.1-10.7,14-4.9c0.5,7.5,0.3,14.8,1.3,22.3
                c2.3,16.9-13,27-14.3,43.9c0,6.5-3.9,11.7-5.2,19.5c-1.3,4.1,0,8.8-1,12.9c0,0.1-0.1,0.1-0.1,0.1c-4.1,1.1-9,7.7-13.9,4.9
                c-2.3-2.3-3.6-5.2-4.2-7.8l-50.1,174.3c7.5,0.5,12.2,6,18.2,7.8c-1-9.6-1.3-21-1.3-24.4c4.2-4.7,6.2-10.7,8.1-15.8
                c6-4.2,12.5,1,17.4-3.4c1-0.8,11.1-0.5,9,2.8c-0.1,0.2-0.1,0.4,0.1,0.5c4.2,2.8,10.3,6.4,7.5,12.3c-6,10.1-11.2,22.3-8.8,34.3
                c1,10.7-12.5,9.6-14.3,17.4c10.7,14.8,23.9,28.3,27.8,46.8c7.5,1,14,2.1,16.9,2.1C661.2,490,691.8,466.9,721.2,443.3z
                 M647.4,395.2l2.1-2.1l2.3-2.1l2.1-2.1l2.3-2.3l2.1-2.1l4.2-4.4l1.3-2.1l2.1-2.3l2.9-4.4l1.3-2.1l1.3-2.3l1.3-2.1h0.3l-1.3,2.1
                l-1.3,2.3l-1.3,2.1l-2.9,4.4L664,378l-1.3,2.1l-4.2,4.4l-2.1,2.1l-2.3,2.3l-2.1,2.1l-2.3,2.1l-2.1,2.1l-2.3,2.1
                c0-0.1-0.1-0.2-0.1-0.3L647.4,395.2z"></path><path class="st0 svg-elem-21" d="M1301.3,466v-61c-33,5.1-66,10.2-99.1,15.1c-0.7-1.9-1.9-3.7-1.9-5.6c0-0.8-0.2-1.6-0.7-2.2
                c-3.7-4.4-10-2-14.7-5.1c-0.3-0.2-0.7-0.4-1.1-0.5c-3.5-0.9-7.1-3.4-11.5-3.6c-0.4,0-0.7,0.1-1.1,0.2c-3.9,1.2-13.3,7.1-14.7,7
                c0,0,0,0-0.1,0c-1.9-0.2-3.7,1.4-3.6,3.3c0,1.1,0.2,2.2,0.4,2.9c0.7,2.3,2,5.9,4.5,7.8c0.9,0.9,1.8,1.5,2.7,2
                c-104.6,15.2-209.4,28.9-313.4,38.8c-11.7-4.7-8.3-17.4-6.2-26c2.3-5.2-33.5-3.4-41.6-9.9c-31.4,15.3-58.2,34.6-85.7,52
                c7.8,2.3,17.4,1,23.4,4.7c15.8,8.6,15.6,22.1,13.8,33c0,5.7-7.5,10.9-11.4,17.1c-9.6,5.5-23.4,1.3-33,3.9
                c-7.8,4.2-15.8,10.7-25.7,8.8c-15.8-1-33.5-7.5-47.3-1c-6,3.4-11.4,9.6-9.6,15.8c20.5,7.3,31.2,8.8,45.5,20.8
                c12,0,29.6,3.6,37.4-3.9c4.2,0,7.8,2.3,13.8,4.2l379.4,68.4h201.2l-0.5-27.5c0,0-329.7-43.8-433.6-56.6c0-0.1,0-0.1,0-0.2
                c-1-6.2-0.8-15.4-1.5-18.8c-6.5-8.6-14-12.7-15.6-23.4c-0.2,0-0.3-0.1-0.5-0.1c0,0,0-0.1,0-0.1c-4.1-0.9-8.1-2.4-11.7-4.2
                c-6.1-3.1-11-7.3-13.7-11.9c0-3.7,9.5-8.3,3.7-11.9c-0.4-0.3-1-0.6-1.7-0.9c-7.3,0.5-15.2-0.7-21.6-1.9l2.1-1.2
                C969.4,482.9,1301.1,466.1,1301.3,466z"></path><path class="st0 svg-elem-22" d="M792.8,386.3c0.1,0,0.1,0,0.2-0.1c3.7-1.1,5.4-4.3,3.7-6.9c-1.2-1.9-2.5-3.5-3.6-4.5c-3.2-2.8-9-7.1-15.1-8
                c-12.6-3.7-19.7,5.5-32,5.8c-6.7,0.7-9.4,4.2-13.2,7.6c-0.9,0.8-2.2,1.4-3.7,1.7c-11.7,2.3-23.8,7.5-29.5,15.6
                c-0.3,0.4-0.5,0.9-0.6,1.3c-1.3,6.3,9.3,8.4,12.2,13.4c0.7,1.2,1.8,2.2,3.4,2.7c10.5,3.5,19.4-4.3,30.4-3.5c0.9,0.1,1.8,0,2.6-0.1
                c7-1.3,15.7-0.3,23.5-3.2c0.7-0.3,1.3-0.7,1.9-1.1c5.9-4.6,16.2-8.4,15.7-15.9C788.6,389.2,790.1,387.2,792.8,386.3z"></path></g><path class="st0 svg-elem-23" d="M921.5,435.2l188.3-34.2c-2-1.6-3.4-3.4-2.8-5.9c0.1-0.5,0.3-0.9,0.6-1.3c5.7-8.1,17.8-13.3,29.5-15.6
              c1.4-0.3,2.7-0.9,3.7-1.7c3.8-3.4,6.5-7,13.2-7.6c12.3-0.3,19.4-9.5,32-5.8c6.1,0.8,11.9,5.1,15.1,8c1.1,1,2.4,2.6,3.6,4.5
              c1.7,2.7,0,5.8-3.7,6.9c-0.1,0-0.1,0-0.2,0.1c-1.7,0.5-3,1.6-3.6,2.8l104-18.9v-23.5l-100-38.2c-63.1,27.7-215.5,92.8-278.1,120.3
              C916.4,429.8,909.8,431.6,921.5,435.2z"></path><path class="st0 svg-elem-24" d="M477.8,627.6l-49.2,26.5l186.6,0.6L584,637.4c0,0-22.3,2.3-50.1,0.5l-7.8,2.7c-4.6,0.9-9.7,2-14.3,2.9
              c-3.8-1-7.9-0.4-11.6,0c-3.4-1.6-7.9-2.8-12.9-3.8c0.4-2.9,1.8-5.6,3.4-8.2C486.3,630.4,482,629.1,477.8,627.6z"></path></g></svg></div></div>`;return{c(){t=nt("div"),t.innerHTML=e,this.h()},l(s){t=st(s,"DIV",{class:!0,"data-svelte-h":!0}),te(t)!=="svelte-1lvsw51"&&(t.innerHTML=e),this.h()},h(){it(t,"class","fixed inset-0 bg-black flex items-center justify-center z-[920]")},m(s,n){rt(s,t,n)},d(s){s&&$(t)}}}function Mc(w){let t,e=!w[0]&&Ss();return{c(){e&&e.c(),t=Xe()},l(s){e&&e.l(s),t=Xe()},m(s,n){e&&e.m(s,n),rt(s,t,n)},p(s,[n]){s[0]?e&&(e.d(1),e=null):e||(e=Ss(),e.c(),e.m(t.parentNode,t))},i:pt,o:pt,d(s){s&&$(t),e&&e.d(s)}}}function _c(w,t,e){let s;return fe(w,cn,n=>e(0,s=n)),ks(()=>{document.querySelectorAll("svg").forEach(i=>{i.classList.add("active")})}),[s]}class ia extends Jt{constructor(t){super(),Qt(this,t,_c,Mc,Zt,{})}}function Fc(w){let t,e='<div class="container mx-auto"><div class="mb-4"><h2 class="text-lg font-bold">Kontakt &amp; info</h2> <ul class="mt-2 space-y-1"><li>Telefon: +46(0)707 666 122</li> <li>Email: <a href="mailto:info@cfuk.nu" class="text-blue-400 hover:underline">info@cfuk.nu</a></li> <li>Instagram: <a href="https://instagram.com/Urbankonsthallen_Hangaren" target="_blank" class="text-blue-400 hover:underline">Urbankonsthallen_Hangaren</a></li></ul></div> <div class="mb-4"><h2 class="text-lg font-bold">Öppettider</h2> <ul class="mt-2 space-y-1"><li>Inne i Hangaren:</li> <li>MÅN-FRE 07:00 – 15:00 öppnar M&amp;M portarna.</li> <li>Stäppen utanför Hangaren: Alltid öppet 06.00–23.00</li></ul></div> <div class="mt-6 flex space-x-4"><a href="https://facebook.com" target="_blank" class="hover:text-blue-500">Facebook</a> <a href="https://youtube.com" target="_blank" class="hover:text-red-500">YouTube</a> <a href="https://instagram.com" target="_blank" class="hover:text-pink-500">Instagram</a></div></div>';return{c(){t=nt("footer"),t.innerHTML=e,this.h()},l(s){t=st(s,"FOOTER",{class:!0,"data-svelte-h":!0}),te(t)!=="svelte-ova0g7"&&(t.innerHTML=e),this.h()},h(){it(t,"class","bg-gray-800 text-white p-6")},m(s,n){rt(s,t,n)},p:pt,i:pt,o:pt,d(s){s&&$(t)}}}class oa extends Jt{constructor(t){super(),Qt(this,t,null,Fc,Zt,{})}}function Tc(w){let t,e='<svg class="h-[3rem] inline-block ml-2" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><circle fill="white" cx="36" cy="40.2" r="5"></circle><circle fill="white" cx="64" cy="40.2" r="5"></circle><path fill="white" d="M50 10c-22.1 0-40 17.9-40 40s17.9 40 40 40 40-17.9 40-40-17.9-40-40-40zm0 74.4C31 84.4 15.6 69 15.6 50S31 15.6 50 15.6 84.4 31 84.4 50 69 84.4 50 84.4z"></path><path fill="white" d="M63.5 59.5c-7.4 7.4-19.6 7.4-27 0-1.1-1.1-2.9-1.1-3.9 0-1.1 1.1-1.1 2.9 0 3.9 4.8 4.8 11.1 7.2 17.5 7.2s12.6-2.4 17.5-7.2c1.1-1.1 1.1-2.9 0-3.9-1.2-1.1-3-1.1-4.1 0z"></path></svg>',s,n;return{c(){t=nt("button"),t.innerHTML=e,this.h()},l(i){t=st(i,"BUTTON",{class:!0,"data-svelte-h":!0}),te(t)!=="svelte-17udp5t"&&(t.innerHTML=e),this.h()},h(){it(t,"class","text-white font-bold text-xl h-[3rem] hover:cursor-pointer smile")},m(i,o){rt(i,t,o),s||(n=[Vt(t,"click",w[0]),Vt(t,"keydown",w[5])],s=!0)},p:pt,i:pt,o:pt,d(i){i&&$(t),s=!1,Ws(n)}}}function Pc(w,t,e){let s;fe(w,ke,l=>e(4,s=l));let{loadSmiley:n}=t,{removeSmiley:i}=t,o,r=!1;ks(()=>(e(3,o=new Audio(s)),o.addEventListener("ended",()=>{r=!1,i()}),()=>{o==null||o.pause(),i()}));function c(){r?(o==null||o.pause(),i(),r=!1):(o==null||o.play(),n(),r=!0)}const a=l=>l.key==="Enter"&&c();return w.$$set=l=>{"loadSmiley"in l&&e(1,n=l.loadSmiley),"removeSmiley"in l&&e(2,i=l.removeSmiley)},w.$$.update=()=>{w.$$.dirty&24&&o&&e(3,o.src=s,o)},[c,n,i,o,s,a]}class ra extends Jt{constructor(t){super(),Qt(this,t,Pc,Tc,Zt,{loadSmiley:1,removeSmiley:2})}}function Ms(w,t,e){const s=w.slice();return s[2]=t[e],s[4]=e,s}function _s(w){let t,e=w[2]+"",s;return{c(){t=nt("p"),s=Oe(e),this.h()},l(n){t=st(n,"P",{class:!0});var i=St(t);s=De(i,e),i.forEach($),this.h()},h(){it(t,"class","mb-4 leading-relaxed")},m(n,i){rt(n,t,i),Et(t,s)},p(n,i){i&1&&e!==(e=n[2]+"")&&je(s,e)},d(n){n&&$(t)}}}function Ic(w){let t,e=$e(w[0]),s=[];for(let n=0;n<e.length;n+=1)s[n]=_s(Ms(w,e,n));return{c(){t=nt("div");for(let n=0;n<s.length;n+=1)s[n].c()},l(n){t=st(n,"DIV",{});var i=St(t);for(let o=0;o<s.length;o+=1)s[o].l(i);i.forEach($)},m(n,i){rt(n,t,i);for(let o=0;o<s.length;o+=1)s[o]&&s[o].m(t,null)},p(n,[i]){if(i&1){e=$e(n[0]);let o;for(o=0;o<e.length;o+=1){const r=Ms(n,e,o);s[o]?s[o].p(r,i):(s[o]=_s(r),s[o].c(),s[o].m(t,null))}for(;o<s.length;o+=1)s[o].d(1);s.length=e.length}},i:pt,o:pt,d(n){n&&$(t),En(s,n)}}}function Nc(w){return w?w.replace(/\n+/g," ").split(new RegExp("(?<=[.!?])\\s+")).reduce((t,e,s)=>(s%3===0&&t.push([]),t[t.length-1].push(e),t),[]).map(t=>t.join(" ")):[]}function Rc(w,t,e){let s,{text:n=""}=t;return w.$$set=i=>{"text"in i&&e(1,n=i.text)},w.$$.update=()=>{w.$$.dirty&2&&e(0,s=Nc(n))},[s,n]}class Lc extends Jt{constructor(t){super(),Qt(this,t,Rc,Ic,Zt,{text:1})}}function Fs(w){let t,e,s,n,i="✕",o,r,c=(w[1]||"Artwork")+"",a,l,u,d,f,p;return u=new Lc({props:{text:w[2]||"No description available"}}),{c(){t=nt("div"),e=nt("div"),s=nt("div"),n=nt("button"),n.textContent=i,o=ve(),r=nt("div"),a=Oe(c),l=ve(),Fn(u.$$.fragment),this.h()},l(m){t=st(m,"DIV",{class:!0});var y=St(t);e=st(y,"DIV",{class:!0});var x=St(e);s=st(x,"DIV",{class:!0});var v=St(s);n=st(v,"BUTTON",{class:!0,"data-svelte-h":!0}),te(n)!=="svelte-lsx292"&&(n.textContent=i),o=me(v),r=st(v,"DIV",{class:!0});var g=St(r);a=De(g,c),g.forEach($),l=me(v),_n(u.$$.fragment,v),v.forEach($),x.forEach($),y.forEach($),this.h()},h(){it(n,"class","absolute top-[-2rem] right-[-2rem] p-7 text-white hover:text-gray-300"),it(r,"class","text-xl font-bold mb-6"),it(s,"class","relative"),it(e,"class","absolute backdrop-blur-lg bg-black/50 w-1/2 max-h-[50vh] overflow-auto text-white p-12 border-[1px] border-white/20 rounded-md"),it(t,"class","fixed inset-0 flex items-center justify-center z-[60]")},m(m,y){rt(m,t,y),Et(t,e),Et(e,s),Et(s,n),Et(s,o),Et(s,r),Et(r,a),Et(s,l),Sn(u,s,null),d=!0,f||(p=[Vt(n,"click",w[3]),Vt(e,"click",Mn(w[4])),Vt(t,"click",w[3])],f=!0)},p(m,y){(!d||y&2)&&c!==(c=(m[1]||"Artwork")+"")&&je(a,c);const x={};y&4&&(x.text=m[2]||"No description available"),u.$set(x)},i(m){d||(pe(u.$$.fragment,m),d=!0)},o(m){Pe(u.$$.fragment,m),d=!1},d(m){m&&$(t),Bn(u),f=!1,Ws(p)}}}function Ts(w){let t,e="by",s,n;return{c(){t=nt("span"),t.textContent=e,s=ve(),n=Oe(w[1]),this.h()},l(i){t=st(i,"SPAN",{class:!0,"data-svelte-h":!0}),te(t)!=="svelte-1x3mxhs"&&(t.textContent=e),s=me(i),n=De(i,w[1]),this.h()},h(){it(t,"class","text-sm italic")},m(i,o){rt(i,t,o),rt(i,s,o),rt(i,n,o)},p(i,o){o&2&&je(n,i[1])},d(i){i&&($(t),$(s),$(n))}}}function qc(w){let t,e,s,n,i,o,r=w[0]&&Fs(w),c=w[1]&&w[1]!=="Welcome"&&Ts(w);return{c(){r&&r.c(),t=ve(),e=nt("button"),s=nt("p"),c&&c.c(),this.h()},l(a){r&&r.l(a),t=me(a),e=st(a,"BUTTON",{class:!0});var l=St(e);s=st(l,"P",{class:!0});var u=St(s);c&&c.l(u),u.forEach($),l.forEach($),this.h()},h(){it(s,"class","text-white text-xl fade-in"),it(e,"class","left-0")},m(a,l){r&&r.m(a,l),rt(a,t,l),rt(a,e,l),Et(e,s),c&&c.m(s,null),n=!0,i||(o=Vt(e,"click",w[3]),i=!0)},p(a,[l]){a[0]?r?(r.p(a,l),l&1&&pe(r,1)):(r=Fs(a),r.c(),pe(r,1),r.m(t.parentNode,t)):r&&(Cn(),Pe(r,1,1,()=>{r=null}),zn()),a[1]&&a[1]!=="Welcome"?c?c.p(a,l):(c=Ts(a),c.c(),c.m(s,null)):c&&(c.d(1),c=null)},i(a){n||(pe(r),n=!0)},o(a){Pe(r),n=!1},d(a){a&&($(t),$(e)),r&&r.d(a),c&&c.d(),i=!1,o()}}}function kc(w,t,e){let s,n;fe(w,Le,c=>e(1,s=c)),fe(w,qe,c=>e(2,n=c));let i=!1;const o=()=>{console.log("toggleDescModal"),e(0,i=!i)};function r(c){An.call(this,w,c)}return[i,s,n,o,r]}class ca extends Jt{constructor(t){super(),Qt(this,t,kc,qc,Zt,{})}}export{ca as A,Yc as C,oa as F,ia as L,ra as S,Xc as V,Zc as a,Jc as b,sa as c,ea as d,na as e,ke as f,cn as g,Qc as l,ta as r,$c as s,Kc as v};
